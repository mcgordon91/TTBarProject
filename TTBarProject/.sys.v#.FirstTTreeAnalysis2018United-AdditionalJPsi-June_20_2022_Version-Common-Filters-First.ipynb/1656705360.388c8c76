{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "hawaiian-importance",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.24/06\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <RTaskArenaWrapper>: CPU Bandwith Control Active. Proceeding with 4 threads accordingly\n"
     ]
    }
   ],
   "source": [
    "import ROOT\n",
    "import glob\n",
    "import numpy as np\n",
    "import os\n",
    "ROOT.gROOT.ProcessLine(\".L FTFunctions.cpp\")\n",
    "ROOT.gInterpreter.Declare(\"\"\"\n",
    "    const UInt_t barWidth = 60;\n",
    "    ULong64_t processed = 0, totalEvents = 0;\n",
    "    std::string progressBar;\n",
    "    std::mutex barMutex; \n",
    "    auto registerEvents = [](ULong64_t nIncrement) {totalEvents += nIncrement;};\n",
    "    ROOT::RDF::RResultPtr<ULong64_t> AddProgressBar(ROOT::RDF::RNode df, int everyN=10000, int totalN=100000) {\n",
    "        registerEvents(totalN);\n",
    "        auto c = df.Count();\n",
    "        c.OnPartialResultSlot(everyN, [everyN] (unsigned int slot, ULong64_t &cnt){\n",
    "            std::lock_guard<std::mutex> l(barMutex);\n",
    "            processed += everyN; //everyN captured by value for this lambda\n",
    "            progressBar = \"[\";\n",
    "            for(UInt_t i = 0; i < static_cast<UInt_t>(static_cast<Float_t>(processed)/totalEvents*barWidth); ++i){\n",
    "                progressBar.push_back('|');\n",
    "            }\n",
    "            // escape the '\\' when defined in python string\n",
    "            std::cout << \"\\\\r\" << std::left << std::setw(barWidth) << progressBar << \"] \" << processed << \"/\" << totalEvents << std::flush;\n",
    "        });\n",
    "        return c;\n",
    "    }\n",
    "\"\"\")\n",
    "# Enables multithreading\n",
    "useRange = False\n",
    "if not useRange:\n",
    "    nThreads = 8\n",
    "    ROOT.ROOT.EnableImplicitMT(nThreads)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "nominated-resource",
   "metadata": {},
   "outputs": [],
   "source": [
    "listOfFilesData = glob.glob(\"/eos/user/m/migordon/SWAN_projects/JPsiSkims/SingleMuon/*/*.root\")\n",
    "listOfFilesMonteCarloTTToSemiLeptonic = glob.glob(\"/eos/user/m/migordon/SWAN_projects/JPsiSkims/TTToSemiLeptonic_TuneCP5_13TeV-powheg-pythia8/*/*.root\")\n",
    "listOfFilesMonteCarloTTTo2L2Nu = glob.glob(\"/eos/user/m/migordon/SWAN_projects/JPsiSkims/TTTo2L2Nu_TuneCP5_13TeV-powheg-pythia8/*/*.root\")\n",
    "listOfFilesMonteCarloWJetsToLNu = glob.glob(\"/eos/user/m/migordon/SWAN_projects/JPsiSkims/WJetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8/*/*.root\")\n",
    "listOfFilesMonteCarloST_tW_top = glob.glob(\"/eos/user/m/migordon/SWAN_projects/JPsiSkims/ST_tW_top_5f_inclusiveDecays_TuneCP5_13TeV-powheg-pythia8/*/*.root\")\n",
    "listOfFilesMonteCarloST_tchannel_top = glob.glob(\"/eos/user/m/migordon/SWAN_projects/JPsiSkims/ST_t-channel_top_4f_InclusiveDecays_TuneCP5_13TeV-powheg-madspin-pythia8/*/*.root\")\n",
    "\n",
    "listOfFilesMonteCarloTTToSemiLeptonic = listOfFilesMonteCarloTTToSemiLeptonic[0:1]\n",
    "listOfFilesMonteCarloTTTo2L2Nu = listOfFilesMonteCarloTTTo2L2Nu[0:1]\n",
    "listOfFilesMonteCarloWJetsToLNu = listOfFilesMonteCarloWJetsToLNu[0:1]\n",
    "listOfFilesMonteCarloST_tW_top = listOfFilesMonteCarloST_tW_top[0:1]\n",
    "listOfFilesMonteCarloST_tchannel_top = listOfFilesMonteCarloST_tchannel_top[0:1]\n",
    "\n",
    "dictOfListOfFiles = {\"Data\" : listOfFilesData, \"MonteCarloTTToSemiLeptonic\" : listOfFilesMonteCarloTTToSemiLeptonic, \"MonteCarloTTTo2L2Nu\" : listOfFilesMonteCarloTTTo2L2Nu, \"MonteCarloWJetsToLNu\" : listOfFilesMonteCarloWJetsToLNu, \"MonteCarloST_tW_top\" : listOfFilesMonteCarloST_tW_top, \"MonteCarloST_tchannel_top\" : listOfFilesMonteCarloST_tchannel_top} "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "international-panic",
   "metadata": {},
   "outputs": [],
   "source": [
    "chain = {}\n",
    "meta = {}\n",
    "rdf = {}\n",
    "mrdf = {}\n",
    "nevents = {}\n",
    "sumweight = {}\n",
    "neventsVal = {}\n",
    "\n",
    "mureport = {}\n",
    "\n",
    "rdfPassedIsolatedLeptonTrigger = {}\n",
    "rdfIsolatedLeptonNoHighWeights = {}\n",
    "rdfIsolatedMuonNoHighWeights = {}\n",
    "rdfIsolatedElectronNoHighWeights = {}\n",
    "rdfIsolatedMuonAfterMETCut = {}\n",
    "rdfIsolatedElectronAfterMETCut = {}\n",
    "\n",
    "rdfAnyNumberOfJets = {}\n",
    "rdfTemp = {}\n",
    "rdfJetAndIsolatedLeptonFiltered = {}\n",
    "\n",
    "rdfJPsiMuons = {}\n",
    "\n",
    "\n",
    "hist = {}\n",
    "report = {}\n",
    "\n",
    "\n",
    "nparray = {}\n",
    "nparraynode = {}\n",
    "\n",
    "# Muon_pfIsoId is PFIso ID from miniAOD selector (1=PFIsoVeryLoose, 2=PFIsoLoose, 3=PFIsoMedium, 4=PFIsoTight, 5=PFIsoVeryTight, 6=PFIsoVeryVeryTight)\n",
    "LeadingIsolatedMuonMask = \"Muon_pt > 30 && abs(Muon_eta) < 2.4 && Muon_mediumId == true && Muon_pfIsoId >= 4\"\n",
    "# SubleadingIsolatedMuonMask = \"\"\n",
    "LeadingIsolatedElectronMask = \"Electron_pt > 30 && abs(Electron_eta < 2.4) && Electron_cutBased == 4\"\n",
    "# SubleadingIsolatedElectronMask = \"\"\n",
    "#DimuonMask = \"\"\n",
    "#DielectronMask = \"\"\n",
    "#MuonElectronMask = \"\"\n",
    "JetMask = \"ROOT::VecOps::RVec<Int_t> jmask = (Jet_pt >= 30 && abs(Jet_eta) <= 2.5 && Jet_jetId >= 2); \"\\\n",
    "                          \"for(int i=0; i < LeadingIsolatedMuon_pt.size(); ++i){\"\\\n",
    "                              \"ROOT::VecOps::RVec<Float_t> dr;\"\\\n",
    "                              \"for(int j=0; j < jmask.size(); ++j){\"\\\n",
    "                                  \"dr.push_back(ROOT::VecOps::DeltaR(Jet_eta.at(j), LeadingIsolatedMuon_eta.at(i), Jet_phi.at(j), LeadingIsolatedMuon_phi.at(i)));}\"\\\n",
    "                                  \"jmask = jmask && dr >= 0.4;\"\\\n",
    "                                  \"dr.clear();}\"\\\n",
    "                          \"return jmask;\"\n",
    "JPsiCandidateMask = \"Muon_pt > 3 && abs(Muon_eta) <= 2.4 && Muon_mediumId == true && leading_isolated_muon_mask == false\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f2470268",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RCutFlowReport> object at 0xaea0ff0>\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available\n",
      "Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available\n",
      "Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available\n",
      "Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available\n",
      "Warning in <TClass::Init>: no dictionary for class __pair_base<edm::Hash<1>,edm::ParameterSetBlob> is available\n",
      "Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available\n"
     ]
    }
   ],
   "source": [
    "for sample, fileList in dictOfListOfFiles.items():\n",
    "    \n",
    "    if sample == 'Data':\n",
    "        vecList = ROOT.std.vector(str)()\n",
    "\n",
    "        for element in dictOfListOfFiles['Data']:\n",
    "            vecList.push_back(element)\n",
    "\n",
    "        rdf['Data'] = ROOT.ROOT.RDataFrame(\"Events\", vecList)    \n",
    "        mureport['Data'] = rdf['Data'].Report()\n",
    "        \n",
    "        print(rdf['Data'].Report())\n",
    "        mrdf['Data'] = ROOT.ROOT.RDataFrame(\"Runs\", vecList)\n",
    "        \n",
    "        if useRange:\n",
    "            rdf['Data'] = rdf['Data'].Range(5000)\n",
    "            nrange = 5000\n",
    "            printcode = ' if(rdfentry_ % 5000 == 0) { std::cout << \"Processed entry \" << rdfentry_ << \"/' + str(nrange) + '\" << std::endl; } return rdfentry_;'\n",
    "            print(\"Data run\")\n",
    "            rdf['Data'] = rdf['Data'].Define(\"my_rdfentry\", printcode)\n",
    "            \n",
    "\n",
    "        \n",
    "    else:\n",
    "        chain[sample] = ROOT.TChain(\"Events\")\n",
    "        meta[sample] = ROOT.TChain(\"Runs\")\n",
    "\n",
    "        for file in fileList:\n",
    "            \n",
    "            chain[sample].Add(file)\n",
    "            meta[sample].Add(file)\n",
    "\n",
    "        rdf[sample] = ROOT.ROOT.RDataFrame(chain[sample])\n",
    "        mureport[sample] = rdf[sample].Report()\n",
    "        mrdf[sample] = ROOT.ROOT.RDataFrame(meta[sample])\n",
    "        \n",
    "        if useRange:\n",
    "            rdf[sample] = rdf[sample].Range(5000)\n",
    "            \n",
    "            printcode = ' if(rdfentry_ % 5000 == 0) { std::cout << \"Processed entry \" << rdfentry_ << \" \" << rdfslot_ << std::endl; } return rdfentry_;'\n",
    "            print(\"MC run\")\n",
    "            rdf[sample] = rdf[sample].Define(\"my_rdfentry\", printcode)\n",
    "        \n",
    "        nevents[sample] = mrdf[sample].Sum(\"genEventCount\")\n",
    "        sumweight[sample] = mrdf[sample].Sum(\"genEventSumw\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "paperback-video",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Semileptonic ttbar xsection: 364.3109\n",
    "#Single mu trigger for 2017 (B,C,D,E,F): \"HLT_IsoMu27\"\n",
    "#\"HLT_Ele35_WPTight_Gsf\"\n",
    "#lumiDict = {\"2017\": 41.53, \"2018\": 59.97}\n",
    "wgtFormula = {}\n",
    "\n",
    "# wgtFormula used to weight each event\n",
    "# XS = Literature Cross section of the process of interest (in picobarnes; the 1000 converts to femotobarnes), lumi = presumed luminosity of the data one is normalizing against; XS * lumi = # of expected events;\n",
    "# genWeight = quantity stored in every event which comes from the Monte Carlo generator telling you what the value of the generated event is (usually close to 1); it can be + or -; it also contains matching\n",
    "#     effeciency; tells you the Monte Carlo defined value of the event\n",
    "# sW = sum of weights; normalizes the genWeight\n",
    "lumiDict = {\"2018\": 59.97} #  brilcalc lumi --normtag /cvmfs/cms-bril.cern.ch/cms-lumi-pog/Normtags/normtag_PHYSICS.json -u /fb --begin 302031 --end 302663 --hltpath \"HLT_IsoMu27*\"\n",
    "wgtFormula['Data'] = \"1\"\n",
    "wgtFormula['MonteCarloTTToSemiLeptonic'] = \"{XS:f} * {lumi:f} * 1000 * genWeight / {sW:f}\".format(XS=364.31, lumi=lumiDict[\"2018\"], sW=float(sumweight['MonteCarloTTToSemiLeptonic'].GetValue()))\n",
    "wgtFormula['MonteCarloTTTo2L2Nu'] = \"{XS:f} * {lumi:f} * 1000 * genWeight / {sW:f}\".format(XS=87.33, lumi=lumiDict[\"2018\"], sW=float(sumweight['MonteCarloTTTo2L2Nu'].GetValue()))\n",
    "wgtFormula['MonteCarloWJetsToLNu'] = \"{XS:f} * {lumi:f} * 1000 * genWeight / {sW:f}\".format(XS=61526.7, lumi=lumiDict[\"2018\"], sW=float(sumweight['MonteCarloWJetsToLNu'].GetValue()))\n",
    "wgtFormula['MonteCarloST_tW_top'] = \"{XS:f} * {lumi:f} * 1000 * genWeight / {sW:f}\".format(XS=71.7, lumi=lumiDict[\"2018\"], sW=float(sumweight['MonteCarloST_tW_top'].GetValue()))\n",
    "wgtFormula['MonteCarloST_tchannel_top'] = \"{XS:f} * {lumi:f} * 1000 * genWeight / {sW:f}\".format(XS=130, lumi=lumiDict[\"2018\"], sW=float(sumweight['MonteCarloST_tchannel_top'].GetValue()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "better-deputy",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cpp_code = \"\"\"\n",
    "typedef ROOT::VecOps::RVec<Float_t>                        RVec_f;\n",
    "typedef ROOT::VecOps::RVec<Int_t>                          RVec_i;\n",
    "typedef ROOT::VecOps::RVec<Long_t>                         RVec_l;\n",
    "\n",
    "class MatchOppositelyChargedMuons\n",
    "{\n",
    "    private:\n",
    "        RVec_f Paired_Muon_pt;\n",
    "        RVec_f Paired_Muon_eta;\n",
    "        RVec_f Paired_Muon_phi;\n",
    "        RVec_f Paired_Muon_mass;\n",
    "        RVec_i Paired_Muon_charge;\n",
    "        long Paired_EventNumber;\n",
    "        int FlagPair;\n",
    "        RVec_f Isolated_Muon_pt;\n",
    "        RVec_f Isolated_Muon_eta;\n",
    "        RVec_f Isolated_Muon_phi;\n",
    "        RVec_f Isolated_Muon_mass;\n",
    "        RVec_i Isolated_Muon_charge;\n",
    "\n",
    "\n",
    "    public:\n",
    "    MatchOppositelyChargedMuons(RVec_f Paired_Muon_pt, RVec_f Paired_Muon_eta, RVec_f Paired_Muon_phi, RVec_f Paired_Muon_mass, RVec_i Paired_Muon_charge, long Paired_EventNumber, int FlagPair);\n",
    "        MatchOppositelyChargedMuons(RVec_f Paired_Muon_pt, RVec_f Paired_Muon_eta, RVec_f Paired_Muon_phi, RVec_f Paired_Muon_mass, RVec_i Paired_Muon_charge, long Paired_EventNumber, int FlagPair, RVec_f Isolated_Muon_pt, RVec_f Isolated_Muon_eta, RVec_f Isolated_Muon_phi, RVec_f Isolated_Muon_mass, RVec_i Isolated_Muon_charge);\n",
    "        RVec_f InvariantMassCalculator();\n",
    "        RVec_f OppositelyChargedMuonInvariantMassCalculator();\n",
    "        RVec_f ThreeMuonInvariantMassCalculator();\n",
    "        RVec_f DeltaEtaCalculator();\n",
    "        RVec_f DeltaPhiCalculator();\n",
    "        RVec_f DeltaRCalculator();\n",
    "        int ReturnFlagPair();\n",
    "};\n",
    "\n",
    "MatchOppositelyChargedMuons::MatchOppositelyChargedMuons(RVec_f Paired_Muon_pt, RVec_f Paired_Muon_eta, RVec_f Paired_Muon_phi, RVec_f Paired_Muon_mass, RVec_i Paired_Muon_charge, long Paired_EventNumber, int FlagPair)\n",
    "{\n",
    "    this->Paired_Muon_pt = Paired_Muon_pt;\n",
    "    this->Paired_Muon_eta = Paired_Muon_eta;\n",
    "    this->Paired_Muon_phi = Paired_Muon_phi;\n",
    "    this->Paired_Muon_mass = Paired_Muon_mass;\n",
    "    this->Paired_Muon_charge = Paired_Muon_charge;\n",
    "    this->Paired_EventNumber = Paired_EventNumber;\n",
    "    this->FlagPair = FlagPair;\n",
    "    this->Isolated_Muon_pt = {};\n",
    "    this->Isolated_Muon_eta = {};\n",
    "    this->Isolated_Muon_phi = {};\n",
    "    this->Isolated_Muon_mass = {};\n",
    "    this->Isolated_Muon_charge = {};\n",
    "}\n",
    "\n",
    "MatchOppositelyChargedMuons::MatchOppositelyChargedMuons(RVec_f Paired_Muon_pt, RVec_f Paired_Muon_eta, RVec_f Paired_Muon_phi, RVec_f Paired_Muon_mass, RVec_i Paired_Muon_charge, long Paired_EventNumber, int FlagPair, RVec_f Isolated_Muon_pt, RVec_f Isolated_Muon_eta, RVec_f Isolated_Muon_phi, RVec_f Isolated_Muon_mass, RVec_i Isolated_Muon_charge)\n",
    "{\n",
    "    this->Paired_Muon_pt = Paired_Muon_pt;\n",
    "    this->Paired_Muon_eta = Paired_Muon_eta;\n",
    "    this->Paired_Muon_phi = Paired_Muon_phi;\n",
    "    this->Paired_Muon_mass = Paired_Muon_mass;\n",
    "    this->Paired_Muon_charge = Paired_Muon_charge;\n",
    "    this->Paired_EventNumber = Paired_EventNumber;\n",
    "    this->FlagPair = FlagPair;\n",
    "    this->Isolated_Muon_pt = Isolated_Muon_pt;\n",
    "    this->Isolated_Muon_eta = Isolated_Muon_eta;\n",
    "    this->Isolated_Muon_phi = Isolated_Muon_phi;\n",
    "    this->Isolated_Muon_mass = Isolated_Muon_mass;\n",
    "    this->Isolated_Muon_charge = Isolated_Muon_charge;\n",
    "}\n",
    "\n",
    "\n",
    "/* This function matches each muon with oppositely charged muons. */\n",
    "RVec_f MatchOppositelyChargedMuons::OppositelyChargedMuonInvariantMassCalculator()\n",
    "{ \n",
    "    RVec_f pt {};\n",
    "    RVec_f eta {};\n",
    "    RVec_f phi {};\n",
    "    RVec_f mass {};\n",
    "    \n",
    "    int FirstMuonCharge = 0;\n",
    "    int SecondMuonCharge = 0;\n",
    "    \n",
    "    RVec_f InvariantMasses {};\n",
    "    \n",
    "    float im = 0;\n",
    " \n",
    "    /* Loop over the set of muons to determine which muons have +1 charge, then match them with all the ones with -1 charge. */\n",
    "    for(int i = 0; i < this->Paired_Muon_charge.size(); i++)\n",
    "    {    \n",
    "\n",
    "        FirstMuonCharge = this->Paired_Muon_charge[i];\n",
    "        \n",
    "        /* If charges are opposite, calculate the invariant mass of them */\n",
    "        for(int j = i+1; j < this->Paired_Muon_charge.size(); j++)\n",
    "        {\n",
    "            SecondMuonCharge = this->Paired_Muon_charge[j];\n",
    "            \n",
    "            if(FirstMuonCharge * SecondMuonCharge == -1)\n",
    "            {\n",
    "                pt.push_back(Paired_Muon_pt[i]);\n",
    "                eta.push_back(Paired_Muon_eta[i]);\n",
    "                phi.push_back(Paired_Muon_phi[i]);\n",
    "                mass.push_back(Paired_Muon_mass[i]);\n",
    "                    \n",
    "                pt.push_back(Paired_Muon_pt[j]);\n",
    "                eta.push_back(Paired_Muon_eta[j]);\n",
    "                phi.push_back(Paired_Muon_phi[j]);\n",
    "                mass.push_back(Paired_Muon_mass[j]);\n",
    "                    \n",
    "                im = ROOT::VecOps::InvariantMass(pt, eta, phi, mass);\n",
    "                \n",
    "                InvariantMasses.push_back(im);\n",
    "                \n",
    "                this->FlagPair = 1;\n",
    "                    \n",
    "                pt.clear();\n",
    "                eta.clear();\n",
    "                phi.clear();\n",
    "                mass.clear();\n",
    "            }\n",
    "        }\n",
    "    }\n",
    "        \n",
    "    return InvariantMasses;\n",
    "}\n",
    "\n",
    "\n",
    "RVec_f MatchOppositelyChargedMuons::ThreeMuonInvariantMassCalculator()\n",
    "{ \n",
    "    RVec_f pt {};\n",
    "    RVec_f eta {};\n",
    "    RVec_f phi {};\n",
    "    RVec_f mass {};\n",
    "    \n",
    "    int FirstMuonCharge = 0;\n",
    "    int SecondMuonCharge = 0;\n",
    "    \n",
    "    RVec_f InvariantMasses {};\n",
    "    \n",
    "    float im = 0;\n",
    " \n",
    "    for(int k = 0; k < this->Isolated_Muon_pt.size(); k++)\n",
    "    {\n",
    "    \n",
    "        /* Loop over the set of muons to determine which muons have +1 charge, then match them with all the ones with -1 charge. */\n",
    "        for(int i = 0; i < this->Paired_Muon_charge.size(); i++)\n",
    "        {    \n",
    "\n",
    "            FirstMuonCharge = this->Paired_Muon_charge[i];\n",
    "\n",
    "            /* If charges are opposite, calculate the invariant mass of them */\n",
    "            for(int j = i+1; j < this->Paired_Muon_charge.size(); j++)\n",
    "            {\n",
    "                SecondMuonCharge = this->Paired_Muon_charge[j];\n",
    "\n",
    "                if(FirstMuonCharge * SecondMuonCharge == -1)\n",
    "                {\n",
    "                    pt.push_back(Paired_Muon_pt[i]);\n",
    "                    eta.push_back(Paired_Muon_eta[i]);\n",
    "                    phi.push_back(Paired_Muon_phi[i]);\n",
    "                    mass.push_back(Paired_Muon_mass[i]);\n",
    "\n",
    "                    pt.push_back(Paired_Muon_pt[j]);\n",
    "                    eta.push_back(Paired_Muon_eta[j]);\n",
    "                    phi.push_back(Paired_Muon_phi[j]);\n",
    "                    mass.push_back(Paired_Muon_mass[j]);\n",
    "                    \n",
    "                    pt.push_back(Isolated_Muon_pt[k]);\n",
    "                    eta.push_back(Isolated_Muon_eta[k]);\n",
    "                    phi.push_back(Isolated_Muon_phi[k]);\n",
    "                    mass.push_back(Isolated_Muon_mass[k]);\n",
    "\n",
    "                    im = ROOT::VecOps::InvariantMass(pt, eta, phi, mass);\n",
    "\n",
    "                    InvariantMasses.push_back(im);\n",
    "\n",
    "                    this->FlagPair = 1;\n",
    "\n",
    "                    pt.clear();\n",
    "                    eta.clear();\n",
    "                    phi.clear();\n",
    "                    mass.clear();\n",
    "                }\n",
    "            }\n",
    "        }\n",
    "    }\n",
    "        \n",
    "    return InvariantMasses;\n",
    "}\n",
    "\n",
    "\n",
    "RVec_f MatchOppositelyChargedMuons::DeltaEtaCalculator()\n",
    "{ \n",
    "    float DeltaEtaIndividual = 0;\n",
    "    \n",
    "    RVec_f DeltaEtaRVec {};\n",
    "    \n",
    "    for(int i = 0; i < this->Isolated_Muon_eta.size(); i++)\n",
    "    {\n",
    "    \n",
    "        for(int j = 0; j < this->Paired_Muon_eta.size(); j++)\n",
    "        {    \n",
    "                    DeltaEtaIndividual = this->Isolated_Muon_eta[i] - this->Paired_Muon_eta[j];\n",
    "\n",
    "                    DeltaEtaRVec.push_back(DeltaEtaIndividual);\n",
    "        }\n",
    "    }\n",
    "        \n",
    "    return DeltaEtaRVec;\n",
    "}\n",
    "\n",
    "\n",
    "RVec_f MatchOppositelyChargedMuons::DeltaPhiCalculator()\n",
    "{ \n",
    "    RVec_f PhiAll {};\n",
    "    RVec_f PhiJPsi {};\n",
    "    \n",
    "    RVec_f DeltaPhiIndividual {};\n",
    "    \n",
    "    RVec_f DeltaPhiRVec {};\n",
    "    \n",
    "    for(int i = 0; i < this->Isolated_Muon_phi.size(); i++)\n",
    "    {\n",
    "    \n",
    "        for(int j = 0; j < this->Paired_Muon_phi.size(); j++)\n",
    "        {    \n",
    "\n",
    "                    PhiAll.push_back(this->Isolated_Muon_phi[i]);\n",
    "\n",
    "                    PhiJPsi.push_back(this->Paired_Muon_phi[j]);\n",
    "\n",
    "                    DeltaPhiIndividual = ROOT::VecOps::DeltaPhi(PhiAll, PhiJPsi);\n",
    "\n",
    "                    for(int k = 0; k < DeltaPhiIndividual.size(); k++)\n",
    "                    {\n",
    "                        DeltaPhiRVec.push_back(DeltaPhiIndividual[k]);\n",
    "                    }\n",
    "\n",
    "                    PhiAll.clear();\n",
    "                    PhiJPsi.clear();\n",
    "        }\n",
    "    }\n",
    "        \n",
    "    return DeltaPhiRVec;\n",
    "}\n",
    "\n",
    "\n",
    "RVec_f MatchOppositelyChargedMuons::DeltaRCalculator()\n",
    "{ \n",
    "    RVec_f EtaAll {};\n",
    "    RVec_f PhiAll {};\n",
    "    RVec_f EtaJPsi {};\n",
    "    RVec_f PhiJPsi {};\n",
    "    \n",
    "    RVec_f DeltaRIndividual {};\n",
    "    \n",
    "    RVec_f DeltaRRVec {};\n",
    "    \n",
    "    for(int i = 0; i < this->Isolated_Muon_phi.size(); i++)\n",
    "    {\n",
    "    \n",
    "        for(int j = 0; j < this->Paired_Muon_phi.size(); j++)\n",
    "        {    \n",
    "                    EtaAll.push_back(this->Isolated_Muon_eta[i]);\n",
    "                    PhiAll.push_back(this->Isolated_Muon_phi[i]);\n",
    "                    \n",
    "                    EtaJPsi.push_back(this->Paired_Muon_eta[j]);\n",
    "                    PhiJPsi.push_back(this->Paired_Muon_phi[j]);\n",
    "\n",
    "                    DeltaRIndividual = ROOT::VecOps::DeltaR(EtaAll, EtaJPsi, PhiAll, PhiJPsi);\n",
    "\n",
    "                    for(int k = 0; k < DeltaRIndividual.size(); k++)\n",
    "                    {\n",
    "                        DeltaRRVec.push_back(DeltaRIndividual[k]);\n",
    "                    }\n",
    "\n",
    "                    EtaAll.clear();\n",
    "                    PhiAll.clear();\n",
    "                    EtaJPsi.clear();\n",
    "                    PhiJPsi.clear();\n",
    "        }\n",
    "    }\n",
    "        \n",
    "    return DeltaRRVec;\n",
    "}\n",
    "\n",
    "\n",
    "int MatchOppositelyChargedMuons::ReturnFlagPair()\n",
    "{\n",
    "    return this->FlagPair;\n",
    "}\n",
    "\"\"\"\n",
    "\n",
    "ROOT.gInterpreter.Declare(cpp_code)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ce5dd994",
   "metadata": {},
   "outputs": [],
   "source": [
    "def IsolatedLeptonSelection():\n",
    "\n",
    "    for sample in dictOfListOfFiles:       \n",
    "\n",
    "        rdfPassedIsolatedLeptonTrigger[sample] = rdf[sample].Filter(\"HLT_IsoMu24 == true\", \"HLTLeptonTrigger\")\\\n",
    "            .Define(\"LumiXS\",wgtFormula[sample])\\\n",
    "            .Define(\"leading_isolated_muon_mask\", LeadingIsolatedMuonMask)\\\n",
    "            .Define(\"leading_isolated_electron_mask\", LeadingIsolatedElectronMask)\\\n",
    "            .Define(\"jpsi_mu_candidate_mask\", JPsiCandidateMask)\\\n",
    "            .Define(\"mu_veto\", \"Muon_pt > 10 && abs(Muon_eta) < 2.4 && Muon_looseId == true && Muon_pfIsoId >= 4 && leading_isolated_muon_mask == false\")\\\n",
    "            #^ HLT_Ele32_WPTight_Gsf == true\", \"HLTLeptonTrigger\")\\\n",
    "        if sample == 'Data':\n",
    "            rdfIsolatedMuonNoHighWeights[sample] = rdfPassedIsolatedLeptonTrigger[sample].Filter(\"Sum(leading_isolated_muon_mask) == 1\", \"Events with exactly two isolated muons and opposite charge are vetoed.\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_pt\", \"Muon_pt[leading_isolated_muon_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_eta\", \"Muon_eta[leading_isolated_muon_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_phi\", \"Muon_phi[leading_isolated_muon_mask].at(0, -5)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_mass\", \"Muon_mass[leading_isolated_muon_mask].at(0, -2.71)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_charge\", \"Muon_charge[leading_isolated_muon_mask].at(0, -5)\")\\\n",
    "                .Define(\"IsolatedMuon_pt\", \"Muon_pt[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_eta\", \"Muon_eta[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_phi\", \"Muon_phi[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_mass\", \"Muon_mass[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_charge\", \"Muon_charge[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_pdgId\", \"Muon_pdgId[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pt\", \"Electron_pt[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_eta\", \"Electron_eta[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_phi\", \"Electron_phi[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_mass\", \"Electron_mass[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_charge\", \"Electron_charge[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pdgId\", \"Electron_pdgId[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedLepton_pt\", \"Concatenate(IsolatedMuon_pt, IsolatedElectron_pt)\")\\\n",
    "                .Define(\"IsolatedLepton_eta\", \"Concatenate(IsolatedMuon_eta, IsolatedElectron_eta)\")\\\n",
    "                .Define(\"IsolatedLepton_phi\", \"Concatenate(IsolatedMuon_phi, IsolatedElectron_phi)\")\\\n",
    "                .Define(\"IsolatedLepton_mass\", \"Concatenate(IsolatedMuon_mass, IsolatedElectron_mass)\")\\\n",
    "                .Define(\"IsolatedLepton_charge\", \"Concatenate(IsolatedMuon_charge, IsolatedElectron_charge)\")\\\n",
    "                .Define(\"IsolatedLepton_pdgid\", \"Concatenate(IsolatedMuon_pdgId, IsolatedElectron_pdgId)\")\\\n",
    "                .Define(\"METBeforeMETCut\", \"MET_pt\")\n",
    "            \n",
    "            rdfIsolatedElectronNoHighWeights[sample] = rdfPassedIsolatedLeptonTrigger[sample].Filter(\"!(Muon_pt[leading_isolated_muon_mask].size() == 2 && Muon_charge[leading_isolated_muon_mask].at(0, 3) * Muon_charge[leading_isolated_muon_mask].at(1, 5) == -1) && !(Electron_pt[leading_isolated_electron_mask].size() == 2 && Electron_charge[leading_isolated_electron_mask].at(0, 3) * Electron_charge[leading_isolated_electron_mask].at(1, 5) == -1)\", \"Events with exactly two isolated electrons and opposite charge are vetoed.\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_pt\", \"Electron_pt[leading_isolated_electron_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_eta\", \"Electron_eta[leading_isolated_electron_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_phi\", \"Electron_phi[leading_isolated_electron_mask].at(0, -5)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_mass\", \"Electron_mass[leading_isolated_electron_mask].at(0, -2.71)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_charge\", \"Electron_charge[leading_isolated_electron_mask].at(0, -5)\")\\\n",
    "                .Define(\"IsolatedMuon_pt\", \"Muon_pt[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_eta\", \"Muon_eta[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_phi\", \"Muon_phi[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_mass\", \"Muon_mass[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_charge\", \"Muon_charge[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_pdgId\", \"Muon_pdgId[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pt\", \"Electron_pt[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_eta\", \"Electron_eta[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_phi\", \"Electron_phi[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_mass\", \"Electron_mass[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_charge\", \"Electron_charge[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pdgId\", \"Electron_pdgId[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedLepton_pt\", \"Concatenate(IsolatedMuon_pt, IsolatedElectron_pt)\")\\\n",
    "                .Define(\"IsolatedLepton_eta\", \"Concatenate(IsolatedMuon_eta, IsolatedElectron_eta)\")\\\n",
    "                .Define(\"IsolatedLepton_phi\", \"Concatenate(IsolatedMuon_phi, IsolatedElectron_phi)\")\\\n",
    "                .Define(\"IsolatedLepton_mass\", \"Concatenate(IsolatedMuon_mass, IsolatedElectron_mass)\")\\\n",
    "                .Define(\"IsolatedLepton_charge\", \"Concatenate(IsolatedMuon_charge, IsolatedElectron_charge)\")\\\n",
    "                .Define(\"IsolatedLepton_pdgid\", \"Concatenate(IsolatedMuon_pdgId, IsolatedElectron_pdgId)\")\\\n",
    "                .Define(\"METBeforeMETCut\", \"MET_pt\")\n",
    "\n",
    "\n",
    "        # Change criteria to nothing below or above 4 standard deviations from the mean\n",
    "        else:\n",
    "            rdfIsolatedMuonNoHighWeights[sample] = rdfPassedIsolatedLeptonTrigger[sample].Filter(\"genWeight < 1000 && Sum(leading_isolated_muon_mask) == 1\", \"No Abnormal Weights\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_pt\", \"Muon_pt[leading_isolated_muon_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_eta\", \"Muon_eta[leading_isolated_muon_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_phi\", \"Muon_phi[leading_isolated_muon_mask].at(0, -5)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_mass\", \"Muon_mass[leading_isolated_muon_mask].at(0, -2.71)\")\\\n",
    "                .Define(\"LeadingIsolatedMuon_charge\", \"Muon_charge[leading_isolated_muon_mask].at(0, -5)\")\\\n",
    "                .Define(\"IsolatedMuon_pt\", \"Muon_pt[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_eta\", \"Muon_eta[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_phi\", \"Muon_phi[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_mass\", \"Muon_mass[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_charge\", \"Muon_charge[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_pdgId\", \"Muon_pdgId[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pt\", \"Electron_pt[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_eta\", \"Electron_eta[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_phi\", \"Electron_phi[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_mass\", \"Electron_mass[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_charge\", \"Electron_charge[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pdgId\", \"Electron_pdgId[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedLepton_pt\", \"Concatenate(IsolatedMuon_pt, IsolatedElectron_pt)\")\\\n",
    "                .Define(\"IsolatedLepton_eta\", \"Concatenate(IsolatedMuon_eta, IsolatedElectron_eta)\")\\\n",
    "                .Define(\"IsolatedLepton_phi\", \"Concatenate(IsolatedMuon_phi, IsolatedElectron_phi)\")\\\n",
    "                .Define(\"IsolatedLepton_mass\", \"Concatenate(IsolatedMuon_mass, IsolatedElectron_mass)\")\\\n",
    "                .Define(\"IsolatedLepton_charge\", \"Concatenate(IsolatedMuon_charge, IsolatedElectron_charge)\")\\\n",
    "                .Define(\"IsolatedLepton_pdgid\", \"Concatenate(IsolatedMuon_pdgId, IsolatedElectron_pdgId)\")\\\n",
    "                .Define(\"METBeforeMETCut\", \"MET_pt\")\n",
    "\n",
    "            rdfIsolatedElectronNoHighWeights[sample] = rdfPassedIsolatedLeptonTrigger[sample].Filter(\"genWeight < 1000 && !(Muon_pt[leading_isolated_muon_mask].size() == 2 && Muon_charge[leading_isolated_muon_mask].at(0, 3) * Muon_charge[leading_isolated_muon_mask].at(1, 5) == -1) && !(Electron_pt[leading_isolated_electron_mask].size() == 2 && Electron_charge[leading_isolated_electron_mask].at(0, 3) * Electron_charge[leading_isolated_electron_mask].at(1, 5) == -1)\", \"No Abnormal Weights\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_pt\", \"Electron_pt[leading_isolated_electron_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_eta\", \"Electron_eta[leading_isolated_electron_mask].at(0, -10)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_phi\", \"Electron_phi[leading_isolated_electron_mask].at(0, -5)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_mass\", \"Electron_mass[leading_isolated_electron_mask].at(0, -2.71)\")\\\n",
    "                .Define(\"LeadingIsolatedElectron_charge\", \"Electron_charge[leading_isolated_electron_mask].at(0, -5)\")\\\n",
    "                .Define(\"IsolatedMuon_pt\", \"Muon_pt[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_eta\", \"Muon_eta[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_phi\", \"Muon_phi[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_mass\", \"Muon_mass[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_charge\", \"Muon_charge[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedMuon_pdgId\", \"Muon_pdgId[leading_isolated_muon_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pt\", \"Electron_pt[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_eta\", \"Electron_eta[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_phi\", \"Electron_phi[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_mass\", \"Electron_mass[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_charge\", \"Electron_charge[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedElectron_pdgId\", \"Electron_pdgId[leading_isolated_electron_mask]\")\\\n",
    "                .Define(\"IsolatedLepton_pt\", \"Concatenate(IsolatedMuon_pt, IsolatedElectron_pt)\")\\\n",
    "                .Define(\"IsolatedLepton_eta\", \"Concatenate(IsolatedMuon_eta, IsolatedElectron_eta)\")\\\n",
    "                .Define(\"IsolatedLepton_phi\", \"Concatenate(IsolatedMuon_phi, IsolatedElectron_phi)\")\\\n",
    "                .Define(\"IsolatedLepton_mass\", \"Concatenate(IsolatedMuon_mass, IsolatedElectron_mass)\")\\\n",
    "                .Define(\"IsolatedLepton_charge\", \"Concatenate(IsolatedMuon_charge, IsolatedElectron_charge)\")\\\n",
    "                .Define(\"IsolatedLepton_pdgid\", \"Concatenate(IsolatedMuon_pdgId, IsolatedElectron_pdgId)\")\\\n",
    "                .Define(\"METBeforeMETCut\", \"MET_pt\")\n",
    "\n",
    "        rdfIsolatedMuonAfterMETCut[sample] = rdfIsolatedMuonNoHighWeights[sample].Filter(\"MET_pt > 30\", \"Muon MET Greater than 30 GeV\")\\\n",
    "            .Define(\"METAfterMETCut\", \"MET_pt\")\n",
    "        \n",
    "        rdfIsolatedElectronAfterMETCut[sample] = rdfIsolatedElectronNoHighWeights[sample].Filter(\"MET_pt > 30\", \"Electron MET Greater than 30 GeV\")\\\n",
    "            .Define(\"METAfterMETCut\", \"MET_pt\")\n",
    "        \n",
    "    return rdfIsolatedMuonAfterMETCut, rdfIsolatedElectronAfterMETCut"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "54881930",
   "metadata": {},
   "outputs": [],
   "source": [
    "rdfIsolatedMuonAfterMETCut, rdfIsolatedElectronAfterMETCut = IsolatedLeptonSelection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0ea54eba",
   "metadata": {},
   "outputs": [],
   "source": [
    "def JetSelection():\n",
    "\n",
    "    for sample in dictOfListOfFiles:\n",
    "\n",
    "        rdfAnyNumberOfJets[sample] = rdfIsolatedMuonAfterMETCut[sample]\\\n",
    "            .Define(\"jet_mask\", \"ROOT::VecOps::RVec<Int_t> jmask = (Jet_pt >= 30 && abs(Jet_eta) <= 2.5 && Jet_jetId >= 2); \"\\\n",
    "                          \"for(int i=0; i < IsolatedLepton_pt.size(); ++i){\"\\\n",
    "                              \"ROOT::VecOps::RVec<Float_t> dr;\"\\\n",
    "                              \"for(int j=0; j < jmask.size(); ++j){\"\\\n",
    "                                  \"dr.push_back(ROOT::VecOps::DeltaR(Jet_eta.at(j), IsolatedLepton_eta.at(i), Jet_phi.at(j), IsolatedLepton_phi.at(i)));}\"\\\n",
    "                                  \"jmask = jmask && dr >= 0.4;\"\\\n",
    "                                  \"dr.clear();}\"\\\n",
    "                          \"return jmask;\")\\\n",
    "            .Define(\"Num_Jets\", \"Jet_pt[jet_mask].size()\")\n",
    "        \n",
    "        rdfJetAndIsolatedLeptonFiltered[sample] = rdfAnyNumberOfJets[sample].Filter(\"Num_Jets >= 2\", \"At Least Two Jets\")\\\n",
    "            .Define(\"SJet1_pt\", \"Jet_pt[jet_mask].size() > 0 ? Jet_pt[jet_mask].at(0) : -500\")\\\n",
    "            .Define(\"SJet2_pt\", \"Jet_pt[jet_mask].size() > 1 ? Jet_pt[jet_mask].at(1) : -500\")\\\n",
    "            .Define(\"SJet1_eta\", \"Jet_eta[jet_mask].size() > 0 ? Jet_eta[jet_mask].at(0) : 500\")\\\n",
    "            .Define(\"SJet2_eta\", \"Jet_eta[jet_mask].size() > 1 ? Jet_eta[jet_mask].at(1) : 500\")\\\n",
    "            .Define(\"SJet1_phi\", \"Jet_phi[jet_mask].size() > 0 ? Jet_phi[jet_mask].at(0) : 500\")\\\n",
    "            .Define(\"SJet2_phi\", \"Jet_phi[jet_mask].size() > 1 ? Jet_phi[jet_mask].at(1) : 500\")\\\n",
    "            .Define(\"MediumBJetMask\", \"Jet_btagDeepFlavB > 0.3033 && jet_mask\" )\\\n",
    "            .Define(\"MTofMETandMu\", \"FTA::transverseMassMET(IsolatedMuon_pt, IsolatedMuon_phi, IsolatedMuon_mass, MET_pt, MET_phi)\")\\\n",
    "            .Define(\"SJet_btagDeepFlavB\", \"Jet_btagDeepFlavB[jet_mask]\")\\\n",
    "            .Define(\"Num_BTaggedJets\", \"Sum(MediumBJetMask)\")\\\n",
    "            .Define(\"Ht\", \"Sum(Jet_pt[jet_mask])\")\n",
    "        \n",
    "    return rdfJetAndIsolatedLeptonFiltered"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4c8da657",
   "metadata": {},
   "outputs": [],
   "source": [
    "rdfJetAndIsolatedLeptonFiltered = JetSelection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "30a9ba45",
   "metadata": {},
   "outputs": [],
   "source": [
    "def JPsiSelection():\n",
    "    print(rdfJetAndIsolatedLeptonFiltered['Data'].GetDefinedColumnNames())\n",
    "    for sample in dictOfListOfFiles:\n",
    "\n",
    "        rdfJPsiMuons[sample] = rdfJetAndIsolatedLeptonFiltered[sample].Filter(\"Sum(jpsi_mu_candidate_mask) >= 2\", \"JPsi Candidate\")\\\n",
    "            .Define(\"Muon_FourMomentum\", \"auto fourVecs = ROOT::VecOps::Construct<ROOT::Math::PtEtaPhiMVector>(Muon_pt, Muon_eta, Muon_phi, Muon_mass); return fourVecs;\")\\\n",
    "            .Define(\"InvariantMassJPsiMuons\", \"std::cout << rdfentry_ << std::endl; int FlagPair = -1; auto c = MatchOppositelyChargedMuons(Muon_pt, Muon_eta, Muon_phi, Muon_mass, Muon_charge, event, FlagPair); return c.OppositelyChargedMuonInvariantMassCalculator()\")\\\n",
    "            .Define(\"JPsiCandidate_packedIndices\", \"ROOT::VecOps::Combinations(Muon_pt[jpsi_mu_candidate_mask], 2)\")\\\n",
    "            .Define(\"JPsiCandidate_idx0\", \"JPsiCandidate_packedIndices[0]\")\\\n",
    "            .Define(\"JPsiCandidate_idx1\",  \"JPsiCandidate_packedIndices[1]\")\\\n",
    "            .Define(\"JPsiCandidate_four_momentum\", \"ROOT::VecOps::Take(Muon_FourMomentum[jpsi_mu_candidate_mask], JPsiCandidate_idx0) + ROOT::VecOps::Take(Muon_FourMomentum[jpsi_mu_candidate_mask], JPsiCandidate_idx1)\")\\\n",
    "            .Define(\"JPsiCandidate_pt\", \"ROOT::VecOps::RVec<double> temp; for (auto p: JPsiCandidate_four_momentum) {temp.push_back(p.Pt());} return temp;\")\\\n",
    "            .Define(\"JPsiCandidate_eta\", \"ROOT::VecOps::RVec<double> temp; for (auto p: JPsiCandidate_four_momentum) {temp.push_back(p.Eta());} return temp;\")\\\n",
    "            .Define(\"JPsiCandidate_phi\", \"ROOT::VecOps::RVec<double> temp; for (auto p: JPsiCandidate_four_momentum) {temp.push_back(p.Phi());} return temp;\")\\\n",
    "            .Define(\"JPsiCandidate_mass\", \"ROOT::VecOps::RVec<double> temp; for (auto p: JPsiCandidate_four_momentum) {temp.push_back(p.M());} return temp;\")\\\n",
    "            .Define(\"JPsiCandidate_charge\", \"ROOT::VecOps::Take(Muon_charge[jpsi_mu_candidate_mask], JPsiCandidate_idx0) + ROOT::VecOps::Take(Muon_charge[jpsi_mu_candidate_mask], JPsiCandidate_idx1)\")\\\n",
    "            .Define(\"DeltaEta\", \"int FlagPair = -1; auto c = MatchOppositelyChargedMuons(IsolatedMuon_pt, IsolatedMuon_eta, IsolatedMuon_phi, IsolatedMuon_mass, IsolatedMuon_charge, event, FlagPair, JPsiCandidate_pt, JPsiCandidate_eta, JPsiCandidate_phi, JPsiCandidate_mass, JPsiCandidate_charge); return c.DeltaEtaCalculator()\")\\\n",
    "            .Define(\"DeltaPhi\", \"int FlagPair = -1; auto c = MatchOppositelyChargedMuons(IsolatedMuon_pt, IsolatedMuon_eta, IsolatedMuon_phi, IsolatedMuon_mass, IsolatedMuon_charge, event, FlagPair, JPsiCandidate_pt, JPsiCandidate_eta, JPsiCandidate_phi, JPsiCandidate_mass, JPsiCandidate_charge); return c.DeltaPhiCalculator()\")\\\n",
    "            .Define(\"DeltaR\", \"int FlagPair = -1; auto c = MatchOppositelyChargedMuons(IsolatedMuon_pt, IsolatedMuon_eta, IsolatedMuon_phi, IsolatedMuon_mass, IsolatedMuon_charge, event, FlagPair, JPsiCandidate_pt, JPsiCandidate_eta, JPsiCandidate_phi, JPsiCandidate_mass, JPsiCandidate_charge); return c.DeltaRCalculator()\")\n",
    "\n",
    "    return rdfJPsiMuons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "13bc128a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{ \"Ht\", \"IsolatedElectron_charge\", \"IsolatedElectron_eta\", \"IsolatedElectron_mass\", \"IsolatedElectron_pdgId\", \"IsolatedElectron_phi\", \"IsolatedElectron_pt\", \"IsolatedLepton_charge\", \"IsolatedLepton_eta\", \"IsolatedLepton_mass\", \"IsolatedLepton_pdgid\", \"IsolatedLepton_phi\", \"IsolatedLepton_pt\", \"IsolatedMuon_charge\", \"IsolatedMuon_eta\", \"IsolatedMuon_mass\", \"IsolatedMuon_pdgId\", \"IsolatedMuon_phi\", \"IsolatedMuon_pt\", \"LeadingIsolatedMuon_charge\", \"LeadingIsolatedMuon_eta\", \"LeadingIsolatedMuon_mass\", \"LeadingIsolatedMuon_phi\", \"LeadingIsolatedMuon_pt\", \"LumiXS\", \"METAfterMETCut\", \"METBeforeMETCut\", \"MTofMETandMu\", \"MediumBJetMask\", \"Num_BTaggedJets\", \"Num_Jets\", \"SJet1_eta\", \"SJet1_phi\", \"SJet1_pt\", \"SJet2_eta\", \"SJet2_phi\", \"SJet2_pt\", \"SJet_btagDeepFlavB\", \"jet_mask\", \"jpsi_mu_candidate_mask\", \"leading_isolated_electron_mask\", \"leading_isolated_muon_mask\", \"mu_veto\" }\n"
     ]
    }
   ],
   "source": [
    "rdfJPsiMuons = JPsiSelection()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "352c067b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Make this block a function with the inputs as the nodes we want to attach histograms to (2-17-22)\n",
    "# rdfWithFourMomentum needs to be changed to whatever our final RDataFrame is (5-23-22)\n",
    "\n",
    "for sample in dictOfListOfFiles:\n",
    "    \n",
    "    if sample not in hist.keys():\n",
    "        hist[sample] = {}\n",
    "        report[sample] = rdf[sample].Report()\n",
    "        #nparraynode[sample] = rdfLeadingMuon[sample]\n",
    "        \n",
    "    if sample == 'Data':\n",
    "        \n",
    "        hist['Data'][\"leading_isolated_muon_pt\"] = rdfIsolatedMuonNoHighWeights['Data'].Histo1D((\"leading_isolated_muon_pt\",\"Leading Isolated Muon Transverse Momentum; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedMuon_pt\")\n",
    "        hist['Data'][\"leading_isolated_muon_eta\"] = rdfIsolatedMuonNoHighWeights['Data'].Histo1D((\"leading_isolated_muon_eta\", \"Leading Isolated Muon Pseudorapidity; Eta; Events\",100,-3,3),\"LeadingIsolatedMuon_eta\")\n",
    "        hist['Data'][\"leading_isolated_muon_phi\"] = rdfIsolatedMuonNoHighWeights['Data'].Histo1D((\"leading_isolated_muon_phi\", \"Leading Isolated Muon Angle; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedMuon_phi\")\n",
    "        hist['Data'][\"leading_isolated_muon_mass\"] = rdfIsolatedMuonNoHighWeights['Data'].Histo1D((\"leading_isolated_muon_mass\", \"Leading Isolated Muon Mass; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedMuon_mass\")\n",
    "        hist['Data'][\"leading_isolated_muon_charge\"] = rdfIsolatedMuonNoHighWeights['Data'].Histo1D((\"leading_isolated_muon_charge\", \"Leading Isolated Muon Charge; Charge; Events\",5,-2,2),\"LeadingIsolatedMuon_charge\")\n",
    "        hist['Data'][\"leading_isolated_electron_pt\"] = rdfIsolatedElectronNoHighWeights['Data'].Histo1D((\"leading_isolated_electron_pt\",\"Leading Isolated Electron Transverse Momentum; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedElectron_pt\")\n",
    "        hist['Data'][\"leading_isolated_electron_eta\"] = rdfIsolatedElectronNoHighWeights['Data'].Histo1D((\"leading_isolated_electron_eta\", \"Leading Isolated Electron Pseudorapidity; Eta; Events\",100,-3,3),\"LeadingIsolatedElectron_eta\")\n",
    "        hist['Data'][\"leading_isolated_electron_phi\"] = rdfIsolatedElectronNoHighWeights['Data'].Histo1D((\"leading_isolated_electron_phi\", \"Leading Isolated Electron Angle; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedElectron_phi\")\n",
    "        hist['Data'][\"leading_isolated_electron_mass\"] = rdfIsolatedElectronNoHighWeights['Data'].Histo1D((\"leading_isolated_electron_mass\", \"Leading Isolated Electron Mass; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedElectron_mass\")\n",
    "        hist['Data'][\"leading_isolated_electron_charge\"] = rdfIsolatedElectronNoHighWeights['Data'].Histo1D((\"leading_isolated_electron_charge\", \"Leading Isolated Electron Charge; Charge; Events\",5,-2,2),\"LeadingIsolatedElectron_charge\")\n",
    "        hist['Data'][\"met_before_met_cut\"] = rdfIsolatedMuonNoHighWeights['Data'].Histo1D((\"met_before_met_cut\", \"MET Before MET Cut; Pt (GeV); Events\",100,0,250),\"METBeforeMETCut\")\n",
    "        hist['Data'][\"met_after_met_cut\"] = rdfIsolatedMuonAfterMETCut['Data'].Histo1D((\"met_after_met_cut\", \"MET After MET Cut; Pt (GeV); Events\",100,0,250),\"METAfterMETCut\")\n",
    "        hist['Data'][\"leading_isolated_muon_pt_after_met_cut\"] = rdfJPsiMuons['Data'].Histo1D((\"leading_isolated_muon_pt_after_met_cut\",\"Leading Isolated Muon Transverse Momentum After MET Cut; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedMuon_pt\")\n",
    "        hist['Data'][\"leading_isolated_muon_eta_after_met_cut\"] = rdfJPsiMuons['Data'].Histo1D((\"leading_isolated_muon_eta_after_met_cut\", \"Leading Isolated Muon Pseudorapidity After MET Cut; Eta; Events\",100,-3,3),\"LeadingIsolatedMuon_eta\")\n",
    "        hist['Data'][\"leading_isolated_muon_phi_after_met_cut\"] = rdfJPsiMuons['Data'].Histo1D((\"leading_isolated_muon_phi_after_met_cut\", \"Leading Isolated Muon Angle After MET Cut; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedMuon_phi\")\n",
    "        hist['Data'][\"leading_isolated_muon_mass_after_met_cut\"] = rdfJPsiMuons['Data'].Histo1D((\"leading_isolated_muon_mass_after_met_cut\", \"Leading Isolated Muon Mass After MET Cut; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedMuon_mass\")\n",
    "        hist['Data'][\"leading_isolated_muon_charge_after_met_cut\"] = rdfJPsiMuons['Data'].Histo1D((\"leading_isolated_muon_charge_after_met_cut\", \"Leading Isolated Muon Charge After MET Cut; Charge; Events\",5,-2,2),\"LeadingIsolatedMuon_charge\")\n",
    "        hist['Data'][\"leading_isolated_electron_pt_after_met_cut\"] = rdfIsolatedElectronAfterMETCut['Data'].Histo1D((\"leading_isolated_electron_pt_after_met_cut\",\"Leading Isolated Electron Transverse Momentum After MET Cut; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedElectron_pt\")\n",
    "        hist['Data'][\"leading_isolated_electron_eta_after_met_cut\"] = rdfIsolatedElectronAfterMETCut['Data'].Histo1D((\"leading_isolated_electron_eta_after_met_cut\", \"Leading Isolated Electron Pseudorapidity After MET Cut; Eta; Events\",100,-3,3),\"LeadingIsolatedElectron_eta\")\n",
    "        hist['Data'][\"leading_isolated_electron_phi_after_met_cut\"] = rdfIsolatedElectronAfterMETCut['Data'].Histo1D((\"leading_isolated_electron_phi_after_met_cut\", \"Leading Isolated Electron Angle After MET Cut; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedElectron_phi\")\n",
    "        hist['Data'][\"leading_isolated_electron_mass_after_met_cut\"] = rdfIsolatedElectronAfterMETCut['Data'].Histo1D((\"leading_isolated_electron_mass_after_met_cut\", \"Leading Isolated Electron Mass After MET Cut; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedElectron_mass\")\n",
    "        hist['Data'][\"leading_isolated_electron_charge_after_met_cut\"] = rdfIsolatedElectronAfterMETCut['Data'].Histo1D((\"leading_isolated_electron_charge_after_met_cut\", \"Leading Isolated Electron Charge After MET Cut; Charge; Events\",5,-2,2),\"LeadingIsolatedElectron_charge\")\n",
    "\n",
    "        \n",
    "        hist['Data'][\"number_of_jets\"] = rdfJPsiMuons['Data'].Histo1D((\"number_of_jets\", \"Number of Jets; Number Of Jets; Events\", 20, 0, 20), \"Num_Jets\") \n",
    "        hist['Data'][\"jet1_pt\"] = rdfJPsiMuons['Data'].Histo1D((\"jet1_pt\", \"Jet Transverse Momentum for Leading Jet; Pt (GeV); Events\", 100, 20, 200), \"SJet1_pt\")         \n",
    "        hist['Data'][\"jet2_pt\"] = rdfJPsiMuons['Data'].Histo1D((\"jet2_pt\", \"Jet Transverse Momentum for Subleading Jet; Pt (GeV); Events\", 100, 20, 200), \"SJet2_pt\")\n",
    "        hist['Data'][\"jet1_eta\"] = rdfJPsiMuons['Data'].Histo1D((\"jet1_eta\", \"Jet Pseudorapidity for Leading Jet; Eta; Events\", 100, -3, 3), \"SJet1_eta\")\n",
    "        hist['Data'][\"jet2_eta\"] = rdfJPsiMuons['Data'].Histo1D((\"jet2_eta\", \"Jet Pseudorapidity for Subleading Jet; Eta; Events\", 100, -3, 3), \"SJet2_eta\")\n",
    "        hist['Data'][\"jet1_phi\"] = rdfJPsiMuons['Data'].Histo1D((\"jet1_phi\", \"Jet Angle for Leading Jet; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet1_phi\")\n",
    "        hist['Data'][\"jet2_phi\"] = rdfJPsiMuons['Data'].Histo1D((\"jet2_phi\", \"Jet Angle for Subleading Jet; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet2_phi\")\n",
    "        hist['Data'][\"transverse_mass\"] = rdfJPsiMuons['Data'].Histo1D((\"transverse_mass\", \"Transverse Mass; Transverse Mass (GeV); Events\", 150, 0, 150), \"MTofMETandMu\")  \n",
    "        hist['Data'][\"ht\"] = rdfJPsiMuons['Data'].Histo1D((\"ht\", \"Ht; Ht; Events\", 300, 0, 1500), \"Ht\")\n",
    "        \n",
    "        \n",
    "        hist['Data'][\"invariant_mass_jpsi_muons\"] = rdfJPsiMuons['Data'].Histo1D((\"invariant_mass_jpsi_muons\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\", 50, .5, 12), \"InvariantMassJPsiMuons\")\n",
    "        hist['Data'][\"invariant_mass_jpsi_muons\"] = rdfJPsiMuons['Data'].Histo1D((\"invariant_mass_jpsi_muons\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\", 300, .5, 12), \"InvariantMassJPsiMuons\")\n",
    "        hist['Data'][\"invariant_masses_zoomed\"] = rdfJPsiMuons['Data'].Histo1D((\"invariant_masses_zoomed\", \"Invariant Masses for Two Muons (Oppositely Charged); Invariant Masses; Events\", 50, 2.8, 3.4), \"InvariantMassJPsiMuons\")\n",
    "        hist['Data'][\"jpsi_muons_pt\"] = rdfJPsiMuons['Data'].Histo1D((\"Pt for JPsi Muons\", \"Transverse Momentum for JPsi Muons; Pt; Events\", 150, 2.8, 75), \"JPsiCandidate_pt\")\n",
    "        hist['Data'][\"jpsi_muons_eta\"] = rdfJPsiMuons['Data'].Histo1D((\"Eta for JPsi Muons\", \"Pseudorapidity for JPsi Muons; Eta; Events\", 50, -3, 3), \"JPsiCandidate_eta\")\n",
    "        hist['Data'][\"jpsi_muons_phi\"] = rdfJPsiMuons['Data'].Histo1D((\"Phi for JPsi Muons\", \"Angle for JPsi Muons; Phi; Events\", 50, -3.5, 3.5), \"JPsiCandidate_phi\")\n",
    "       hist['Data'][\"jpsi_muons_multiplicity\"] = rdfJPsiMuons['Data'].Histo1D((\"jpsi_muon_multiplicity\", \"Number of J/Psi Muons; Number of J/Psi Muons; Events\", 8, 0, 8), \"JPsiMuons_multiplicity\")\n",
    "        hist['Data'][\"delta_eta\"] = rdfJPsiMuons['Data'].Histo1D((\"Delta Eta for Isolated Muon - JPsi Muons\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\", 50, 0, 6), \"DeltaEta\")\n",
    "        hist['Data'][\"delta_phi\"] = rdfJPsiMuons['Data'].Histo1D((\"Delta Phi for Isolated Muon - JPsi Muons\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\", 50, -3.5, 3.5), \"DeltaPhi\")\n",
    "        hist['Data'][\"delta_r\"] = rdfJPsiMuons['Data'].Histo1D((\"Delta R for Isolated and JPsi Muons\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\", 50, 0, 6), \"DeltaR\")\n",
    "        \n",
    "        \n",
    "\n",
    "    else:\n",
    "        \n",
    "        hist[sample][\"leading_isolated_muon_pt\"] = rdfIsolatedMuonNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_pt\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Transverse Momentum; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedMuon_pt\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_eta\"] = rdfIsolatedMuonNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_eta\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Pseudorapidity; Eta; Events\",100,-3,3),\"LeadingIsolatedMuon_eta\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_phi\"] = rdfIsolatedMuonNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_phi\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Angle; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedMuon_phi\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_mass\"] = rdfIsolatedMuonNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_mass\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Mass; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedMuon_mass\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_charge\"] = rdfIsolatedMuonNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_charge\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Charge; Charge; Events\",5,-2,2),\"LeadingIsolatedMuon_charge\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_pt\"] = rdfIsolatedElectronNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_pt\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Transverse Momentum; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedElectron_pt\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_eta\"] = rdfIsolatedElectronNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_eta\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Pseudorapidity; Eta; Events\",100,-3,3),\"LeadingIsolatedElectron_eta\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_phi\"] = rdfIsolatedElectronNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_phi\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Angle; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedElectron_phi\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_mass\"] = rdfIsolatedElectronNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_mass\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Mass; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedElectron_mass\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_charge\"] = rdfIsolatedElectronNoHighWeights[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_charge\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Charge; Charge; Events\",5,-2,2),\"LeadingIsolatedElectron_charge\",\"LumiXS\")\n",
    "        hist[sample][\"met_before_met_cut\"] = rdfIsolatedMuonNoHighWeights[sample].Histo1D((sample + \"_\" + \"met_before_met_cut\", \"Monte Carlo \" + sample + \"; MET Before MET Cut; Pt (GeV); Events\",100,0,250), \"METBeforeMETCut\", \"LumiXS\")\n",
    "        hist[sample][\"met_after_met_cut\"] = rdfIsolatedMuonAfterMETCut[sample].Histo1D((sample + \"_\" + \"met_after_met_cut\", \"Monte Carlo \" + sample + \"; MET After MET Cut; Pt (GeV); Events\",100,0,250), \"METAfterMETCut\", \"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_pt_after_met_cut\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_pt_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Transverse Momentum After MET Cut; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedMuon_pt\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_eta_after_met_cut\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_eta_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Pseudorapidity After MET Cut; Eta; Events\",100,-3,3),\"LeadingIsolatedMuon_eta\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_phi_after_met_cut\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_phi_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Angle After MET Cut; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedMuon_phi\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_mass_after_met_cut\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_mass_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Mass After MET Cut; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedMuon_mass\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_muon_charge_after_met_cut\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"leading_isolated_muon_charge_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Muon Charge After MET Cut; Charge; Events\",5,-2,2),\"LeadingIsolatedMuon_charge\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_pt_after_met_cut\"] = rdfIsolatedElectronAfterMETCut[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_pt_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Transverse Momentum After MET Cut; Pt (GeV);Events\",100,20,220),\"LeadingIsolatedElectron_pt\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_eta_after_met_cut\"] = rdfIsolatedElectronAfterMETCut[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_eta_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Pseudorapidity After MET Cut; Eta; Events\",100,-3,3),\"LeadingIsolatedElectron_eta\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_phi_after_met_cut\"] = rdfIsolatedElectronAfterMETCut[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_phi_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Angle After MET Cut; Phi (Radians); Events\",100,-3.5,3.5),\"LeadingIsolatedElectron_phi\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_mass_after_met_cut\"] = rdfIsolatedElectronAfterMETCut[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_mass_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Mass After MET Cut; Mass(Gev); Events\",10,.1,.2),\"LeadingIsolatedElectron_mass\",\"LumiXS\")\n",
    "        hist[sample][\"leading_isolated_electron_charge_after_met_cut\"] = rdfIsolatedElectronAfterMETCut[sample].Histo1D((sample + \"_\" + \"leading_isolated_electron_charge_after_met_cut\", \"Monte Carlo \" + sample + \";Leading Isolated Electron Charge After MET Cut; Charge; Events\",5,-2,2),\"LeadingIsolatedElectron_charge\",\"LumiXS\")\n",
    "        \n",
    "        \n",
    "        hist[sample][\"number_of_jets\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"number_of_jets\", \"Monte Carlo \" + sample +\"; Number Of Jets; Events\", 20, 0, 20), \"Num_Jets\", \"LumiXS\")\n",
    "        hist[sample][\"jet1_pt\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jet1_pt\", \"Monte Carlo \" + sample + \"; Pt (GeV); Events\", 100, 20, 200), \"SJet1_pt\", \"LumiXS\")\n",
    "        hist[sample][\"jet2_pt\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jet2_pt\", \"Monte Carlo \" + sample + \"; Pt (GeV); Events\", 100, 20, 200), \"SJet2_pt\", \"LumiXS\")\n",
    "        hist[sample][\"jet1_eta\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jet1_eta\", \"Monte Carlo \" + sample + \"; Eta; Events\", 100, -3, 3), \"SJet1_eta\", \"LumiXS\")\n",
    "        hist[sample][\"jet2_eta\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jet2_eta\", \"Monte Carlo \" + sample +\"; Eta; Events\", 100, -3, 3), \"SJet2_eta\", \"LumiXS\")\n",
    "        hist[sample][\"jet1_phi\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jet1_phi\", \"Monte Carlo \" + sample + \"; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet1_phi\", \"LumiXS\")\n",
    "        hist[sample][\"jet2_phi\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jet2_phi\", \"Monte Carlo \" + sample +\"; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet2_phi\", \"LumiXS\")\n",
    "        hist[sample][\"transverse_mass\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"transverse_mass\", \"Monte Carlo \" + sample +\"; Transverse Mass (GeV); Events\", 150, 0, 150), \"MTofMETandMu\", \"LumiXS\")\n",
    "        hist[sample][\"ht\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"ht\", \"Monte Carlo \" + sample + \"; Ht; Events\", 300, 0, 1500), \"Ht\", \"LumiXS\")\n",
    "        \n",
    "        \n",
    "        hist[sample][\"invariant_mass_jpsi_muons\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"invariant_mass_jpsi_muons\", \"Monte Carlo \" + sample + \"; Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\", 50, .5, 12), \"InvariantMassJPsiMuons\", \"LumiXS\")\n",
    "        hist[sample][\"invariant_mass_jpsi_muons\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"invariant_mass_jpsi_muons\", \"Monte Carlo \" + sample + \"; Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\", 300, .5, 12), \"InvariantMassJPsiMuons\", \"LumiXS\")\n",
    "        hist[sample][\"invariant_masses_zoomed\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"invariant_masses_zoomed\", \"Monte Carlo \" + sample + \"; Invariant Masses for Two Muons (Oppositely Charged); Invariant Masses; Events\", 50, 2.8, 3.4), \"InvariantMassJPsiMuons\", \"LumiXS\")\n",
    "        hist[sample][\"jpsi_muons_pt\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muons_pt\", \"Monte Carlo \" + sample + \"; Transverse Momentum for JPsi Muons; Pt; Events\", 150, 2.8, 75), \"JPsiCandidate_pt\", \"LumiXS\")\n",
    "        hist[sample][\"jpsi_muons_eta\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muons_eta\", \"Monte Carlo \" + sample + \"; Pseudorapidity for JPsi Muons; Eta; Events\", 50, -3, 3), \"JPsiCandidate_eta\", \"LumiXS\")\n",
    "        hist[sample][\"jpsi_muons_phi\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muons_phi\", \"Monte Carlo \" + sample + \"; Angle for JPsi Muons; Phi; Events\", 50, -3.5, 3.5), \"JPsiCandidate_phi\", \"LumiXS\")\n",
    "        hist[sample][\"jpsi_muons_multiplicity\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muon_multiplicity\", \"Monte Carlo\" + sample + \"; Number of J/Psi Muons; Number of J/Psi Muons; Events\", 8, 0, 8), \"JPsiMuons_multiplicity\", \"LumiXS\")\n",
    "        hist[sample][\"delta_eta\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"delta_eta\", \"Monte Carlo \" + sample + \"; Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\", 50, 0, 6), \"DeltaEta\", \"LumiXS\")\n",
    "        hist[sample][\"delta_phi\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"delta_phi\", \"Monte Carlo \" + sample + \"; Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\", 50, -3.5, 3.5), \"DeltaPhi\", \"LumiXS\")\n",
    "        hist[sample][\"delta_r\"] = rdfJPsiMuons[sample].Histo1D((sample + \"_\" + \"delta_r\", \"Monte Carlo \" + sample + \"; Delta R for Isolated and JPsi Muons; Delta R; Events\", 50, 0, 6), \"DeltaR\", \"LumiXS\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "89cb3651",
   "metadata": {},
   "outputs": [],
   "source": [
    "# def BTagSelection():\n",
    "#     rdfmuOneBTaggedJet[sample] = rdfTwoPlusJets[sample].Filter(\"Num_BTaggedJets >= 1\", \"At Least One B-Tagged Jet\")\n",
    "#     # This fifth filter keeps only events with no vetoed muons\n",
    "#     rdfmu[sample] = rdfmuOneBTaggedJet[sample].Filter(\"Sum(isolated_mu_veto) == 0\", \"No Vetoed Muons\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "sixth-northern",
   "metadata": {},
   "outputs": [],
   "source": [
    "# for sample in dictOfListOfFiles:\n",
    "    \n",
    "#     if sample not in hist.keys():\n",
    "#         hist[sample] = {}\n",
    "#         stats[sample] = {}\n",
    "#         report[sample] = rdf[sample].Report()\n",
    "        \n",
    "#     #stats[sample][\"countercode\"] = rdf[sample].Min('my_rdfentry')\n",
    "        \n",
    "#     if sample == 'Data':\n",
    "        \n",
    "#         hist['Data'][\"isolated_mu_pt\"] = rdfmu['Data'].Histo1D((\"mu_pt\",\"Muon Transverse Momentum; Pt (GeV);Events\",100,20,220),\"IsolatedMuon_pt\")\n",
    "#         hist['Data'][\"isolated_mu_eta\"] = rdfmu['Data'].Histo1D((\"mu_eta\", \"Muon Pseudorapidity; Eta; Events\",100,-3,3),\"IsolatedMuon_eta\")\n",
    "#         hist['Data'][\"isolated_mu_phi\"] = rdfmu['Data'].Histo1D((\"mu_phi\", \"Muon Angle; Phi (Radians); Events\",100,-3.5,3.5),\"IsolatedMuon_phi\")\n",
    "#         hist['Data'][\"jet1_pt\"] = rdfmu['Data'].Histo1D((\"jet1_pt\", \"Jet Transverse Momentum for Leading Jet; Pt (GeV); Events\", 100, 20, 200), \"SJet1_pt\")\n",
    "#         hist['Data'][\"jet2_pt\"] = rdfmu['Data'].Histo1D((\"jet2_pt\", \"Jet Transverse Momentum for Subleading Jet; Pt (GeV); Events\", 100, 20, 200), \"SJet2_pt\")\n",
    "#         hist['Data'][\"jet1_eta\"] = rdfmu['Data'].Histo1D((\"jet1_eta\", \"Jet Pseudorapidity for Leading Jet; Eta; Events\", 100, -3, 3), \"SJet1_eta\")\n",
    "#         hist['Data'][\"jet2_eta\"] = rdfmu['Data'].Histo1D((\"jet2_eta\", \"Jet Pseudorapidity for Subleading Jet; Eta; Events\", 100, -3, 3), \"SJet2_eta\")\n",
    "#         hist['Data'][\"jet1_phi\"] = rdfmu['Data'].Histo1D((\"jet1_phi\", \"Jet Angle for Leading Jet; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet1_phi\")\n",
    "#         hist['Data'][\"jet2_phi\"] = rdfmu['Data'].Histo1D((\"jet2_phi\", \"Jet Angle for Subleading Jet; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet2_phi\")\n",
    "#         hist['Data'][\"jet_deep\"] = rdfmu['Data'].Histo1D((\"jet_deep\", \"Deep Jet B Discriminator; Discriminant Value; Events\", 100, 0, 1), \"DeepJetB\")\n",
    "#         hist['Data'][\"number_of_jets\"] = rdfmu['Data'].Histo1D((\"number_of_jets\", \"Number of Jets; Number Of Jets; Events\", 20, 0, 20), \"Num_Jets\") \n",
    "#         hist['Data'][\"number_of_muons\"] = rdfmu['Data'].Histo1D((\"number_of_muons\", \"Number of Muons; Number of Muons; Events\", 5, 0, 5), \"Num_Muons\")\n",
    "#         hist['Data'][\"transverse_mass\"] = rdfmu['Data'].Histo1D((\"transverse_mass\", \"Transverse Mass; Transverse Mass (GeV); Events\", 150, 0, 150), \"MTofMETandMu\")\n",
    "#         hist['Data'][\"missing_transverse_momentum\"] = rdfmu['Data'].Histo1D((\"missing_transverse_momentum\", \"Missing Transverse Momentum; Missing Transverse Momentum(GeV); Events\", 150, 0, 300), \"MET_pt\")\n",
    "#         hist['Data'][\"ht\"] = rdfmu['Data'].Histo1D((\"ht\", \"Ht; Ht; Events\", 300, 0, 1500), \"Ht\")\n",
    "#         hist['Data'][\"isolated_muon_pfRelIso03_all\"] = rdfmu['Data'].Histo1D((\"muon_pfRelIso03_all\", \"Muon Pf Rel Iso 03 (All); Muon Pf Rel Iso 03 (All); Events\", 60, 0, .3), \"IsolatedMuon_pfRelIso03_all\")\n",
    "#         hist['Data'][\"isolated_muon_pfRelIso03_chg\"] = rdfmu['Data'].Histo1D((\"muon_pfRelIso03_chg\", \"Muon Pf Rel Iso 03 (Chg); Muon Pf Rel Iso 03 (Chg); Events\", 60, 0, .3), \"IsolatedMuon_pfRelIso03_chg\")\n",
    "#         hist['Data'][\"isolated_muon_pfRelIso04_all\"] = rdfmu['Data'].Histo1D((\"muon_pfRelIso04_all\", \"Muon Pf Rel Iso 04 (All); Muon Pf Rel Iso 04 (All); Events\", 60, 0, .3), \"IsolatedMuon_pfRelIso04_all\")\n",
    "#         hist['Data'][\"invariant_masses\"] = rdfOtherMuons['Data'].Histo1D((\"invariant_masses\", \"Invariant Masses for Two Muons (Oppositely Charged); Invariant Masses; Events\", 50, .5, 12), \"InvariantMasses\")        \n",
    "#         hist['Data'][\"invariant_masses_zoomed\"] = rdfOtherMuons['Data'].Histo1D((\"invariant_masses_zoomed\", \"Invariant Masses for Two Muons (Oppositely Charged); Invariant Masses; Events\", 50, 2.8, 3.4), \"InvariantMasses\")\n",
    "#         hist['Data'][\"jpsi_muons_pt\"] = rdfOtherMuons['Data'].Histo1D((\"Pt for JPsi Muons\", \"Transverse Momentum for JPsi Muons; Pt; Events\", 150, 2.8, 75), \"JPsiMuons_pt\")\n",
    "#         hist['Data'][\"jpsi_muons_eta\"] = rdfOtherMuons['Data'].Histo1D((\"Eta for JPsi Muons\", \"Pseudorapidity for JPsi Muons; Eta; Events\", 50, -3, 3), \"JPsiMuons_eta\")\n",
    "#         hist['Data'][\"jpsi_muons_phi\"] = rdfOtherMuons['Data'].Histo1D((\"Phi for JPsi Muons\", \"Angle for JPsi Muons; Phi; Events\", 50, -3.5, 3.5), \"JPsiMuons_phi\")\n",
    "#         hist['Data'][\"jpsi_muons_multiplicity\"] = rdfOtherMuons['Data'].Histo1D((\"jpsi_muon_multiplicity\", \"Number of J/Psi Muons; Number of J/Psi Muons; Events\", 8, 0, 8), \"JPsiMuons_multiplicity\")\n",
    "#         hist['Data'][\"delta_eta\"] = rdfOtherMuons['Data'].Histo1D((\"Delta Eta for Isolated Muon - JPsi Muons\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\", 50, 0, 6), \"DeltaEta\")\n",
    "#         hist['Data'][\"delta_phi\"] = rdfOtherMuons['Data'].Histo1D((\"Delta Phi for Isolated Muon - JPsi Muons\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\", 50, -3.5, 3.5), \"DeltaPhi\")\n",
    "#         hist['Data'][\"delta_r\"] = rdfOtherMuons['Data'].Histo1D((\"Delta R for Isolated and JPsi Muons\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\", 50, 0, 6), \"DeltaR\")\n",
    "#         hist['Data'][\"invariant_masses_all_muons\"] = rdfOtherMuons['Data'].Histo1D((\"invariant_masses_all_muons\", \"Invariant Masses for Three Muons (Isolated and Paired, Oppositely Charged); Invariant Masses; Events\", 50, .5, 200), \"InvariantMassesAllMuons\")\n",
    "\n",
    "#     else:\n",
    "        \n",
    "#         hist[sample][\"isolated_mu_pt\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"mu_pt\",\"Monte Carlo \" + sample + \";Pt (GeV);Events\",100,20,220),\"IsolatedMuon_pt\",\"LumiXS\")\n",
    "#         hist[sample][\"isolated_mu_eta\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"mu_eta\", \"Monte Carlo \" + sample + \"; Eta; Events\",100,-3,3),\"IsolatedMuon_eta\",\"LumiXS\")\n",
    "#         hist[sample][\"isolated_mu_phi\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"mu_phi\", \"Monte Carlo \" + sample + \"; Phi (Radians); Events\",100,-3.5,3.5),\"IsolatedMuon_phi\",\"LumiXS\")\n",
    "#         hist[sample][\"jet1_pt\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"jet1_pt\", \"Monte Carlo \" + sample + \"; Pt (GeV); Events\", 100, 20, 200), \"SJet1_pt\", \"LumiXS\")\n",
    "#         hist[sample][\"jet2_pt\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"jet2_pt\", \"Monte Carlo \" + sample + \"; Pt (GeV); Events\", 100, 20, 200), \"SJet2_pt\", \"LumiXS\")\n",
    "#         hist[sample][\"jet1_eta\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"jet1_eta\", \"Monte Carlo \" + sample + \"; Eta; Events\", 100, -3, 3), \"SJet1_eta\", \"LumiXS\")\n",
    "#         hist[sample][\"jet2_eta\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"jet2_eta\", \"Monte Carlo \" + sample +\"; Eta; Events\", 100, -3, 3), \"SJet2_eta\", \"LumiXS\")\n",
    "#         hist[sample][\"jet1_phi\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"jet1_phi\", \"Monte Carlo \" + sample + \"; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet1_phi\", \"LumiXS\")\n",
    "#         hist[sample][\"jet2_phi\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"jet2_phi\", \"Monte Carlo \" + sample +\"; Phi (Radians); Events\", 100, -3.5, 3.5), \"SJet2_phi\", \"LumiXS\")\n",
    "#         hist[sample][\"jet_deep\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"jet_deep\", \"Monte Carlo \" + sample +\"; Discriminant Value; Events\", 100, 0, 1), \"DeepJetB\", \"LumiXS\")\n",
    "#         hist[sample][\"number_of_jets\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"number_of_jets\", \"Monte Carlo \" + sample +\"; Number Of Jets; Events\", 20, 0, 20), \"Num_Jets\", \"LumiXS\") \n",
    "#         hist[sample][\"number_of_muons\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"number_of_muons\", \"Monte Carlo \" + sample +\"; Number of Muons; Events\", 5, 0, 5), \"Num_Muons\", \"LumiXS\")\n",
    "#         hist[sample][\"transverse_mass\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"transverse_mass\", \"Monte Carlo \" + sample +\"; Transverse Mass (GeV); Events\", 150, 0, 150), \"MTofMETandMu\", \"LumiXS\")\n",
    "#         hist[sample][\"missing_transverse_momentum\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"missing_transverse_momentum\", \"Monte Carlo\" + sample + \"; Missing Transverse Momentum(GeV); Events\", 150, 0, 300), \"MET_pt\", \"LumiXS\")\n",
    "#         hist[sample][\"ht\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"ht\", \"Monte Carlo \" + sample + \"; Ht; Events\", 300, 0, 1500), \"Ht\", \"LumiXS\")\n",
    "#         hist[sample][\"isolated_muon_pfRelIso03_all\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"muon_pfRelIso03_all\", \"Monte Carlo \" + sample + \"; Muon Pf Rel Iso 03 (All); Events\", 60, 0, .3), \"IsolatedMuon_pfRelIso03_all\", \"LumiXS\")\n",
    "#         hist[sample][\"isolated_muon_pfRelIso03_chg\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"muon_pfRelIso03_chg\", \"Monte Carlo \" + sample + \"; Muon Pf Rel Iso 03 (Chg); Events\", 60, 0, .3), \"IsolatedMuon_pfRelIso03_chg\", \"LumiXS\")\n",
    "#         hist[sample][\"isolated_muon_pfRelIso04_all\"] = rdfmu[sample].Histo1D((sample + \"_\" + \"muon_pfRelIso04_all\", \"Monte Carlo \" + sample + \"; Muon Pf Rel Iso 04 (All); Events\", 60, 0, .3), \"IsolatedMuon_pfRelIso04_all\", \"LumiXS\")\n",
    "#         hist[sample][\"invariant_masses\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"invariant_masses\", \"Monte Carlo \" + sample + \"; Invariant Masses for Two Muons (Oppositely Charged); Invariant Masses; Events\", 50, .5, 12), \"InvariantMasses\", \"LumiXS\")\n",
    "#         hist[sample][\"invariant_masses_zoomed\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"invariant_masses_zoomed\", \"Monte Carlo \" + sample + \"; Invariant Masses for Two Muons (Oppositely Charged); Events\", 50, 2.8, 3.4), \"InvariantMasses\", \"LumiXS\")\n",
    "#         hist[sample][\"jpsi_muons_pt\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muons_pt\", \"Monte Carlo \" + sample + \"; Transverse Momentum for JPsi Muons; Pt; Events\", 150, 2.8, 75), \"JPsiMuons_pt\", \"LumiXS\")\n",
    "#         hist[sample][\"jpsi_muons_eta\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muons_eta\", \"Monte Carlo \" + sample + \"; Pseudorapidity for JPsi Muons; Eta; Events\", 50, -3, 3), \"JPsiMuons_eta\", \"LumiXS\")\n",
    "#         hist[sample][\"jpsi_muons_phi\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muons_phi\", \"Monte Carlo \" + sample + \"; Angle for JPsi Muons; Phi; Events\", 50, -3.5, 3.5), \"JPsiMuons_phi\", \"LumiXS\")\n",
    "#         hist[sample][\"jpsi_muons_multiplicity\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"jpsi_muon_multiplicity\", \"Monte Carlo\" + sample + \"; Number of J/Psi Muons; Number of J/Psi Muons; Events\", 8, 0, 8), \"JPsiMuons_multiplicity\", \"LumiXS\")\n",
    "#         hist[sample][\"delta_eta\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"delta_eta\", \"Monte Carlo \" + sample + \"; Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\", 50, 0, 6), \"DeltaEta\", \"LumiXS\")\n",
    "#         hist[sample][\"delta_phi\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"delta_phi\", \"Monte Carlo \" + sample + \"; Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\", 50, -3.5, 3.5), \"DeltaPhi\", \"LumiXS\")\n",
    "#         hist[sample][\"delta_r\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"delta_r\", \"Monte Carlo \" + sample + \"; Delta R for Isolated and JPsi Muons; Delta R; Events\", 50, 0, 6), \"DeltaR\", \"LumiXS\")\n",
    "#         hist[sample][\"invariant_masses_all_muons\"] = rdfOtherMuons[sample].Histo1D((sample + \"_\" + \"invariant_masses_all_muons\", \"Monte Carlo\" + sample + \"; Invariant Masses for Three Muons (Isolated and Paired, Oppositely Charged); Invariant Masses; Events\", 50, .5, 200), \"InvariantMassesAllMuons\", \"LumiXS\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "prospective-permission",
   "metadata": {},
   "outputs": [],
   "source": [
    "for sample in dictOfListOfFiles:\n",
    "\n",
    "    ROOT.RDF.SaveGraph(rdf[sample], str(sample) + \".dot\")\n",
    "    os.system(\"dot -Tpdf \" + str(sample) + \".dot > \" + str(sample) + \"_graph.pdf\" )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "small-volleyball",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ffd40>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_pt___nominal Title: Leading Isolated Muon Transverse Momentum NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413171d0>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_eta___nominal Title: Leading Isolated Muon Pseudorapidity NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4145a520>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_phi___nominal Title: Leading Isolated Muon Angle NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41474760>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_mass___nominal Title: Leading Isolated Muon Mass NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ffd90>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_charge___nominal Title: Leading Isolated Muon Charge NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412d02c0>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_pt___nominal Title: Leading Isolated Electron Transverse Momentum NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413c9a70>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_eta___nominal Title: Leading Isolated Electron Pseudorapidity NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ea020>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_phi___nominal Title: Leading Isolated Electron Angle NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4130ca80>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_mass___nominal Title: Leading Isolated Electron Mass NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41435730>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_charge___nominal Title: Leading Isolated Electron Charge NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413a0770>\n",
      "Name: 2018___Mu___Data___met_before_met_cut___nominal Title: MET Before MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413101e0>\n",
      "Name: 2018___Mu___Data___met_after_met_cut___nominal Title: MET After MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4130cc40>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal Title: Leading Isolated Muon Transverse Momentum After MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412d0780>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal Title: Leading Isolated Muon Pseudorapidity After MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4130cc10>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal Title: Leading Isolated Muon Angle After MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415327b0>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal Title: Leading Isolated Muon Mass After MET Cut NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412f5b90>\n",
      "Name: 2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal Title: Leading Isolated Muon Charge After MET Cut NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4139dba0>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal Title: Leading Isolated Electron Transverse Momentum After MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41532910>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal Title: Leading Isolated Electron Pseudorapidity After MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413a3da0>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal Title: Leading Isolated Electron Angle After MET Cut NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413d3bc0>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal Title: Leading Isolated Electron Mass After MET Cut NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413d4360>\n",
      "Name: 2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal Title: Leading Isolated Electron Charge After MET Cut NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4139ce30>\n",
      "Name: 2018___Mu___Data___number_of_jets___nominal Title: Number of Jets NbinsX: 20\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413a3dd0>\n",
      "Name: 2018___Mu___Data___jet1_pt___nominal Title: Jet Transverse Momentum for Leading Jet NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412f53c0>\n",
      "Name: 2018___Mu___Data___jet2_pt___nominal Title: Jet Transverse Momentum for Subleading Jet NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4130e7c0>\n",
      "Name: 2018___Mu___Data___jet1_eta___nominal Title: Jet Pseudorapidity for Leading Jet NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414d4ff0>\n",
      "Name: 2018___Mu___Data___jet2_eta___nominal Title: Jet Pseudorapidity for Subleading Jet NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41309f10>\n",
      "Name: 2018___Mu___Data___jet1_phi___nominal Title: Jet Angle for Leading Jet NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4139a960>\n",
      "Name: 2018___Mu___Data___jet2_phi___nominal Title: Jet Angle for Subleading Jet NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413c1ad0>\n",
      "Name: 2018___Mu___Data___transverse_mass___nominal Title: Transverse Mass NbinsX: 150\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41304f90>\n",
      "Name: 2018___Mu___Data___ht___nominal Title: Ht NbinsX: 300\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41305010>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412fa080>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4139a9c0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0xcb67390>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415357a0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414b0360>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414b1120>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41506400>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ea430>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4151e940>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41519fb0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cd720>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0xa488740>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4167fbf0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413e7e80>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415b6c10>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4144c450>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415e0500>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413fbfb0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413d1bf0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4150e9c0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415e7bb0>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41512470>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 20\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4155e010>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413c0c10>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4155e040>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415a3c00>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414aec00>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414b1e90>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413a4e90>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 150\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413fb960>\n",
      "Name: 2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal Title: Monte Carlo MonteCarloTTToSemiLeptonic NbinsX: 300\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4130e120>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415e7ae0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415ad580>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413d8320>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41459180>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415c1350>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412c9520>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414c3510>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413fbf00>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415293c0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41582fc0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414e4e10>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413b9e30>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cc8c0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cc810>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415362e0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ef840>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cc7e0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ef6b0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ef7c0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41549dc0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412ef9e0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4154a780>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 20\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415385a0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4154a960>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cc4c0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4147e860>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4147f030>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41534270>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41549df0>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 150\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41534740>\n",
      "Name: 2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal Title: Monte Carlo MonteCarloTTTo2L2Nu NbinsX: 300\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414803a0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414803d0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413d6350>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4153c070>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4153b6c0>\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413d7010>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41515b30>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415156b0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41312100>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41515520>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413121d0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412f7f50>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412f8c70>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412f20f0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412f2090>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413b6480>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413b7070>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413b6450>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415bc740>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413ae350>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413ae4c0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413ae240>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413ae470>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 20\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41649450>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41649480>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41649c30>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412cda70>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413bdb30>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413a12a0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415bbaa0>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 150\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413ba720>\n",
      "Name: 2018___Mu___MonteCarloWJetsToLNu___ht___nominal Title: Monte Carlo MonteCarloWJetsToLNu NbinsX: 300\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413a1b00>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413d06d0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413b58d0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413b4f60>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413b58a0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4152a8f0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41684a30>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4152a840>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41685e30>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415abeb0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41675210>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4152a990>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415aca40>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416751e0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cdc60>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414ce810>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414ce7e0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x413995d0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414d62e0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414d6a90>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cddd0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414d6970>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412cc7d0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 20\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414cde40>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416b2fd0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416b35f0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41315cb0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412cc420>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41316f40>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x412cc480>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 150\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416a4ec0>\n",
      "Name: 2018___Mu___MonteCarloST_tW_top___ht___nominal Title: Monte Carlo MonteCarloST_tW_top NbinsX: 300\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416e9000>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416e9030>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4144d800>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416e9d40>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4144d7d0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4144ecb0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4155ef90>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4144d5d0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x415601e0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41560850>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41548ae0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4144ece0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41548920>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414f28e0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414f2650>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414f3c60>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41634540>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414f43c0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41634d90>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414f2890>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41689200>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 10\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416891d0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 5\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416890a0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 20\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414fcea0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x4168a9d0>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416df200>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416df980>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x416df900>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41676e50>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 100\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x41677c00>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 150\n",
      "<cppyy.gbl.ROOT.RDF.RResultPtr<TH1D> object at 0x414fcd20>\n",
      "Name: 2018___Mu___MonteCarloST_tchannel_top___ht___nominal Title: Monte Carlo MonteCarloST_tchannel_top NbinsX: 300\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HLTLeptonTrigger: pass=2905607    all=2906161    -- eff=99.98 % cumulative eff=99.98 %\n",
      "Events with exactly two isolated muons and opposite charge are vetoed.: pass=2894690    all=2905607    -- eff=99.62 % cumulative eff=99.61 %\n",
      "Events with exactly two isolated electrons and opposite charge are vetoed.: pass=2905588    all=2905607    -- eff=100.00 % cumulative eff=99.98 %\n",
      "Muon MET Greater than 30 GeV: pass=1935876    all=2894690    -- eff=66.88 % cumulative eff=66.61 %\n",
      "Electron MET Greater than 30 GeV: pass=1943094    all=2905588    -- eff=66.87 % cumulative eff=66.86 %\n",
      "At Least Two Jets: pass=623003     all=1935876    -- eff=32.18 % cumulative eff=21.44 %\n",
      "JPsi Candidate: pass=401128     all=623003     -- eff=64.39 % cumulative eff=13.80 %\n",
      "HLTLeptonTrigger: pass=660353     all=660353     -- eff=100.00 % cumulative eff=100.00 %\n",
      "No Abnormal Weights: pass=659441     all=660353     -- eff=99.86 % cumulative eff=99.86 %\n",
      "No Abnormal Weights: pass=660353     all=660353     -- eff=100.00 % cumulative eff=100.00 %\n",
      "Muon MET Greater than 30 GeV: pass=542477     all=659441     -- eff=82.26 % cumulative eff=82.15 %\n",
      "Electron MET Greater than 30 GeV: pass=543224     all=660353     -- eff=82.26 % cumulative eff=82.26 %\n",
      "At Least Two Jets: pass=531252     all=542477     -- eff=97.93 % cumulative eff=80.45 %\n",
      "JPsi Candidate: pass=400582     all=531252     -- eff=75.40 % cumulative eff=60.66 %\n",
      "HLTLeptonTrigger: pass=702213     all=702213     -- eff=100.00 % cumulative eff=100.00 %\n",
      "No Abnormal Weights: pass=701202     all=702213     -- eff=99.86 % cumulative eff=99.86 %\n",
      "No Abnormal Weights: pass=702189     all=702213     -- eff=100.00 % cumulative eff=100.00 %\n",
      "Muon MET Greater than 30 GeV: pass=625769     all=701202     -- eff=89.24 % cumulative eff=89.11 %\n",
      "Electron MET Greater than 30 GeV: pass=626659     all=702189     -- eff=89.24 % cumulative eff=89.24 %\n",
      "At Least Two Jets: pass=554197     all=625769     -- eff=88.56 % cumulative eff=78.92 %\n",
      "JPsi Candidate: pass=443272     all=554197     -- eff=79.98 % cumulative eff=63.13 %\n",
      "HLTLeptonTrigger: pass=22028      all=22028      -- eff=100.00 % cumulative eff=100.00 %\n",
      "No Abnormal Weights: pass=21996      all=22028      -- eff=99.85 % cumulative eff=99.85 %\n",
      "No Abnormal Weights: pass=22027      all=22028      -- eff=100.00 % cumulative eff=100.00 %\n",
      "Muon MET Greater than 30 GeV: pass=16404      all=21996      -- eff=74.58 % cumulative eff=74.47 %\n",
      "Electron MET Greater than 30 GeV: pass=16428      all=22027      -- eff=74.58 % cumulative eff=74.58 %\n",
      "At Least Two Jets: pass=1917       all=16404      -- eff=11.69 % cumulative eff=8.70 %\n",
      "JPsi Candidate: pass=936        all=1917       -- eff=48.83 % cumulative eff=4.25 %\n",
      "HLTLeptonTrigger: pass=306        all=306        -- eff=100.00 % cumulative eff=100.00 %\n",
      "No Abnormal Weights: pass=306        all=306        -- eff=100.00 % cumulative eff=100.00 %\n",
      "No Abnormal Weights: pass=306        all=306        -- eff=100.00 % cumulative eff=100.00 %\n",
      "Muon MET Greater than 30 GeV: pass=255        all=306        -- eff=83.33 % cumulative eff=83.33 %\n",
      "Electron MET Greater than 30 GeV: pass=255        all=306        -- eff=83.33 % cumulative eff=83.33 %\n",
      "At Least Two Jets: pass=223        all=255        -- eff=87.45 % cumulative eff=72.88 %\n",
      "JPsi Candidate: pass=168        all=223        -- eff=75.34 % cumulative eff=54.90 %\n",
      "HLTLeptonTrigger: pass=2748       all=2748       -- eff=100.00 % cumulative eff=100.00 %\n",
      "No Abnormal Weights: pass=2747       all=2748       -- eff=99.96 % cumulative eff=99.96 %\n",
      "No Abnormal Weights: pass=2748       all=2748       -- eff=100.00 % cumulative eff=100.00 %\n",
      "Muon MET Greater than 30 GeV: pass=2187       all=2747       -- eff=79.61 % cumulative eff=79.59 %\n",
      "Electron MET Greater than 30 GeV: pass=2187       all=2748       -- eff=79.59 % cumulative eff=79.59 %\n",
      "At Least Two Jets: pass=1454       all=2187       -- eff=66.48 % cumulative eff=52.91 %\n",
      "JPsi Candidate: pass=1056       all=1454       -- eff=72.63 % cumulative eff=38.43 %\n"
     ]
    }
   ],
   "source": [
    "for sample in dictOfListOfFiles:\n",
    "    #nparray[sample] = nparraynode[sample].AsNumpy([\"genWeight\", \"event\", \"run\"])\n",
    "    \n",
    "    cutflow = report[sample].GetValue()\n",
    "    cutflow.Print()\n",
    "    \n",
    "    era = \"2018\"\n",
    "    process = sample\n",
    "    channel = \"Mu\"\n",
    "    syst = \"nominal\"\n",
    "\n",
    "    outFile = ROOT.TFile.Open(\"{}_{}_{}.root\".format(era, channel, process), \"RECREATE\")\n",
    "    for name, hist_pointer in hist[sample].items():\n",
    "        print(hist_pointer)\n",
    "        hist_value = hist_pointer.GetValue()\n",
    "        \n",
    "        hist_value.SetName(\"{}___{}___{}___{}___{}\".format(era, channel, process, name, syst))\n",
    "        print(hist_value)\n",
    "        hist_value.Write()\n",
    "\n",
    "    outFile.Close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58cd86df",
   "metadata": {},
   "outputs": [],
   "source": [
    "for item in mureport:\n",
    "    print(item)\n",
    "    mureport[item].Print()\n",
    "#print(nparray['MonteCarloWJetsToLNu'].keys())\n",
    "\n",
    "#a = np.sort(nparray['MonteCarloWJetsToLNu']['genWeight'])\n",
    "\n",
    "#print(a[:10:-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16ec3f98",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  },
  "sparkconnect": {
   "bundled_options": [],
   "list_of_options": []
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
