{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.24/06\n"
     ]
    }
   ],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total 21584\r\n",
      "-rw-r--r--. 1 migordon 1399   15708 Aug 18  2020 TTto2L2Nu.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   41132 Aug 18  2020 TTToSemiLeptonic.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   14492 Aug 25  2020 Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   37773 Aug 27  2020 August26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 Sep  2  2020 FTFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399    5774 Sep 21  2020 RealData\r\n",
      "-rw-r--r--. 1 migordon 1399   45563 Sep 23  2020 September9.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   45708 Sep 24  2020 September23MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   46111 Sep 24  2020 September23RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   48733 Oct  9  2020 October8MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399     926 Oct 20  2020 graph.dot.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145577 Oct 20  2020 October15.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   49188 Nov 11  2020 October8RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November12.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November23.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 24  2020 November24.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  114959 Dec  3  2020 December2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145516 Dec 10  2020 December10.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198313 Jan 19  2021 January18LooseID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198153 Jan 21  2021 January21MediumID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198536 Jan 21  2021 January21TightID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198491 Jan 26  2021 January26WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197655 Jan 28  2021 January28WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198647 Feb 23  2021 February16AtLeastOneVetoedMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  269832 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  378821 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup-Jaunary-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  198548 Feb 24  2021 February23ExactlyOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198645 Feb 24  2021 February23AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  148905 Feb 24  2021 February23NoGoodMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198461 Feb 24  2021 February24VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197977 Feb 25  2021 February25AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198084 Feb 25  2021 February25VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  237095 Mar  7  2021 March2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  273136 Mar  8  2021 March8.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  267119 Apr 22  2021 FirstTTreeAnalysisRealData-Backup-January-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  277452 May  2  2021 April27.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  383603 May  3  2021 May3.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  385981 May  5  2021 May4AtLeast4JetsAtLeast1BTagged.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399    7149 May  5  2021 WJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   46268 May  5  2021 2017_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   29677 May  5  2021 2017_Mu_WJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  382235 May  5  2021 FirstTTreeAnalysisMonteCarlo2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   21530 May  5  2021 2017_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  264376 May  6  2021 FirstTTreeAnalysisRealData2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399    7138 May  6  2021 TTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7261 May  6  2021 TTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7219 May  6  2021 graph.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   44070 May  6  2021 2018_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   44250 May  6  2021 2018_Mu_TTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  388482 May  6  2021 May6.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  292166 May 12  2021 FirstTTreeAnalysisMonteCarlo2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  322266 May 12  2021 May11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 May 26  2021 TopMassFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399   24558 Aug 19 10:57 FirstTTreeAnalysis2018United-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399     427 Aug 24 21:52 New_Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  152243 Aug 25 20:32 August25_50K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  253643 Aug 25 20:42 August25_500K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  268165 Aug 26 01:59 August25_1M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  288466 Aug 26 02:03 August25_3M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  293684 Aug 26 02:17 August25_5M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   22036 Aug 26 17:10 FirstTTreeAnalysis2018United.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   32517 Aug 30 15:37 FirstTTreeAnalysis2018United-Backup-Copy1.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399 5254040 Aug 31 01:55 FirstTTreeAnalysis2018United-AdditionalJPsi-OldCopy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  308929 Aug 31 16:54 August31.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  287815 Sep  1 23:20 September1.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  165129 Sep  2 20:29 FirstTTreeAnalysisRealData2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  342481 Sep  3 00:48 September2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354661 Sep 21 09:50 September21TightMedium.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354301 Sep 21 09:59 September21TightTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354485 Sep 21 22:36 September22MediumTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   35084 Sep 28 04:15 FirstTTreeAnalysis2018United-AdditionalJPsi-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  568715 Sep 28 04:16 MasterPlots-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  366143 Oct  1 03:45 September30.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   41807 Oct  6 07:55 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  608173 Oct  6 07:56 MasterPlots-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   41567 Oct 20 19:34 FirstTTreeAnalysis2018United-AdditionalJPsi-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  718643 Oct 20 19:34 MasterPlots-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  460135 Oct 21 22:14 October21.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  459750 Oct 28 17:39 October26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  469993 Nov 11 19:09 November11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  204817 Nov 11 19:27 Combination.root_backup\r\n",
      "-rw-r--r--. 1 migordon 1399  204817 Nov 11 19:28 Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  815942 Nov 11 19:28 MasterPlots.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   47789 Nov 16 19:15 FirstTTreeAnalysis2018United-AdditionalJPsi.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   35815 Dec 20 16:29 FirstTTreeAnalysis2018United-AdditionalJPsi.py\r\n",
      "drwxr-xr-x. 2 migordon 1399    4096 Dec 20 16:30 __pycache__\r\n",
      "-rw-r--r--. 1 migordon 1399    6914 Dec 20 16:30 Data.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7040 Dec 20 16:30 MonteCarloTTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7094 Dec 20 16:30 MonteCarloTTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7094 Dec 20 16:30 MonteCarloWJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7094 Dec 20 16:30 MonteCarloST_tW_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7094 Dec 20 16:30 MonteCarloST_tchannel_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   24952 Dec 20 16:38 2018_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399   52634 Dec 20 16:53 2018_Mu_MonteCarloTTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   50904 Dec 20 16:58 2018_Mu_MonteCarloTTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   39053 Dec 20 16:59 2018_Mu_MonteCarloWJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   25697 Dec 20 16:59 2018_Mu_MonteCarloST_tW_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399   28883 Dec 20 16:59 2018_Mu_MonteCarloST_tchannel_top.root\r\n"
     ]
    }
   ],
   "source": [
    "!ls -ltr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!mv Combination.root Combination.root_backup\n",
    "!hadd -f Combination.root 2018_Mu_Data.root 2018_Mu_MonteCarloTTToSemiLeptonic.root 2018_Mu_MonteCarloTTTo2L2Nu.root 2018_Mu_MonteCarloWJetsToLNu.root 2018_Mu_MonteCarloST_tW_top.root 2018_Mu_MonteCarloST_tchannel_top.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "f = ROOT.TFile.Open('Combination.root', 'read')\n",
    "k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "eras = list(set([kk.split(\"___\")[0] for kk in k]))\n",
    "channels = list(set([kk.split(\"___\")[1] for kk in k]))\n",
    "samples = list(set([kk.split(\"___\")[2] for kk in k]))\n",
    "variables = list(set([kk.split(\"___\")[3] for kk in k]))\n",
    "systematics = list(set([kk.split(\"___\")[4] for kk in k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(eras)\n",
    "print(channels)\n",
    "print(samples)\n",
    "print(variables)\n",
    "print(systematics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetHistos(f, era, channel, variable, systematic = \"nominal\", separator = \"___\"):\n",
    "    \n",
    "    MC = dict()\n",
    "    Data = dict()\n",
    "    \n",
    "    k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "    print(k)\n",
    "    k = [kk for kk in k if era == kk.split(separator)[0]]\n",
    "    k = [kk for kk in k if channel == kk.split(separator)[1]]\n",
    "    k = [kk for kk in k if variable == kk.split(separator)[3]]\n",
    "    k = [kk for kk in k if systematic == kk.split(separator)[4]]\n",
    "    \n",
    "    for kk in k:\n",
    "        sample = kk.split(separator)[2]\n",
    "        \n",
    "        if \"data\" in sample.lower():\n",
    "            Data[sample] = f.Get(kk)\n",
    "            print(\"Data\")\n",
    "            \n",
    "        else:\n",
    "            MC[sample] = f.Get(kk)\n",
    "            print(sample)\n",
    "            \n",
    "    return MC, Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x, y = GetHistos(f, \"2018\", \"Mu\", \"mu_pt\")\n",
    "print(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#Load histograms from file(s)\n",
    "MonteCarlo = dict()\n",
    "RealData = dict()\n",
    "\n",
    "MonteCarlo[\"isolated_mu_pt\"] = dict()\n",
    "MonteCarlo[\"isolated_mu_eta\"] = dict()\n",
    "MonteCarlo[\"isolated_mu_phi\"] = dict()\n",
    "MonteCarlo[\"jet1_pt\"] = dict()\n",
    "MonteCarlo[\"jet2_pt\"] = dict()\n",
    "MonteCarlo[\"jet1_eta\"] = dict()\n",
    "MonteCarlo[\"jet2_eta\"] = dict()\n",
    "MonteCarlo[\"jet1_phi\"] = dict()\n",
    "MonteCarlo[\"jet2_phi\"] = dict()\n",
    "MonteCarlo[\"jet_deep\"] = dict()\n",
    "MonteCarlo[\"number_of_jets\"] = dict()\n",
    "MonteCarlo[\"number_of_muons\"] = dict()\n",
    "MonteCarlo[\"transverse_mass\"] = dict()\n",
    "MonteCarlo[\"missing_transverse_momentum\"] = dict()\n",
    "MonteCarlo[\"ht\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_chg\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pfRelIso04_all\"] = dict()\n",
    "MonteCarlo[\"invariant_masses\"] = dict()\n",
    "MonteCarlo[\"invariant_masses_zoomed\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_phi\"] = dict()\n",
    "MonteCarlo[\"delta_eta\"] = dict()\n",
    "MonteCarlo[\"delta_phi\"] = dict()\n",
    "MonteCarlo[\"delta_r\"] = dict()\n",
    "MonteCarlo[\"invariant_masses_all_muons\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_multiplicity\"] = dict()\n",
    "\n",
    "RealData[\"isolated_mu_pt\"] = dict()\n",
    "RealData[\"isolated_mu_eta\"] = dict()\n",
    "RealData[\"isolated_mu_phi\"] = dict()\n",
    "RealData[\"jet1_pt\"] = dict()\n",
    "RealData[\"jet2_pt\"] = dict()\n",
    "RealData[\"jet1_eta\"] = dict()\n",
    "RealData[\"jet2_eta\"] = dict()\n",
    "RealData[\"jet1_phi\"] = dict()\n",
    "RealData[\"jet2_phi\"] = dict()\n",
    "RealData[\"jet_deep\"] = dict()\n",
    "RealData[\"number_of_jets\"] = dict()\n",
    "RealData[\"number_of_muons\"] = dict()\n",
    "RealData[\"transverse_mass\"] = dict()\n",
    "RealData[\"missing_transverse_momentum\"] = dict()\n",
    "RealData[\"ht\"] = dict()\n",
    "RealData[\"isolated_muon_pfRelIso03_all\"] = dict()\n",
    "RealData[\"isolated_muon_pfRelIso03_chg\"] = dict()\n",
    "RealData[\"isolated_muon_pfRelIso04_all\"] = dict()\n",
    "RealData[\"invariant_masses\"] = dict()\n",
    "RealData[\"invariant_masses_zoomed\"] = dict()\n",
    "RealData[\"jpsi_muons_pt\"] = dict()\n",
    "RealData[\"jpsi_muons_eta\"] = dict()\n",
    "RealData[\"jpsi_muons_phi\"] = dict()\n",
    "RealData[\"delta_eta\"] = dict()\n",
    "RealData[\"delta_phi\"] = dict()\n",
    "RealData[\"delta_r\"] = dict()\n",
    "RealData[\"invariant_masses_all_muons\"] = dict()\n",
    "RealData[\"jpsi_muons_multiplicity\"] = dict()\n",
    "\n",
    "MonteCarlo[\"isolated_mu_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_mu_pt___nominal\")\n",
    "MonteCarlo[\"isolated_mu_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_mu_pt___nominal\")\n",
    "MonteCarlo[\"isolated_mu_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_mu_pt___nominal\")\n",
    "MonteCarlo[\"isolated_mu_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_mu_pt___nominal\")\n",
    "MonteCarlo[\"isolated_mu_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_mu_pt___nominal\")\n",
    "RealData[\"isolated_mu_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_mu_pt___nominal\") \n",
    "MonteCarlo[\"isolated_mu_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_mu_eta___nominal\")\n",
    "MonteCarlo[\"isolated_mu_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_mu_eta___nominal\")\n",
    "MonteCarlo[\"isolated_mu_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_mu_eta___nominal\")\n",
    "MonteCarlo[\"isolated_mu_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_mu_eta___nominal\")\n",
    "MonteCarlo[\"isolated_mu_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_mu_eta___nominal\")\n",
    "RealData[\"isolated_mu_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_mu_eta___nominal\") \n",
    "MonteCarlo[\"isolated_mu_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_mu_phi___nominal\")\n",
    "MonteCarlo[\"isolated_mu_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_mu_phi___nominal\")\n",
    "MonteCarlo[\"isolated_mu_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_mu_phi___nominal\")\n",
    "MonteCarlo[\"isolated_mu_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_mu_phi___nominal\")\n",
    "MonteCarlo[\"isolated_mu_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_mu_phi___nominal\")\n",
    "RealData[\"isolated_mu_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_mu_phi___nominal\") \n",
    "MonteCarlo[\"jet1_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_pt___nominal\") \n",
    "MonteCarlo[\"jet2_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_pt___nominal\") \n",
    "MonteCarlo[\"jet1_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_eta___nominal\") \n",
    "MonteCarlo[\"jet2_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_eta___nominal\") \n",
    "MonteCarlo[\"jet1_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_phi___nominal\") \n",
    "MonteCarlo[\"jet2_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_phi___nominal\") \n",
    "MonteCarlo[\"jet_deep\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet_deep___nominal\")\n",
    "MonteCarlo[\"jet_deep\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet_deep___nominal\")\n",
    "MonteCarlo[\"jet_deep\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet_deep___nominal\")\n",
    "MonteCarlo[\"jet_deep\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet_deep___nominal\")\n",
    "MonteCarlo[\"jet_deep\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet_deep___nominal\")\n",
    "RealData[\"jet_deep\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet_deep___nominal\") \n",
    "MonteCarlo[\"number_of_jets\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets___nominal\") \n",
    "MonteCarlo[\"number_of_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_muons___nominal\")\n",
    "MonteCarlo[\"number_of_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_muons___nominal\")\n",
    "MonteCarlo[\"number_of_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_muons___nominal\")\n",
    "MonteCarlo[\"number_of_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_muons___nominal\")\n",
    "MonteCarlo[\"number_of_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_muons___nominal\")\n",
    "RealData[\"number_of_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_muons___nominal\") \n",
    "MonteCarlo[\"transverse_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___transverse_mass___nominal\") \n",
    "MonteCarlo[\"missing_transverse_momentum\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___missing_transverse_momentum___nominal\")\n",
    "MonteCarlo[\"missing_transverse_momentum\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___missing_transverse_momentum___nominal\")\n",
    "MonteCarlo[\"missing_transverse_momentum\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___missing_transverse_momentum___nominal\")\n",
    "MonteCarlo[\"missing_transverse_momentum\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___missing_transverse_momentum___nominal\")\n",
    "MonteCarlo[\"missing_transverse_momentum\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___missing_transverse_momentum___nominal\")\n",
    "RealData[\"missing_transverse_momentum\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___missing_transverse_momentum___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___ht___nominal\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___ht___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pfRelIso03_all___nominal\")\n",
    "RealData[\"isolated_muon_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_chg\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pfRelIso03_chg___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_chg\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pfRelIso03_chg___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_chg\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pfRelIso03_chg___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_chg\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pfRelIso03_chg___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso03_chg\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pfRelIso03_chg___nominal\")\n",
    "RealData[\"isolated_muon_pfRelIso03_chg\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pfRelIso03_chg___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso04_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pfRelIso04_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso04_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pfRelIso04_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso04_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pfRelIso04_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso04_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pfRelIso04_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pfRelIso04_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pfRelIso04_all___nominal\")\n",
    "RealData[\"isolated_muon_pfRelIso04_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pfRelIso04_all___nominal\")\n",
    "MonteCarlo[\"invariant_masses\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses___nominal\")\n",
    "MonteCarlo[\"invariant_masses\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses___nominal\")\n",
    "MonteCarlo[\"invariant_masses\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses___nominal\")\n",
    "MonteCarlo[\"invariant_masses\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses___nominal\")\n",
    "MonteCarlo[\"invariant_masses\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses___nominal\")\n",
    "RealData[\"invariant_masses\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_all_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_all_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_all_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_all_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_all_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses_all_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_all_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses_all_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_all_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses_all_muons___nominal\")\n",
    "RealData[\"invariant_masses_all_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses_all_muons___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"delta_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta___nominal\")\n",
    "MonteCarlo[\"delta_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta___nominal\")\n",
    "MonteCarlo[\"delta_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta___nominal\")\n",
    "MonteCarlo[\"delta_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta___nominal\")\n",
    "MonteCarlo[\"delta_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta___nominal\")\n",
    "RealData[\"delta_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta___nominal\")\n",
    "MonteCarlo[\"delta_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi___nominal\")\n",
    "MonteCarlo[\"delta_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi___nominal\")\n",
    "MonteCarlo[\"delta_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi___nominal\")\n",
    "MonteCarlo[\"delta_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi___nominal\")\n",
    "MonteCarlo[\"delta_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi___nominal\")\n",
    "RealData[\"delta_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi___nominal\")\n",
    "MonteCarlo[\"delta_r\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r___nominal\")\n",
    "MonteCarlo[\"delta_r\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r___nominal\")\n",
    "MonteCarlo[\"delta_r\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r___nominal\")\n",
    "MonteCarlo[\"delta_r\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r___nominal\")\n",
    "MonteCarlo[\"delta_r\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r___nominal\")\n",
    "RealData[\"delta_r\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_multiplicity\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_multiplicity___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_multiplicity\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_multiplicity___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_multiplicity\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_multiplicity___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_multiplicity\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_multiplicity___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_multiplicity\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_multiplicity___nominal\")\n",
    "RealData[\"jpsi_muons_multiplicity\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_multiplicity___nominal\")\n",
    "\n",
    "S = dict()\n",
    "S[\"isolated_mu_pt\"] = ROOT.THStack(\"s_mu_pt\", \"Muon Transverse Momentum;Pt (GeV);Events\")\n",
    "S[\"isolated_mu_eta\"] = ROOT.THStack(\"s_mu_eta\", \"Muon Pseudorapidity;Eta;Events\")\n",
    "S[\"isolated_mu_phi\"] = ROOT.THStack(\"s_mu_phi\", \"Muon Angle;Phi (Radians);Events\")\n",
    "S[\"jet1_pt\"] = ROOT.THStack(\"s_jet1_pt\", \"Jet Transverse Momentum for Leading Jet;Pt (GeV);Events\")\n",
    "S[\"jet2_pt\"] = ROOT.THStack(\"s_jet2_pt\", \"Jet Transverse Momentum for Subleading Jet;Pt (GeV);Events\")\n",
    "S[\"jet1_eta\"] = ROOT.THStack(\"s_jet1_eta\", \"Jet Pseudorapidity for Leading Jet;Eta;Events\")\n",
    "S[\"jet2_eta\"] = ROOT.THStack(\"s_jet2_eta\", \"Jet Pseudorapidity for Subleading Jet;Eta;Events\")\n",
    "S[\"jet1_phi\"] = ROOT.THStack(\"s_jet1_phi\", \"Jet Angle for Leading Jet;Phi (Radians);Events\")\n",
    "S[\"jet2_phi\"] = ROOT.THStack(\"s_jet2_phi\", \"Jet Angle for Subleading Jet;Phi (Radians);Events\")\n",
    "S[\"jet_deep\"] = ROOT.THStack(\"s_jet_deep\", \"Deep Jet B Discriminator;Discriminant Value;Events\")\n",
    "S[\"number_of_jets\"] = ROOT.THStack(\"s_number_of_jets\", \"Number of Jets;Number of Jets;Events\")\n",
    "S[\"number_of_muons\"] = ROOT.THStack(\"s_number_of_muons\", \"Number of Muons;Number of Muons;Events\")\n",
    "S[\"transverse_mass\"] = ROOT.THStack(\"s_transverse_mass\", \"Transverse Mass;Transverse Mass (GeV);Events\")\n",
    "S[\"missing_transverse_momentum\"] = ROOT.THStack(\"s_missing_transverse_momentum\", \"Missing Transverse Momentum;Missing Transverse Momentum (GeV);Events\")\n",
    "S[\"ht\"] = ROOT.THStack(\"s_ht\", \"Ht;Ht;Events\")\n",
    "S[\"isolated_muon_pfRelIso03_all\"] = ROOT.THStack(\"s_muon_pfRelIso03_all\", \"Muon Pf Rel Iso 03 (All);Muon Pf Rel Iso 03 (All);Events\")\n",
    "S[\"isolated_muon_pfRelIso03_chg\"] = ROOT.THStack(\"s_muon_pfRelIso03_chg\", \"Muon Pf Rel Iso 03 (Chg);Muon Pf Rel Iso 03 (Chg);Events\")\n",
    "S[\"isolated_muon_pfRelIso04_all\"] = ROOT.THStack(\"s_muon_pfRelIso04_all\", \"Muon Pf Rel Iso 04 (All);Muon Pf Rel Iso 04 (All);Events\")\n",
    "S[\"invariant_masses\"] = ROOT.THStack(\"s_invariant_masses\", \"Invariant Masses for Paired Muons;Invariant Masses;Events\")\n",
    "S[\"invariant_masses_zoomed\"] = ROOT.THStack(\"s_invariant_masses_zoomed\", \"Invariant Masses (Zoomed) for Paired Muons;Invariant Masses;Events\")\n",
    "S[\"jpsi_muons_pt\"] = ROOT.THStack(\"s_jpsi_muons_pt\", \"Transverse Momentum for JPsi Muons; Pt; Events\")\n",
    "S[\"jpsi_muons_eta\"] = ROOT.THStack(\"s_jpsi_muons_eta\", \"Pseudorapidity for JPsi Muons; Eta; Events\")\n",
    "S[\"jpsi_muons_phi\"] = ROOT.THStack(\"s_jpsi_muons_phi\", \"Angle for JPsi Muons; Phi; Events\")\n",
    "S[\"delta_eta\"] = ROOT.THStack(\"s_delta_eta\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi\"] = ROOT.THStack(\"s_delta_phi\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r\"] = ROOT.THStack(\"s_delta_r\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\")\n",
    "S[\"invariant_masses_all_muons\"] = ROOT.THStack(\"s_invariant_masses_all_muons\", \"Invariant Masses for All Muons;Invariant Masses;Events\")\n",
    "S[\"jpsi_muons_multiplicity\"] = ROOT.THStack(\"s_jpsi_muons_multiplicity\", \"Number of J/Psi Muons; Number of J/Psi Muons; Events\")\n",
    "\n",
    "for item in MonteCarlo:\n",
    "    \n",
    "    for sample, color in {\"TTToSemiLeptonic\" : ROOT.kRed, \"TTTo2L2Nu\" : ROOT.kGreen, \"WJetsToLNu\" : ROOT.kBlue, \"ST_tW_top\" : ROOT.kMagenta, \"ST_tchannel_top\" : ROOT.kOrange}.items():\n",
    "        MonteCarlo[item][sample].SetFillColor(color)\n",
    "        MonteCarlo[item][sample].SetLineColor(color)\n",
    "        S[item].Add(MonteCarlo[item][sample])\n",
    "\n",
    "canvasas = dict()\n",
    "\n",
    "canvas1 = ROOT.TCanvas(\"c_isolated_mu_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"isolated_mu_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_mu_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_mu_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas1.BuildLegend()\n",
    "canvas1.Draw()\n",
    "canvasas['0'] = canvas1\n",
    "\n",
    "canvas2 = ROOT.TCanvas(\"c_isolated_mu_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"isolated_mu_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_mu_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_mu_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas2.BuildLegend()\n",
    "canvas2.Draw()\n",
    "canvasas['1'] = canvas2\n",
    "\n",
    "canvas3 = ROOT.TCanvas(\"c_isolated_mu_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"isolated_mu_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_mu_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_mu_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas3.BuildLegend()\n",
    "canvas3.Draw()\n",
    "canvasas['2'] = canvas3\n",
    "\n",
    "canvas4 = ROOT.TCanvas(\"c_jet1_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas4.BuildLegend()\n",
    "canvas4.Draw()\n",
    "canvasas['3'] = canvas4\n",
    "\n",
    "canvas5 = ROOT.TCanvas(\"c_jet2_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas5.BuildLegend()\n",
    "canvas5.Draw()\n",
    "canvasas['4'] = canvas5\n",
    "\n",
    "canvas6 = ROOT.TCanvas(\"c_jet1_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas6.BuildLegend()\n",
    "canvas6.Draw()\n",
    "canvasas['5'] = canvas6\n",
    "\n",
    "canvas7 = ROOT.TCanvas(\"c_jet2_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas7.BuildLegend()\n",
    "canvas7.Draw()\n",
    "canvasas['6'] = canvas7\n",
    "\n",
    "canvas8 = ROOT.TCanvas(\"c_jet1_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas8.BuildLegend()\n",
    "canvas8.Draw\n",
    "canvasas['7'] = canvas8\n",
    "\n",
    "canvas9 = ROOT.TCanvas(\"c_jet2_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas9.BuildLegend()\n",
    "canvas9.Draw()\n",
    "canvasas['8'] = canvas9\n",
    "\n",
    "canvas10 = ROOT.TCanvas(\"c_jet_deep\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet_deep\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet_deep\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet_deep\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas10.BuildLegend()\n",
    "canvas10.Draw()\n",
    "canvasas['9'] = canvas10\n",
    "\n",
    "canvas11 = ROOT.TCanvas(\"c_number_of_jets\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_jets\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas11.BuildLegend()\n",
    "canvas11.Draw()\n",
    "canvasas['10'] = canvas11\n",
    "\n",
    "canvas12 = ROOT.TCanvas(\"c_number_of_muons\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"number_of_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas12.BuildLegend()\n",
    "canvas12.Draw()\n",
    "canvasas['11'] = canvas12\n",
    "\n",
    "canvas13 = ROOT.TCanvas(\"c_transverse_mass\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"transverse_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas13.BuildLegend()\n",
    "canvas13.Draw()\n",
    "canvasas['12'] = canvas13\n",
    "\n",
    "canvas14 = ROOT.TCanvas(\"c_missing_transverse_momentum\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"missing_transverse_momentum\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"missing_transverse_momentum\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"missing_transverse_momentum\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas14.BuildLegend()\n",
    "canvas14.Draw()\n",
    "canvasas['13'] = canvas14\n",
    "\n",
    "canvas15 = ROOT.TCanvas(\"c_ht\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"ht\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas15.BuildLegend()\n",
    "canvas15.Draw()\n",
    "canvasas['14'] = canvas15\n",
    "\n",
    "canvas16 = ROOT.TCanvas(\"c_isolated_muon_pfRelIso03_all\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"isolated_muon_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas16.BuildLegend()\n",
    "canvas16.Draw()\n",
    "canvasas['15'] = canvas16\n",
    "\n",
    "canvas17 = ROOT.TCanvas(\"c_isolated_muon_pfRelIso03_chg\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"isolated_muon_pfRelIso03_chg\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pfRelIso03_chg\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas17.BuildLegend()\n",
    "canvas17.Draw()\n",
    "canvasas['16'] = canvas17\n",
    "\n",
    "canvas18 = ROOT.TCanvas(\"c_isolated_muon_pfRelIso04_all\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"isolated_muon_pfRelIso04_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pfRelIso04_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pfRelIso04_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas18.Draw()\n",
    "canvasas['17'] = canvas18\n",
    "\n",
    "canvas19 = ROOT.TCanvas(\"c_invariant_masses\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"invariant_masses\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_masses\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_masses\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas19.Draw()\n",
    "canvasas['18'] = canvas19\n",
    "\n",
    "canvas20 = ROOT.TCanvas(\"c_invariant_masses_zoomed\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_masses_zoomed\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas20.Draw()\n",
    "canvasas['19'] = canvas20\n",
    "\n",
    "canvas21 = ROOT.TCanvas(\"c_invariant_masses_all_muons\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"invariant_masses_all_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_masses_all_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_masses_all_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas21.Draw()\n",
    "canvasas['20'] = canvas21\n",
    "\n",
    "canvas22 = ROOT.TCanvas(\"c_jpsi_muons_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas22.Draw()\n",
    "canvasas['21'] = canvas22\n",
    "\n",
    "canvas23 = ROOT.TCanvas(\"c_jpsi_muons_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas23.Draw()\n",
    "canvasas['22'] = canvas23\n",
    "\n",
    "canvas24 = ROOT.TCanvas(\"c_jpsi_muons_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas24.Draw()\n",
    "canvasas['23'] = canvas24\n",
    "\n",
    "canvas25 = ROOT.TCanvas(\"c_delta_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"delta_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas25.Draw()\n",
    "canvasas['24'] = canvas25\n",
    "\n",
    "canvas26 = ROOT.TCanvas(\"c_delta_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"delta_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas26.Draw()\n",
    "canvasas['25'] = canvas26\n",
    "\n",
    "canvas27 = ROOT.TCanvas(\"c_delta_r\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"delta_r\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas27.Draw()\n",
    "canvasas['26'] = canvas27\n",
    "\n",
    "canvas28 = ROOT.TCanvas(\"c_jpsi_muons_multiplicity\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jpsi_muons_multiplicity\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_multiplicity\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_multiplicity\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas28.Draw()\n",
    "canvasas['27'] = canvas28"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening PDF\n",
      "Closing PDF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: pdf file November11.pdf has been created using the current canvas\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file November11.pdf and file closed\n"
     ]
    }
   ],
   "source": [
    "for kn, k in enumerate(canvasas.keys()):\n",
    "    \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvasas[k].SaveAs('November11.pdf(')\n",
    "    \n",
    "    elif kn == len(canvasas) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvasas[k].SaveAs('November11.pdf)')\n",
    "    \n",
    "    else:\n",
    "        canvasas[k].SaveAs('November11.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___mu_pt___nominal', '2018___Mu___Data___mu_eta___nominal', '2018___Mu___Data___mu_phi___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___jet_deep___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___number_of_muons___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___missing_transverse_momentum___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___muon_pfRelIso03_all___nominal', '2018___Mu___Data___muon_pfRelIso03_chg___nominal', '2018___Mu___Data___muon_pfRelIso04_all___nominal', '2018___Mu___TTToSemiLeptonic___mu_pt___nominal', '2018___Mu___TTToSemiLeptonic___mu_eta___nominal', '2018___Mu___TTToSemiLeptonic___mu_phi___nominal', '2018___Mu___TTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___TTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___TTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___TTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___TTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___TTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___TTToSemiLeptonic___jet_deep___nominal', '2018___Mu___TTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___TTToSemiLeptonic___number_of_muons___nominal', '2018___Mu___TTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___TTToSemiLeptonic___missing_transverse_momentum___nominal', '2018___Mu___TTToSemiLeptonic___ht___nominal', '2018___Mu___TTToSemiLeptonic___muon_pfRelIso03_all___nominal', '2018___Mu___TTToSemiLeptonic___muon_pfRelIso03_chg___nominal', '2018___Mu___TTToSemiLeptonic___muon_pfRelIso04_all___nominal', '2018___Mu___TTToSemiLeptonic___veto_mu_pt___nominal', '2018___Mu___TTToSemiLeptonic___veto_mu_eta___nominal', '2018___Mu___TTToSemiLeptonic___veto_mu_phi___nominal', '2018___Mu___TTToSemiLeptonic___veto_mu_mass___nominal', '2018___Mu___TTToSemiLeptonic___veto_mu_pfRelIso03_all___nominal', '2018___Mu___TTTo2L2Nu___mu_pt___nominal', '2018___Mu___TTTo2L2Nu___mu_eta___nominal', '2018___Mu___TTTo2L2Nu___mu_phi___nominal', '2018___Mu___TTTo2L2Nu___jet1_pt___nominal', '2018___Mu___TTTo2L2Nu___jet2_pt___nominal', '2018___Mu___TTTo2L2Nu___jet1_eta___nominal', '2018___Mu___TTTo2L2Nu___jet2_eta___nominal', '2018___Mu___TTTo2L2Nu___jet1_phi___nominal', '2018___Mu___TTTo2L2Nu___jet2_phi___nominal', '2018___Mu___TTTo2L2Nu___jet_deep___nominal', '2018___Mu___TTTo2L2Nu___number_of_jets___nominal', '2018___Mu___TTTo2L2Nu___number_of_muons___nominal', '2018___Mu___TTTo2L2Nu___transverse_mass___nominal', '2018___Mu___TTTo2L2Nu___missing_transverse_momentum___nominal', '2018___Mu___TTTo2L2Nu___ht___nominal', '2018___Mu___TTTo2L2Nu___muon_pfRelIso03_all___nominal', '2018___Mu___TTTo2L2Nu___muon_pfRelIso03_chg___nominal', '2018___Mu___TTTo2L2Nu___muon_pfRelIso04_all___nominal', '2018___Mu___TTTo2L2Nu___veto_mu_pt___nominal', '2018___Mu___TTTo2L2Nu___veto_mu_eta___nominal', '2018___Mu___TTTo2L2Nu___veto_mu_phi___nominal', '2018___Mu___TTTo2L2Nu___veto_mu_mass___nominal', '2018___Mu___TTTo2L2Nu___veto_mu_pfRelIso03_all___nominal']\n"
     ]
    },
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-10-5a8ef29c02df>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     46\u001b[0m     \u001b[0mMonteCarlo\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRealData\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mGetHistos\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mera\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mchannel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariable\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 48\u001b[0;31m     \u001b[0mstack\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maggregate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcanvas\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDrawStack\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mMonteCarlo\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRealData\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mkn\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-10-5a8ef29c02df>\u001b[0m in \u001b[0;36mDrawStack\u001b[0;34m(MonteCarlo, Data, separator)\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mDrawStack\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mMonteCarlo\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mData\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mseparator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"___\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m     \u001b[0mera\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mchannel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariable\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msystematic\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mMonteCarlo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGetName\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseparator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"_\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"stack\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mera\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mchannel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvariable\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msystematic\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mcolors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"TTToSemiLeptonic\"\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0mROOT\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkRed\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "era = \"2017\"\n",
    "channel = \"Mu\"\n",
    "\n",
    "def DrawStack(MonteCarlo, Data, separator = \"___\"):\n",
    "    era, channel, sample, variable, systematic = list(MonteCarlo.values())[0].GetName().split(separator)\n",
    "    name = \"_\".join([\"stack\", era, channel, variable, systematic])\n",
    "    colors = {\"TTToSemiLeptonic\" : ROOT.kRed}\n",
    "    stack = ROOT.THStack(name, \"\")\n",
    "    \n",
    "    canvas = ROOT.TCanvas(name.replace(\"stack\", \"canvas\"), \"\", 800, 800)\n",
    "  \n",
    "    \n",
    "    for sample, hist in MonteCarlo.items():\n",
    "        hist.SetFillColor(colors.get(sample, ROOT.kMagenta))\n",
    "        hist.SetLineColor(colors.get(sample, ROOT.kMagenta))\n",
    "        stack.Add(hist)\n",
    "        \n",
    "    aggregate = None\n",
    "    \n",
    "    for sample, hist in Data.items():\n",
    "        if aggregate == None:\n",
    "            aggregate = hist.Clone(hist.GetName().replace(\"sample\", \"allData\"))\n",
    "            \n",
    "        else:\n",
    "            aggregate += hist\n",
    "    \n",
    "    maxima = []\n",
    "    minima = []\n",
    "    maxima.append(stack.GetMaximum())\n",
    "    maxima.append(aggregate.GetMaximum())\n",
    "    minima.append(stack.GetMinimum())\n",
    "    minima.append(aggregate.GetMinimum())\n",
    "    \n",
    "    stack.SetMinimum(min(minima))\n",
    "    stack.SetMaximum(max(maxima))\n",
    "    \n",
    "    stack.Draw(\"HIST S\")\n",
    "    aggregate.Draw(\"PE1 SAME\")\n",
    "    \n",
    "    canvas.BuildLegend()\n",
    "    \n",
    "    return stack, aggregate, canvas\n",
    "\n",
    "for kn, variable in enumerate(variables):\n",
    "        \n",
    "    MonteCarlo, RealData = GetHistos(f, era, channel, variable)\n",
    "    \n",
    "    stack, aggregate, canvas = DrawStack(MonteCarlo, RealData)\n",
    "       \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvas.SaveAs('December2.pdf(')\n",
    "\n",
    "    elif kn == len(variables) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvas.SaveAs('December2.pdf)')\n",
    "\n",
    "    else:\n",
    "        canvas.SaveAs('December2.pdf')\n",
    "        \n",
    "    canvas.SaveAs(variable + 'December2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on _Helper in module _sitebuiltins object:\n",
      "\n",
      "class _Helper(builtins.object)\n",
      " |  Define the builtin 'help'.\n",
      " |  \n",
      " |  This is a wrapper around pydoc.help that provides a helpful message\n",
      " |  when 'help' is typed at the Python interactive prompt.\n",
      " |  \n",
      " |  Calling help() at the Python prompt starts an interactive help session.\n",
      " |  Calling help(thing) prints help for the python object 'thing'.\n",
      " |  \n",
      " |  Methods defined here:\n",
      " |  \n",
      " |  __call__(self, *args, **kwds)\n",
      " |      Call self as a function.\n",
      " |  \n",
      " |  __repr__(self)\n",
      " |      Return repr(self).\n",
      " |  \n",
      " |  ----------------------------------------------------------------------\n",
      " |  Data descriptors defined here:\n",
      " |  \n",
      " |  __dict__\n",
      " |      dictionary for instance variables (if defined)\n",
      " |  \n",
      " |  __weakref__\n",
      " |      list of weak references to the object (if defined)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(help)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
