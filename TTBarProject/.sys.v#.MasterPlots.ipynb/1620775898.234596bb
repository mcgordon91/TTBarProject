{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!ls -ltr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!mv Combination.root Combination.root_backup\n",
    "!hadd -f Combination.root 2018_Mu_Data.root 2018_Mu_TTToSemiLeptonic.root 2018_Mu_TTTo2L2Nu.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "f = ROOT.TFile.Open('Combination.root', 'read')\n",
    "k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "print(k[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "eras = list(set([kk.split(\"___\")[0] for kk in k]))\n",
    "channels = list(set([kk.split(\"___\")[1] for kk in k]))\n",
    "samples = list(set([kk.split(\"___\")[2] for kk in k]))\n",
    "variables = list(set([kk.split(\"___\")[3] for kk in k]))\n",
    "systematics = list(set([kk.split(\"___\")[4] for kk in k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(eras)\n",
    "print(channels)\n",
    "print(samples)\n",
    "print(variables)\n",
    "print(systematics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetHistos(f, era, channel, variable, systematic = \"nominal\", separator = \"___\"):\n",
    "    \n",
    "    MC = dict()\n",
    "    Data = dict()\n",
    "    \n",
    "    k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "    print(k)\n",
    "    k = [kk for kk in k if era == kk.split(separator)[0]]\n",
    "    k = [kk for kk in k if channel == kk.split(separator)[1]]\n",
    "    k = [kk for kk in k if variable == kk.split(separator)[3]]\n",
    "    k = [kk for kk in k if systematic == kk.split(separator)[4]]\n",
    "    #print(k)\n",
    "    \n",
    "    for kk in k:\n",
    "        sample = kk.split(separator)[2]\n",
    "        \n",
    "        if \"data\" in sample.lower():\n",
    "            Data[sample] = f.Get(kk)\n",
    "            \n",
    "        else:\n",
    "            MC[sample] = f.Get(kk)\n",
    "            \n",
    "    return MC, Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x, y = GetHistos(f, \"2018\", \"Mu\", \"jet1_eta\")\n",
    "print(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Load histograms from file(s)\n",
    "MonteCarlo = dict()\n",
    "RealData = dict()\n",
    "\n",
    "MonteCarlo[\"mu_pt\"] = dict()\n",
    "MonteCarlo[\"mu_eta\"] = dict()\n",
    "MonteCarlo[\"mu_phi\"] = dict()\n",
    "MonteCarlo[\"jet1_pt\"] = dict()\n",
    "MonteCarlo[\"jet2_pt\"] = dict()\n",
    "MonteCarlo[\"jet1_eta\"] = dict()\n",
    "MonteCarlo[\"jet2_eta\"] = dict()\n",
    "MonteCarlo[\"jet1_phi\"] = dict()\n",
    "MonteCarlo[\"jet2_phi\"] = dict()\n",
    "MonteCarlo[\"jet_deep\"] = dict()\n",
    "MonteCarlo[\"number_of_jets\"] = dict()\n",
    "MonteCarlo[\"number_of_muons\"] = dict()\n",
    "MonteCarlo[\"transverse_mass\"] = dict()\n",
    "MonteCarlo[\"missing_transverse_momentum\"] = dict()\n",
    "MonteCarlo[\"ht\"] = dict()\n",
    "MonteCarlo[\"muon_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"muon_pfRelIso03_chg\"] = dict()\n",
    "MonteCarlo[\"muon_pfRelIso04_all\"] = dict()\n",
    "MonteCarlo[\"veto_mu_pt\"] = dict()\n",
    "MonteCarlo[\"veto_mu_eta\"] = dict()\n",
    "MonteCarlo[\"veto_mu_phi\"] = dict()\n",
    "MonteCarlo[\"veto_mu_mass\"] = dict()\n",
    "MonteCarlo[\"veto_mu_pfRelIso03_all\"] = dict()\n",
    "\n",
    "RealData[\"mu_pt\"] = dict()\n",
    "RealData[\"mu_eta\"] = dict()\n",
    "RealData[\"mu_phi\"] = dict()\n",
    "RealData[\"jet1_pt\"] = dict()\n",
    "RealData[\"jet2_pt\"] = dict()\n",
    "RealData[\"jet1_eta\"] = dict()\n",
    "RealData[\"jet2_eta\"] = dict()\n",
    "RealData[\"jet1_phi\"] = dict()\n",
    "RealData[\"jet2_phi\"] = dict()\n",
    "RealData[\"jet_deep\"] = dict()\n",
    "RealData[\"number_of_jets\"] = dict()\n",
    "RealData[\"number_of_muons\"] = dict()\n",
    "RealData[\"transverse_mass\"] = dict()\n",
    "RealData[\"missing_transverse_momentum\"] = dict()\n",
    "RealData[\"ht\"] = dict()\n",
    "RealData[\"muon_pfRelIso03_all\"] = dict()\n",
    "RealData[\"muon_pfRelIso03_chg\"] = dict()\n",
    "RealData[\"muon_pfRelIso04_all\"] = dict()\n",
    "RealData[\"veto_mu_pt\"] = dict()\n",
    "RealData[\"veto_mu_eta\"] = dict()\n",
    "RealData[\"veto_mu_phi\"] = dict()\n",
    "RealData[\"veto_mu_mass\"] = dict()\n",
    "RealData[\"veto_mu_pfRelIso03_all\"] = dict()\n",
    "\n",
    "MonteCarlo[\"mu_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___mu_pt___nominal\")\n",
    "MonteCarlo[\"mu_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___mu_pt___nominal\")\n",
    "RealData[\"mu_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___mu_pt___nominal\") \n",
    "MonteCarlo[\"mu_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___mu_eta___nominal\")\n",
    "MonteCarlo[\"mu_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___mu_eta___nominal\")\n",
    "RealData[\"mu_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___mu_eta___nominal\") \n",
    "MonteCarlo[\"mu_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___mu_phi___nominal\")\n",
    "MonteCarlo[\"mu_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___mu_phi___nominal\")\n",
    "RealData[\"mu_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___mu_phi___nominal\") \n",
    "MonteCarlo[\"jet1_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___jet1_pt___nominal\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_pt___nominal\") \n",
    "MonteCarlo[\"jet2_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___jet2_pt___nominal\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_pt___nominal\") \n",
    "MonteCarlo[\"jet1_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___jet1_eta___nominal\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_eta___nominal\") \n",
    "MonteCarlo[\"jet2_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___jet2_eta___nominal\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_eta___nominal\") \n",
    "MonteCarlo[\"jet1_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___jet1_phi___nominal\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_phi___nominal\") \n",
    "MonteCarlo[\"jet2_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___jet2_phi___nominal\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_phi___nominal\") \n",
    "MonteCarlo[\"jet_deep\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___jet_deep___nominal\")\n",
    "MonteCarlo[\"jet_deep\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___jet_deep___nominal\")\n",
    "RealData[\"jet_deep\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet_deep___nominal\") \n",
    "MonteCarlo[\"number_of_jets\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___number_of_jets___nominal\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets___nominal\") \n",
    "MonteCarlo[\"number_of_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___number_of_muons___nominal\")\n",
    "MonteCarlo[\"number_of_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___number_of_muons___nominal\")\n",
    "RealData[\"number_of_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_muons___nominal\") \n",
    "MonteCarlo[\"transverse_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___transverse_mass___nominal\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___transverse_mass___nominal\") \n",
    "MonteCarlo[\"missing_transverse_momentum\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___missing_transverse_momentum___nominal\")\n",
    "MonteCarlo[\"missing_transverse_momentum\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___missing_transverse_momentum___nominal\")\n",
    "RealData[\"missing_transverse_momentum\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___missing_transverse_momentum___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___ht___nominal\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___ht___nominal\")\n",
    "MonteCarlo[\"muon_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___muon_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"muon_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___muon_pfRelIso03_all___nominal\")\n",
    "RealData[\"muon_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___muon_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"muon_pfRelIso03_chg\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___muon_pfRelIso03_chg___nominal\")\n",
    "MonteCarlo[\"muon_pfRelIso03_chg\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___muon_pfRelIso03_chg___nominal\")\n",
    "RealData[\"muon_pfRelIso03_chg\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___muon_pfRelIso03_chg___nominal\")\n",
    "MonteCarlo[\"muon_pfRelIso04_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___muon_pfRelIso04_all___nominal\")\n",
    "MonteCarlo[\"muon_pfRelIso04_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___muon_pfRelIso04_all___nominal\")\n",
    "RealData[\"muon_pfRelIso04_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___muon_pfRelIso04_all___nominal\")\n",
    "MonteCarlo[\"veto_mu_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___veto_mu_pt___nominal\")\n",
    "MonteCarlo[\"veto_mu_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___veto_mu_pt___nominal\")\n",
    "RealData[\"veto_mu_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___veto_mu_pt___nominal\") \n",
    "MonteCarlo[\"veto_mu_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___veto_mu_eta___nominal\")\n",
    "MonteCarlo[\"veto_mu_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___veto_mu_eta___nominal\")\n",
    "RealData[\"veto_mu_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___veto_mu_eta___nominal\")\n",
    "MonteCarlo[\"veto_mu_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___veto_mu_phi___nominal\")\n",
    "MonteCarlo[\"veto_mu_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___veto_mu_phi___nominal\")\n",
    "RealData[\"veto_mu_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___veto_mu_phi___nominal\")\n",
    "MonteCarlo[\"veto_mu_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___veto_mu_mass___nominal\")\n",
    "MonteCarlo[\"veto_mu_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___veto_mu_mass___nominal\")\n",
    "RealData[\"veto_mu_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___veto_mu_mass___nominal\")\n",
    "MonteCarlo[\"veto_mu_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___TTToSemiLeptonic___veto_mu_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"veto_mu_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___TTTo2L2Nu___veto_mu_pfRelIso03_all___nominal\")\n",
    "RealData[\"veto_mu_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___veto_mu_pfRelIso03_all___nominal\") \n",
    "\n",
    "S = dict()\n",
    "S[\"mu_pt\"] = ROOT.THStack(\"s_mu_pt\", \"Muon Transverse Momentum;Pt (GeV);Events\")\n",
    "S[\"mu_eta\"] = ROOT.THStack(\"s_mu_eta\", \"Muon Pseudorapidity;Eta;Events\")\n",
    "S[\"mu_phi\"] = ROOT.THStack(\"s_mu_phi\", \"Muon Angle;Phi (Radians);Events\")\n",
    "S[\"jet1_pt\"] = ROOT.THStack(\"s_jet1_pt\", \"Jet Transverse Momentum for Leading Jet;Pt (GeV);Events\")\n",
    "S[\"jet2_pt\"] = ROOT.THStack(\"s_jet2_pt\", \"Jet Transverse Momentum for Subleading Jet;Pt (GeV);Events\")\n",
    "S[\"jet1_eta\"] = ROOT.THStack(\"s_jet1_eta\", \"Jet Pseudorapidity for Leading Jet;Eta;Events\")\n",
    "S[\"jet2_eta\"] = ROOT.THStack(\"s_jet2_eta\", \"Jet Pseudorapidity for Subleading Jet;Eta;Events\")\n",
    "S[\"jet1_phi\"] = ROOT.THStack(\"s_jet1_phi\", \"Jet Angle for Leading Jet;Phi (Radians);Events\")\n",
    "S[\"jet2_phi\"] = ROOT.THStack(\"s_jet2_phi\", \"Jet Angle for Subleading Jet;Phi (Radians);Events\")\n",
    "S[\"jet_deep\"] = ROOT.THStack(\"s_jet_deep\", \"Deep Jet B Discriminator;Discriminant Value;Events\")\n",
    "S[\"number_of_jets\"] = ROOT.THStack(\"s_number_of_jets\", \"Number of Jets;Number of Jets;Events\")\n",
    "S[\"number_of_muons\"] = ROOT.THStack(\"s_number_of_muons\", \"Number of Muons;Number of Muons;Events\")\n",
    "S[\"transverse_mass\"] = ROOT.THStack(\"s_transverse_mass\", \"Transverse Mass;Transverse Mass (GeV);Events\")\n",
    "S[\"missing_transverse_momentum\"] = ROOT.THStack(\"s_missing_transverse_momentum\", \"Missing Transverse Momentum;Missing Transverse Momentum (GeV);Events\")\n",
    "S[\"ht\"] = ROOT.THStack(\"s_ht\", \"Ht;Ht;Events\")\n",
    "S[\"muon_pfRelIso03_all\"] = ROOT.THStack(\"s_muon_pfRelIso03_all\", \"Muon Pf Rel Iso 03 (All);Muon Pf Rel Iso 03 (All);Events\")\n",
    "S[\"muon_pfRelIso03_chg\"] = ROOT.THStack(\"s_muon_pfRelIso03_chg\", \"Muon Pf Rel Iso 03 (Chg);Muon Pf Rel Iso 03 (Chg);Events\")\n",
    "S[\"muon_pfRelIso04_all\"] = ROOT.THStack(\"s_muon_pfRelIso04_all\", \"Muon Pf Rel Iso 04 (All);Muon Pf Rel Iso 04 (All);Events\")\n",
    "S[\"veto_mu_pt\"] = ROOT.THStack(\"s_veto_mu_pt\", \"Transverse Momentum for Vetoed Muons;Pt (GeV);Events\")\n",
    "S[\"veto_mu_eta\"] = ROOT.THStack(\"s_veto_mu_eta\", \"Pseudorapidity for Vetoed Muons;Eta;Events\")\n",
    "S[\"veto_mu_phi\"] = ROOT.THStack(\"s_veto_mu_phi\", \"Muon Angle for Vetoed Muons;Phi (Radians);Events\")\n",
    "S[\"veto_mu_mass\"] = ROOT.THStack(\"s_veto_mu_mass\", \"Transverse Mass for Vetoed Muons;Transverse Mass (GeV);Events\")\n",
    "S[\"veto_mu_pfRelIso03_all\"] = ROOT.THStack(\"s_veto_mu_pfRelIso03_all\", \"Muon Pf Rel Iso 03 (All) for Vetoed Muons;Muon Pf Rel Iso 03 (All);Events\")\n",
    "\n",
    "for item in MonteCarlo:\n",
    "    \n",
    "    for sample, color in {\"TTToSemiLeptonic\" : ROOT.kRed, \"TTTo2L2Nu\" : ROOT.kGreen}.items():\n",
    "        MonteCarlo[item][sample].SetFillColor(color)\n",
    "        MonteCarlo[item][sample].SetLineColor(color)\n",
    "        S[item].Add(MonteCarlo[item][sample])\n",
    "\n",
    "canvasas = {}\n",
    "\n",
    "#for outerKey in S.keys():\n",
    "#    print(S)\n",
    "#    RealDataMaximum = RealData[key].GetMaximum()\n",
    "#    MonteCarloMaximum = MonteCarlo[key].GetMaximum()\n",
    "#    canvasas[key] = ROOT.TCanvas(\"c_\" + key, \"\", 800, 800)\n",
    "#    S[key].Draw(\"HIST S\")\n",
    "#    RealData[key][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "#    canvasas[key].BuildLegend()\n",
    "#    canvasas[key].Draw()\n",
    "\n",
    "canvas1 = ROOT.TCanvas(\"c_mu_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"mu_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"mu_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"mu_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas1.BuildLegend()\n",
    "canvas1.Draw()\n",
    "canvasas['0'] = canvas1\n",
    "\n",
    "canvas2 = ROOT.TCanvas(\"c_mu_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"mu_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"mu_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"mu_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas2.BuildLegend()\n",
    "canvas2.Draw()\n",
    "canvasas['1'] = canvas2\n",
    "\n",
    "canvas3 = ROOT.TCanvas(\"c_mu_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"mu_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"mu_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"mu_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas3.BuildLegend()\n",
    "canvas3.Draw()\n",
    "canvasas['2'] = canvas3\n",
    "\n",
    "canvas4 = ROOT.TCanvas(\"c_jet1_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas4.BuildLegend()\n",
    "canvas4.Draw()\n",
    "canvasas['3'] = canvas4\n",
    "\n",
    "canvas5 = ROOT.TCanvas(\"c_jet2_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas5.BuildLegend()\n",
    "canvas5.Draw()\n",
    "canvasas['4'] = canvas5\n",
    "\n",
    "canvas6 = ROOT.TCanvas(\"c_jet1_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas6.BuildLegend()\n",
    "canvas6.Draw()\n",
    "canvasas['5'] = canvas6\n",
    "\n",
    "canvas7 = ROOT.TCanvas(\"c_jet2_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas7.BuildLegend()\n",
    "canvas7.Draw()\n",
    "canvasas['6'] = canvas7\n",
    "\n",
    "canvas8 = ROOT.TCanvas(\"c_jet1_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas8.BuildLegend()\n",
    "canvas8.Draw\n",
    "canvasas['7'] = canvas8\n",
    "\n",
    "canvas9 = ROOT.TCanvas(\"c_jet2_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas9.BuildLegend()\n",
    "canvas9.Draw()\n",
    "canvasas['8'] = canvas9\n",
    "\n",
    "canvas10 = ROOT.TCanvas(\"c_jet_deep\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"jet_deep\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet_deep\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet_deep\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas10.BuildLegend()\n",
    "canvas10.Draw()\n",
    "canvasas['9'] = canvas10\n",
    "\n",
    "canvas11 = ROOT.TCanvas(\"c_number_of_jets\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_jets\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas11.BuildLegend()\n",
    "canvas11.Draw()\n",
    "canvasas['10'] = canvas11\n",
    "\n",
    "canvas12 = ROOT.TCanvas(\"c_number_of_muons\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"number_of_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas12.BuildLegend()\n",
    "canvas12.Draw()\n",
    "canvasas['11'] = canvas12\n",
    "\n",
    "canvas13 = ROOT.TCanvas(\"c_transverse_mass\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"transverse_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas13.BuildLegend()\n",
    "canvas13.Draw()\n",
    "canvasas['12'] = canvas13\n",
    "\n",
    "canvas14 = ROOT.TCanvas(\"c_missing_transverse_momentum\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"missing_transverse_momentum\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"missing_transverse_momentum\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"missing_transverse_momentum\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas14.BuildLegend()\n",
    "canvas14.Draw()\n",
    "canvasas['13'] = canvas14\n",
    "\n",
    "canvas15 = ROOT.TCanvas(\"c_ht\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"ht\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas15.BuildLegend()\n",
    "canvas15.Draw()\n",
    "canvasas['14'] = canvas15\n",
    "\n",
    "canvas16 = ROOT.TCanvas(\"c_muon_pfRelIso03_all\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"muon_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"muon_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"muon_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas16.BuildLegend()\n",
    "canvas16.Draw()\n",
    "canvasas['15'] = canvas16\n",
    "\n",
    "canvas17 = ROOT.TCanvas(\"c_muon_pfRelIso03_chg\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"muon_pfRelIso03_chg\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"muon_pfRelIso03_chg\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"muon_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas17.BuildLegend()\n",
    "canvas17.Draw()\n",
    "canvasas['16'] = canvas17\n",
    "\n",
    "canvas18 = ROOT.TCanvas(\"c_muon_pfRelIso04_all\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"muon_pfRelIso04_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"muon_pfRelIso04_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"muon_pfRelIso04_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas18.Draw()\n",
    "canvasas['17'] = canvas18\n",
    "                                                   \n",
    "canvas19 = ROOT.TCanvas(\"c_veto_mu_pt\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"veto_mu_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"veto_mu_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"veto_mu_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas19.Draw()\n",
    "canvasas['18'] = canvas19\n",
    "                                                   \n",
    "canvas20 = ROOT.TCanvas(\"c_veto_mu_eta\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"veto_mu_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"veto_mu_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"veto_mu_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas20.Draw()\n",
    "canvasas['19'] = canvas20\n",
    "                                                   \n",
    "canvas21 = ROOT.TCanvas(\"c_veto_mu_phi\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"veto_mu_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"veto_mu_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"veto_mu_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas21.Draw()\n",
    "canvasas['20'] = canvas21\n",
    "                                                   \n",
    "canvas22 = ROOT.TCanvas(\"c_veto_mu_mass\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"veto_mu_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"veto_mu_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"veto_mu_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas22.Draw()\n",
    "canvasas['21'] = canvas22\n",
    "                                                   \n",
    "canvas23 = ROOT.TCanvas(\"c_veto_mu_pfRelIso03_all\", \"\", 800, 800)\n",
    "#S[\"missing_transverse_momentum\"].Draw(\"HIST S\")\n",
    "#RealData[\"missing_transverse_momentum\"][\"SingleMuon2017D\"].Draw(\"PE1 SAME\")\n",
    "RealData[\"veto_mu_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"veto_mu_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"veto_mu_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "#canvas18.BuildLegend()\n",
    "canvas23.Draw()\n",
    "canvasas['22'] = canvas23"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening PDF\n",
      "Closing PDF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: pdf file May6.pdf has been created using the current canvas\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file May6.pdf and file closed\n"
     ]
    }
   ],
   "source": [
    "for kn, k in enumerate(canvasas.keys()):\n",
    "    \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvasas[k].SaveAs('May6.pdf(')\n",
    "    \n",
    "    elif kn == len(canvasas) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvasas[k].SaveAs('May6.pdf)')\n",
    "    \n",
    "    else:\n",
    "        canvasas[k].SaveAs('May6.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "era = \"2017\"\n",
    "channel = \"Mu\"\n",
    "\n",
    "def DrawStack(MonteCarlo, Data, separator = \"___\"):\n",
    "    era, channel, sample, variable, systematic = list(MonteCarlo.values())[0].GetName().split(separator)\n",
    "    name = \"_\".join([\"stack\", era, channel, variable, systematic])\n",
    "    colors = {\"TTToSemiLeptonic\" : ROOT.kRed}\n",
    "    stack = ROOT.THStack(name, \"\")\n",
    "    \n",
    "    canvas = ROOT.TCanvas(name.replace(\"stack\", \"canvas\"), \"\", 800, 800)\n",
    "  \n",
    "    \n",
    "    for sample, hist in MonteCarlo.items():\n",
    "        hist.SetFillColor(colors.get(sample, ROOT.kMagenta))\n",
    "        hist.SetLineColor(colors.get(sample, ROOT.kMagenta))\n",
    "        stack.Add(hist)\n",
    "        \n",
    "    aggregate = None\n",
    "    \n",
    "    for sample, hist in Data.items():\n",
    "        if aggregate == None:\n",
    "            aggregate = hist.Clone(hist.GetName().replace(\"sample\", \"allData\"))\n",
    "            \n",
    "        else:\n",
    "            aggregate += hist\n",
    "    \n",
    "    maxima = []\n",
    "    minima = []\n",
    "    maxima.append(stack.GetMaximum())\n",
    "    maxima.append(aggregate.GetMaximum())\n",
    "    minima.append(stack.GetMinimum())\n",
    "    minima.append(aggregate.GetMinimum())\n",
    "    \n",
    "    stack.SetMinimum(min(minima))\n",
    "    stack.SetMaximum(max(maxima))\n",
    "    \n",
    "    stack.Draw(\"HIST S\")\n",
    "    aggregate.Draw(\"PE1 SAME\")\n",
    "    \n",
    "    canvas.BuildLegend()\n",
    "    \n",
    "    return stack, aggregate, canvas\n",
    "\n",
    "for kn, variable in enumerate(variables):\n",
    "        \n",
    "    MonteCarlo, RealData = GetHistos(f, era, channel, variable)\n",
    "    \n",
    "    stack, aggregate, canvas = DrawStack(MonteCarlo, RealData)\n",
    "       \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvas.SaveAs('December2.pdf(')\n",
    "\n",
    "    elif kn == len(variables) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvas.SaveAs('December2.pdf)')\n",
    "\n",
    "    else:\n",
    "        canvas.SaveAs('December2.pdf')\n",
    "        \n",
    "    canvas.SaveAs(variable + 'December2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "help(help)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
