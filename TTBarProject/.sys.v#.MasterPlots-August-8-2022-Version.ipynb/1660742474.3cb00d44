{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.26/04\n"
     ]
    }
   ],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total 45717\r\n",
      "-rw-r--r--. 1 migordon 1399   15708 Aug 18  2020 TTto2L2Nu.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   41132 Aug 18  2020 TTToSemiLeptonic.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   14492 Aug 25  2020 Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   37773 Aug 27  2020 August26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 Sep  2  2020 FTFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399    5774 Sep 21  2020 RealData\r\n",
      "-rw-r--r--. 1 migordon 1399   45563 Sep 23  2020 September9.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   45708 Sep 24  2020 September23MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   46111 Sep 24  2020 September23RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   48733 Oct  9  2020 October8MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399     926 Oct 20  2020 graph.dot.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145577 Oct 20  2020 October15.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   49188 Nov 11  2020 October8RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November12.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November23.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 24  2020 November24.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  114959 Dec  3  2020 December2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145516 Dec 10  2020 December10.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198313 Jan 19  2021 January18LooseID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198153 Jan 21  2021 January21MediumID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198536 Jan 21  2021 January21TightID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198491 Jan 26  2021 January26WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197655 Jan 28  2021 January28WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198647 Feb 23  2021 February16AtLeastOneVetoedMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  269832 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  378821 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup-Jaunary-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  198548 Feb 24  2021 February23ExactlyOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198645 Feb 24  2021 February23AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  148905 Feb 24  2021 February23NoGoodMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198461 Feb 24  2021 February24VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197977 Feb 25  2021 February25AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198084 Feb 25  2021 February25VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  237095 Mar  7  2021 March2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  273136 Mar  8  2021 March8.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  277452 May  2  2021 April27.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  383603 May  3  2021 May3.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  385981 May  5  2021 May4AtLeast4JetsAtLeast1BTagged.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399    7149 May  5  2021 WJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   46268 May  5  2021 2017_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   29677 May  5  2021 2017_Mu_WJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  382235 May  5  2021 FirstTTreeAnalysisMonteCarlo2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   21530 May  5  2021 2017_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  264376 May  6  2021 FirstTTreeAnalysisRealData2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399    7138 May  6  2021 TTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7261 May  6  2021 TTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7219 May  6  2021 graph.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   44070 May  6  2021 2018_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   44250 May  6  2021 2018_Mu_TTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  388482 May  6  2021 May6.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  292166 May 12  2021 FirstTTreeAnalysisMonteCarlo2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  322266 May 12  2021 May11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 May 26  2021 TopMassFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399   24558 Aug 19  2021 FirstTTreeAnalysis2018United-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399     427 Aug 24  2021 New_Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  152243 Aug 25  2021 August25_50K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  253643 Aug 25  2021 August25_500K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  268165 Aug 26  2021 August25_1M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  288466 Aug 26  2021 August25_3M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  293684 Aug 26  2021 August25_5M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32517 Aug 30  2021 FirstTTreeAnalysis2018United-Backup-Copy1.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  308929 Aug 31  2021 August31.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  287815 Sep  1  2021 September1.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  165129 Sep  2  2021 FirstTTreeAnalysisRealData2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  342481 Sep  3  2021 September2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354661 Sep 21  2021 September21TightMedium.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354301 Sep 21  2021 September21TightTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354485 Sep 21  2021 September22MediumTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  568715 Sep 28  2021 MasterPlots-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  366143 Oct  1  2021 September30.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  608173 Oct  6  2021 MasterPlots-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  718643 Oct 20  2021 MasterPlots-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  460135 Oct 21  2021 October21.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  459750 Oct 28  2021 October26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  469993 Nov 11  2021 November11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  815942 Dec 20  2021 MasterPlots.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   35815 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.py\r\n",
      "-rw-r--r--. 1 migordon 1399   48706 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399 5254040 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-OldCopy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   49408 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-1-9-22-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   52579 Jan 10  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.py\r\n",
      "-rw-r--r--. 1 migordon 1399   22036 May  9 11:57 FirstTTreeAnalysis2018United.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75336 May 14 12:09 May14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  134983 May 26 14:41 May26_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  156426 Jun 13 14:42 June13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   76628 Jun 13 16:00 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   41767 Jun 13 17:53 FirstTTreeAnalysis2018United-AdditionalJPsi-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  317522 Jun 14 16:22 June14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   39626 Jun 20 15:21 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   27369 Jun 20 16:49 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.py\r\n",
      "-rw-r--r--. 1 migordon 1399  115107 Jun 21 15:12 FirstTTreeAnalysis2018United-AdditionalJPsi-May_23_2022_Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  552871 Jun 21 16:25 MasterPlots-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  461138 Jun 23 17:27 June23_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  267495 Jun 27 14:57 FirstTTreeAnalysisRealData-Backup-January-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  472488 Jun 30 17:37 June30_2022_JPsiZoomed.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32374 Jul  1 16:35 FirstTTreeAnalysis2018United-AdditionalJPsi-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   66434 Jul  1 23:03 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.py\r\n",
      "-rw-r--r--. 1 migordon 1399   80894 Jul  3 13:20 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  605767 Jul  3 20:45 July3_2022_MinimumFourJets.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  173470 Jul  4 12:49 MasterPlots-June-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  702825 Jul  4 13:22 July4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  705989 Jul  5 09:55 July5_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 10 23:20 FirstTTreeAnalysis2018United-AdditionalJPsi-July_10_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  776465 Jul 10 23:49 July10_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   97291 Jul 11 01:36 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80141 Jul 11 01:38 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399   98358 Jul 11 02:56 TopQuark_JPsi_Analysis-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80916 Jul 11 02:57 TopQuark_JPsi_Analysis-July_11_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  769640 Jul 11 03:12 July11_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 11 09:41 FirstTTreeAnalysis2018United-AdditionalJPsi-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  802986 Jul 11 10:35 July11_2022_a.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   77722 Jul 11 11:04 TopQuark_JPsi_Analysis-July_11_2022-Copy1.py\r\n",
      "-rw-r--r--. 1 migordon 1399  838420 Jul 11 11:30 July11_2022_b.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  900846 Jul 12 19:46 July12_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1057489 Jul 13 15:13 July13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1049253 Jul 13 22:15 July13_2022_Isolated_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   83308 Jul 17 18:38 Gordon_Michael_July_17_2022_Alternate_Muon_IDs.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  613179 Jul 20 08:43 MasterPlots-July-3-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75405 Jul 20 12:46 Gordon_Michael_July_20_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   90076 Jul 21 07:24 Gordon_Michael_July_20_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  535140 Jul 21 11:17 Gordon_Michael_July_21_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  927599 Jul 21 18:29 Gordon_Michael_July_21_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  937378 Jul 21 19:27 Gordon_Michael_July_21_2022_Medium_Tight_Revised_Twice.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1008949 Jul 24 10:30 Gordon_Michael_July_24_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  626330 Jul 25 16:24 Gordon_Michael_July_25_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1284215 Aug  4 17:01 Gordon_Michael_August_4_2022_Negaverse_Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  161217 Aug  5 13:23 Gordon_Michael_August_4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  146891 Aug  8 14:26 Gordon_Michael_August_8_2022_dR_below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  189364 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  159737 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  148783 Aug  8 14:37 Gordon_Michael_August_8_2022_dR_above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1140010 Aug  8 16:40 MasterPlots-July-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  391521 Aug  9 23:20 Gordon_Michael_August_9_2022_JPsi_3Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  351638 Aug  9 23:27 Gordon_Michael_August_9_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  309560 Aug 10 09:49 Gordon_Michael_August_10_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  310508 Aug 11 14:24 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  312296 Aug 11 14:35 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  517793 Aug 11 14:42 Combination.root_backup\r\n",
      "-rw-r--r--. 1 migordon 1399  350475 Aug 11 14:42 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  517231 Aug 11 14:49 Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  347400 Aug 11 14:49 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1030862 Aug 11 14:51 MasterPlots-August-8-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  175531 Aug 17 15:04 TopQuark_JPsi_Analysis-August_8_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  136333 Aug 17 15:05 TopQuark_JPsi_Analysis-August_8_2022.py\r\n",
      "drwxr-xr-x. 2 migordon 1399    4096 Aug 17 15:05 __pycache__\r\n",
      "-rw-r--r--. 1 migordon 1399   19638 Aug 17 15:06 Data.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33188 Aug 17 15:06 Data_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19911 Aug 17 15:06 MonteCarloTTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33946 Aug 17 15:06 MonteCarloTTToSemiLeptonic_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19911 Aug 17 15:06 MonteCarloTTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33946 Aug 17 15:06 MonteCarloTTTo2L2Nu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19911 Aug 17 15:06 MonteCarloWJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33946 Aug 17 15:06 MonteCarloWJetsToLNu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19911 Aug 17 15:06 MonteCarloST_tW_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33946 Aug 17 15:06 MonteCarloST_tW_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20340 Aug 17 15:06 MonteCarloST_tchannel_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33946 Aug 17 15:06 MonteCarloST_tchannel_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   69342 Aug 17 15:10 2018_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  119089 Aug 17 15:15 2018_Mu_MonteCarloTTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399  114119 Aug 17 15:18 2018_Mu_MonteCarloTTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   79985 Aug 17 15:18 2018_Mu_MonteCarloWJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   66777 Aug 17 15:18 2018_Mu_MonteCarloST_tW_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399   74821 Aug 17 15:19 2018_Mu_MonteCarloST_tchannel_top.root\r\n"
     ]
    }
   ],
   "source": [
    "!ls -ltr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hadd Target file: Combination.root\n",
      "hadd compression setting for all output: 1\n",
      "hadd Source file 1: 2018_Mu_Data.root\n",
      "hadd Source file 2: 2018_Mu_MonteCarloTTToSemiLeptonic.root\n",
      "hadd Source file 3: 2018_Mu_MonteCarloTTTo2L2Nu.root\n",
      "hadd Source file 4: 2018_Mu_MonteCarloWJetsToLNu.root\n",
      "hadd Source file 5: 2018_Mu_MonteCarloST_tW_top.root\n",
      "hadd Source file 6: 2018_Mu_MonteCarloST_tchannel_top.root\n",
      "hadd Target path: Combination.root:/\n"
     ]
    }
   ],
   "source": [
    "!mv Combination.root Combination.root_backup\n",
    "!hadd -f Combination.root 2018_Mu_Data.root 2018_Mu_MonteCarloTTToSemiLeptonic.root 2018_Mu_MonteCarloTTTo2L2Nu.root 2018_Mu_MonteCarloWJetsToLNu.root 2018_Mu_MonteCarloST_tW_top.root 2018_Mu_MonteCarloST_tchannel_top.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___top_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n"
     ]
    }
   ],
   "source": [
    "f = ROOT.TFile.Open('Combination.root', 'read')\n",
    "k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "eras = list(set([kk.split(\"___\")[0] for kk in k]))\n",
    "channels = list(set([kk.split(\"___\")[1] for kk in k]))\n",
    "samples = list(set([kk.split(\"___\")[2] for kk in k]))\n",
    "variables = list(set([kk.split(\"___\")[3] for kk in k]))\n",
    "systematics = list(set([kk.split(\"___\")[4] for kk in k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018']\n",
      "['Mu']\n",
      "['MonteCarloST_tchannel_top', 'MonteCarloTTToSemiLeptonic', 'MonteCarloST_tW_top', 'MonteCarloWJetsToLNu', 'Data', 'MonteCarloTTTo2L2Nu']\n",
      "['leading_isolated_muon_eta_after_met_cut', 'delta_eta_between_isolated_and_jpsi_muons', 'jpsi_muons_charge_in_peak', 'jpsi_pt_with_muon_in_peak', 'delta_r_between_jpsi_muons_in_peak', 'leading_isolated_muon_mass_after_met_cut', 'delta_eta_between_jpsi_muons', 'leading_isolated_electron_eta_after_met_cut', 'jpsi_mass_in_peak', 'number_of_jpsi_muons', 'delta_eta_for_jpsi_muons_in_peak', 'delta_r_between_jpsi_muons', 'jpsi_mass_muons_in_range', 'delta_eta_between_isolated_muon_and_jpsi_in_peak', 'delta_phi_between_isolated_and_jpsi_muons', 'jpsi_muon_isolation_in_peak', 'leading_isolated_muon_mass_initial', 'delta_r_between_isolated_muon_and_jpsi', 'jpsi_muons_eta', 'leading_isolated_electron_charge_after_met_cut', 'number_of_jpsi_muons_initial', 'leading_isolated_electron_pt_initial', 'jpsi_muon_pf_iso_id', 'jpsi_muon_pt', 'number_of_jets_initial', 'ht', 'leading_isolated_electron_mass_initial', 'leading_isolated_muon_mass_after_jet_cut', 'jpsi_muons_phi', 'jpsi_eta', 'leading_isolated_muon_eta_after_jet_cut', 'top_mass_in_peak', 'leading_isolated_electron_mass_after_met_cut', 'jet1_pt', 'jpsi_muons_pt', 'transverse_mass', 'jet1_eta', 'jpsi_muon_pts_in_peak', 'invariant_mass_jpsi_muons', 'jpsi_muon_pf_rel_iso_03_all', 'delta_phi_between_isolated_muon_and_jpsi', 'jpsi_muons_in_range_pfRelIso03_all', 'leading_isolated_muon_pt', 'jpsi_pt', 'leading_isolated_muon_pt_after_met_cut', 'jpsi_muons_charge', 'jet2_phi', 'leading_isolated_electron_phi_after_met_cut', 'leading_isolated_muon_eta_initial', 'isolated_muon_pf_rel_iso_03_all', 'leading_isolated_muon_pt_initial', 'isolated_muons_in_range_pfRelIso03_all', 'leading_isolated_muon_charge_after_met_cut', 'leading_isolated_muon_phi_initial', 'leading_isolated_muon_mass', 'delta_r_between_isolated_muon_and_jpsi_in_peak', 'leading_isolated_muon_charge_after_jet_cut', 'leading_isolated_muon_phi_after_met_cut', 'leading_isolated_electron_charge_initial', 'leading_isolated_muon_pt_after_jet_cut', 'leading_isolated_muon_eta', 'met_after_met_cut', 'jet2_eta', 'met', 'invariant_masses_zoomed', 'met_before_met_cut', 'jet1_phi', 'leading_isolated_muon_charge', 'delta_r_between_isolated_and_jpsi_muons', 'delta_eta_between_isolated_muon_and_jpsi', 'leading_isolated_muon_phi_after_jet_cut', 'delta_phi_for_jpsi_muons_in_peak', 'delta_r_for_jpsi_muons_in_peak', 'delta_phi_between_isolated_muon_and_jpsi_in_peak', 'delta_phi_between_jpsi_muons', 'pt_at_low_delta_r', 'jet2_pt', 'jpsi_phi', 'invariant_mass_jpsi_muons_and_isolated_muons', 'number_of_jets', 'leading_isolated_electron_pt_after_met_cut', 'leading_isolated_muon_phi', 'leading_isolated_electron_phi_initial', 'leading_isolated_electron_eta_initial', 'leading_isolated_muon_charge_initial']\n",
      "['nominal']\n"
     ]
    }
   ],
   "source": [
    "print(eras)\n",
    "print(channels)\n",
    "print(samples)\n",
    "print(variables)\n",
    "print(systematics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetHistos(f, era, channel, variable, systematic = \"nominal\", separator = \"___\"):\n",
    "    \n",
    "    MC = dict()\n",
    "    Data = dict()\n",
    "    \n",
    "    k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "    print(k)\n",
    "    k = [kk for kk in k if era == kk.split(separator)[0]]\n",
    "    k = [kk for kk in k if channel == kk.split(separator)[1]]\n",
    "    k = [kk for kk in k if variable == kk.split(separator)[3]]\n",
    "    k = [kk for kk in k if systematic == kk.split(separator)[4]]\n",
    "    \n",
    "    for kk in k:\n",
    "        sample = kk.split(separator)[2]\n",
    "        \n",
    "        if \"data\" in sample.lower():\n",
    "            Data[sample] = f.Get(kk)\n",
    "            print(\"Data\")\n",
    "            \n",
    "        else:\n",
    "            MC[sample] = f.Get(kk)\n",
    "            print(sample)\n",
    "            \n",
    "    return MC, Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___top_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n",
      "{} {}\n"
     ]
    }
   ],
   "source": [
    "x, y = GetHistos(f, \"2018\", \"Mu\", \"mu_pt\")\n",
    "print(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#Load histograms from file(s)\n",
    "MonteCarlo = dict()\n",
    "RealData = dict()\n",
    "\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "MonteCarlo[\"met_before_met_cut\"] = dict()\n",
    "MonteCarlo[\"met_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jets_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jets\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"] = dict()\n",
    "MonteCarlo[\"jet1_pt\"] = dict()\n",
    "MonteCarlo[\"jet2_pt\"] = dict()\n",
    "MonteCarlo[\"jet1_eta\"] = dict()\n",
    "MonteCarlo[\"jet2_eta\"] = dict()\n",
    "MonteCarlo[\"jet1_phi\"] = dict()\n",
    "MonteCarlo[\"jet2_phi\"] = dict()\n",
    "MonteCarlo[\"transverse_mass\"] = dict()\n",
    "MonteCarlo[\"ht\"] = dict()\n",
    "MonteCarlo[\"met\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_phi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"invariant_masses_zoomed\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_phi\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "MonteCarlo[\"pt_at_low_delta_r\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "MonteCarlo[\"top_mass_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"] = dict()\n",
    "\n",
    "\n",
    "\n",
    "RealData[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "RealData[\"met_before_met_cut\"] = dict()\n",
    "RealData[\"met_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "RealData[\"number_of_jets_initial\"] = dict()\n",
    "RealData[\"number_of_jets\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge\"] = dict()\n",
    "RealData[\"jet1_pt\"] = dict()\n",
    "RealData[\"jet2_pt\"] = dict()\n",
    "RealData[\"jet1_eta\"] = dict()\n",
    "RealData[\"jet2_eta\"] = dict()\n",
    "RealData[\"jet1_phi\"] = dict()\n",
    "RealData[\"jet2_phi\"] = dict()\n",
    "RealData[\"transverse_mass\"] = dict()\n",
    "RealData[\"ht\"] = dict()\n",
    "RealData[\"met\"] = dict()\n",
    "RealData[\"jpsi_muons_pt\"] = dict()\n",
    "RealData[\"jpsi_muons_eta\"] = dict()\n",
    "RealData[\"jpsi_muons_phi\"] = dict()\n",
    "RealData[\"jpsi_muons_charge\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "RealData[\"invariant_masses_zoomed\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"jpsi_pt\"] = dict()\n",
    "RealData[\"jpsi_eta\"] = dict()\n",
    "RealData[\"jpsi_phi\"] = dict()\n",
    "RealData[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"jpsi_muon_pt\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "RealData[\"pt_at_low_delta_r\"] = dict()\n",
    "RealData[\"jpsi_mass_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "RealData[\"top_mass_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"] = dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal\")\n",
    "RealData[\"met_before_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal\")\n",
    "RealData[\"met_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal\")\n",
    "RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal\")\n",
    "RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal\")\n",
    "RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_phi___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___transverse_mass___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___ht___nominal\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___ht___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met___nominal\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal\")\n",
    "RealData[\"jpsi_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal\")\n",
    "RealData[\"jpsi_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal\")\n",
    "RealData[\"jpsi_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal\")\n",
    "RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal\")\n",
    "RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal\")\n",
    "RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"top_mass_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___top_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"top_mass_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___top_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"top_mass_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___top_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"top_mass_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___top_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"top_mass_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___top_mass_in_peak___nominal\")\n",
    "RealData[\"top_mass_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___top_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "S = dict()\n",
    "S[\"leading_isolated_muon_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_initial\", \"Leading Isolated Muon Transverse Momentum (One Muon, No Electrons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_initial\", \"Leading Isolated Muon Pseudorapidity (One Muon, No Electrons); Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_initial\", \"Leading Isolated Muon Angle (One Muon, No Electrons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_initial\", \"Leading Isolated Muon Mass (One Muon, No Electrons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_initial\", \"Leading Isolated Muon Charge (One Muon, No Electrons); Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_initial\", \"Leading Isolated Electron Transverse Momentum (One Electron, No Muons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_initial\", \"Leading Isolated Electron Pseudorapidity (One Electron, No Muons); Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_initial\", \"Leading Isolated Electron Angle (One Electron, No Muons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_initial\", \"Leading Isolated Electron Mass (One Electron, No Muons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_initial\", \"Leading Isolated Electron Charge (One Electron, No Muons); Charge; Events\")\n",
    "S[\"met_before_met_cut\"] = ROOT.THStack(\"s_met_before_met_cut\", \"MET Before MET Cut; Pt (GeV); Events\")\n",
    "S[\"met_after_met_cut\"] = ROOT.THStack(\"s_met_after_met_cut\", \"MET; Pt (GeV); Events\")\n",
    "S[\"leading_isolated_muon_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_met_cut\", \"Leading Isolated Muon Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_met_cut\", \"Leading Isolated Muon Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_met_cut\", \"Leading Isolated Muon Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_met_cut\", \"Leading Isolated Muon Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_met_cut\", \"Leading Isolated Muon Charge After MET Cut; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_after_met_cut\", \"Leading Isolated Electron Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_after_met_cut\", \"Leading Isolated Electron Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_after_met_cut\", \"Leading Isolated Electron Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_after_met_cut\", \"Leading Isolated Electron Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_after_met_cut\", \"Leading Isolated Electron Charge After MET Cut; Charge; Events\")\n",
    "S[\"number_of_jets_initial\"] = ROOT.THStack(\"s_number_of_jets_initial\", \"Number Of Jets Before Jet Cut; Number Of Jets; Events\")\n",
    "S[\"number_of_jets\"] = ROOT.THStack(\"s_number_of_jets\", \"Number Of Jets; Number Of Jets; Events\")\n",
    "S[\"leading_isolated_muon_pt_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_jet_cut\", \"Leading Isolated Muon Transverse Momentum After Jet Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_jet_cut\", \"Leading Isolated Muon Pseudorapidity After Jet Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_jet_cut\", \"Leading Isolated Muon Angle After Jet Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_jet_cut\", \"Leading Isolated Muon Mass After Jet Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_jet_cut\", \"Leading Isolated Muon Charge After Jet Cut; Charge; Events\")\n",
    "S[\"number_of_jpsi_muons_initial\"] = ROOT.THStack(\"s_number_of_jpsi_muons_initial\", \"Number of JPsi Muons Before JPsi Muon Cut; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsi_muons\"] = ROOT.THStack(\"s_number_of_jpsi_muons\", \"Number of JPsi Muons; Number Of Muons; Events\")\n",
    "S[\"leading_isolated_muon_pt\"] = ROOT.THStack(\"s_leading_isolated_muon_pt\", \"Leading Isolated Muon Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta\"] = ROOT.THStack(\"s_leading_isolated_muon_eta\", \"Leading Isolated Muon Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi\"] = ROOT.THStack(\"s_leading_isolated_muon_phi\", \"Leading Isolated Muon Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass\"] = ROOT.THStack(\"s_leading_isolated_muon_mass\", \"Leading Isolated Muon Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge\"] = ROOT.THStack(\"s_leading_isolated_muon_charge\", \"Leading Isolated Muon Charge; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt\"] = ROOT.THStack(\"s_leading_isolated_electron_pt\", \"Leading Isolated Electron Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta\"] = ROOT.THStack(\"s_leading_isolated_electron_eta\", \"Leading Isolated Electron Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi\"] = ROOT.THStack(\"s_leading_isolated_electron_phi\", \"Leading Isolated Electron Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass\"] = ROOT.THStack(\"s_leading_isolated_electron_mass\", \"Leading Isolated Electron Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge\"] = ROOT.THStack(\"s_leading_isolated_electron_charge\", \"Leading Isolated Electron Charge; Charge; Events\")\n",
    "S[\"jet1_pt\"] = ROOT.THStack(\"s_jet1_pt\", \"Jet Transverse Momentum for Leading Jet; Pt (GeV); Events\")\n",
    "S[\"jet2_pt\"] = ROOT.THStack(\"s_jet2_pt\", \"Jet Transverse Momentum for Subleading Jet; Pt (GeV); Events\")\n",
    "S[\"jet1_eta\"] = ROOT.THStack(\"s_jet1_eta\", \"Jet Pseudorapidity for Leading Jet; Eta; Events\")\n",
    "S[\"jet2_eta\"] = ROOT.THStack(\"s_jet2_eta\", \"Jet Pseudorapidity for Subleading Jet; Eta; Events\")\n",
    "S[\"jet1_phi\"] = ROOT.THStack(\"s_jet1_phi\", \"Jet Angle for Leading Jet; Phi (Radians); Events\")\n",
    "S[\"jet2_phi\"] = ROOT.THStack(\"s_jet2_phi\", \"Jet Angle for Subleading Jet; Phi (Radians); Events\")\n",
    "S[\"transverse_mass\"] = ROOT.THStack(\"s_transverse_mass\", \"Transverse Mass; Transverse Mass (GeV); Events\")\n",
    "S[\"ht\"] = ROOT.THStack(\"s_ht\", \"Ht; Ht; Events\")\n",
    "S[\"met\"] = ROOT.THStack(\"s_met\", \"MET; Pt (GeV); Events\")\n",
    "S[\"jpsi_muons_pt\"] = ROOT.THStack(\"s_jpsi_muons_pt\", \"Transverse Momentum for JPsi Muons; Pt; Events\")\n",
    "S[\"jpsi_muons_eta\"] = ROOT.THStack(\"s_jpsi_muons_eta\", \"Pseudorapidity for JPsi Muons; Eta; Events\")\n",
    "S[\"jpsi_muons_phi\"] = ROOT.THStack(\"s_jpsi_muons_phi\", \"Angle for JPsi Muons; Phi; Events\")\n",
    "S[\"jpsi_muons_charge\"] = ROOT.THStack(\"s_jpsi_muons_charge\", \"Charge of JPsi Muons; Charge; Events\")\n",
    "S[\"invariant_mass_jpsi_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_masses_zoomed\"] = ROOT.THStack(\"s_invariant_masses_zoomed\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons_and_isolated_muons\", \"Invariant Masses for J/Psi Candidate And Isolated Muons (dR > 2); Invariant Masses; Events\")\n",
    "S[\"delta_eta_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_isolated_and_jpsi_muons\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_isolated_and_jpsi_muons\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_isolated_and_jpsi_muons\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\")\n",
    "S[\"jpsi_pt\"] = ROOT.THStack(\"s_jpsi_pt\", \"Transverse Momentum for JPsi; Pt; Events\")\n",
    "S[\"jpsi_eta\"] = ROOT.THStack(\"s_jpsi_eta\", \"Pseudorapidity for JPsi; Eta; Events\")\n",
    "S[\"jpsi_phi\"] = ROOT.THStack(\"s_jpsi_phi\", \"Angle for JPsi; Phi; Events\")\n",
    "S[\"delta_eta_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_jpsi_muons\", \"Delta Eta for JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_jpsi_muons\", \"Delta Phi for JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons\", \"Delta R for JPsi Muons; Delta R; Events\")\n",
    "S[\"delta_r_between_jpsi_muons_in_peak\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons_in_peak\", \"Delta R for JPsi Muons In Peak; Delta R; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_eta_between_isolated_muon_and_jpsi\", \"Delta Eta for Isolated Muon And JPsi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_phi_between_isolated_muon_and_jpsi\", \"Delta Phi for Isolated Muon And JPsi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_r_between_isolated_muon_and_jpsi\", \"Delta R for Isolated Muon And JPsi; Delta R; Events\")\n",
    "S[\"jpsi_muon_pt\"] = ROOT.THStack(\"s_jpsi_muon_pt\", \"JPsi Muon Pt - Muon Id Medium, Iso Id Tight; JPsi Muon Pt; Events\")\n",
    "\n",
    "\n",
    "S[\"jpsi_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_jpsi_muon_pf_rel_iso_03_all\", \"JPsi Muon Pf Rel Iso 03 All; JPsi Muon Pf Rel Iso 03 All; Events\")\n",
    "S[\"jpsi_muon_pf_iso_id\"] = ROOT.THStack(\"s_jpsi_muon_pf_iso_id\", \"JPsi Muon Pf Iso Id - Muon Id Medium, Iso Id Tight; JPsi Muon Pf Iso Id; Events\")\n",
    "S[\"isolated_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_isolated_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For Isolated Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_jpsi_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For JPsi Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_mass_muons_in_range\"] = ROOT.THStack(\"s_jpsi_mass_muons_in_range\", \"JPsi Mass For JPsis In 90-120 GeV Range; JPsi Mass; Events\")\n",
    "S[\"pt_at_low_delta_r\"] = ROOT.THStack(\"s_pt_at_low_delta_r\", \"Isolated Muon and JPsi Pt at Delta R < 0.3; Isolated Muon Pt; JPsi Muon Pt; Events\")\n",
    "S[\"jpsi_mass_in_peak\"] = ROOT.THStack(\"jpsi_mass_in_peak\", \"J/Psi Mass Made from Muons In Peak; J/Psi Mass; Events\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_eta_for_jpsi_muons_in_peak\", \"Delta Eta For J/Psi Muons In Peak; Delta Eta; Events\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_phi_for_jpsi_muons_in_peak\", \"Delta Phi For J/Psi Muons In Peak; Delta Phi; Events\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_r_for_jpsi_muons_in_peak\", \"Delta R For J/Psi Muons In Peak; Delta R; Events\")\n",
    "S[\"jpsi_muons_charge_in_peak\"] = ROOT.THStack(\"jpsi_muons_charge_in_peak\", \"J/Psi Muons In Peak Charge; Charge; Events\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"] = ROOT.THStack(\"jpsi_pt_with_muon_in_peak\", \"J/Psi Pt With Muons In Peak; Pt; Events\")\n",
    "S[\"jpsi_muon_pts_in_peak\"] = ROOT.THStack(\"jpsi_muon_pts_in_peak\", \"J/Psi Muon Pts In Peak; Positive Muon Pts; Negative Muon Pts; Events\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"] = ROOT.THStack(\"jpsi_muon_isolation_in_peak\", \"J/Psi Pf Rel Iso 03 All Made From Muons In Peak; Pf Rel Iso 03 All; Events\")\n",
    "S[\"top_mass_in_peak\"] = ROOT.THStack(\"top_mass_in_peak\", \"Top Quark Mass Made From Muons In Peak; Mass; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"Delta Eta Between Isolated Muon And J/Psi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"Delta Phi Between Isolated Muon And J/Psi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_r_between_isolated_muon_and_jpsi_in_peak\", \"Delta R Between Isolated Muon And J/Psi; Delta R; Events\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_isolated_muon_pf_rel_iso_03_all\", \"Isolated Muon PfRelIso03_All; Isolated Muon PfRelIso03_All; Events\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "leading_isolated_muon_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_before_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_before_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_before_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_before_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_before_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jets ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "number_of_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "leading_isolated_muon_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet1_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jet2_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "transverse_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "transverse_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "transverse_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "transverse_mass ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "transverse_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "ht TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "ht TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "ht WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "ht ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "ht ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "met ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_masses_zoomed TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_masses_zoomed TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_masses_zoomed WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_masses_zoomed ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_masses_zoomed ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_iso_id TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_iso_id TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_iso_id WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_iso_id ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pf_iso_id ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_muons_in_range TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_muons_in_range TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_muons_in_range WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_muons_in_range ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_muons_in_range ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "pt_at_low_delta_r TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "pt_at_low_delta_r TTTo2L2Nu <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "pt_at_low_delta_r WJetsToLNu <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "pt_at_low_delta_r ST_tW_top <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "pt_at_low_delta_r ST_tchannel_top <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "jpsi_mass_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_mass_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muons_charge_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt_with_muon_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt_with_muon_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt_with_muon_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt_with_muon_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_pt_with_muon_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_pts_in_peak TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "jpsi_muon_pts_in_peak TTTo2L2Nu <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "jpsi_muon_pts_in_peak WJetsToLNu <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "jpsi_muon_pts_in_peak ST_tW_top <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "jpsi_muon_pts_in_peak ST_tchannel_top <class cppyy.gbl.TH2D at 0x902beb0>\n",
      "jpsi_muon_isolation_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_isolation_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_isolation_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_isolation_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "jpsi_muon_isolation_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "top_mass_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "top_mass_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "top_mass_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "top_mass_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "top_mass_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8e8b350>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8e8b350>\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for item in MonteCarlo:\n",
    "\n",
    "    for sample, color in {\"TTToSemiLeptonic\" : ROOT.kRed, \"TTTo2L2Nu\" : ROOT.kGreen, \"WJetsToLNu\" : ROOT.kBlue, \"ST_tW_top\" : ROOT.kMagenta, \"ST_tchannel_top\" : ROOT.kOrange}.items():\n",
    "        print(item, sample, type(MonteCarlo[item][sample]))\n",
    "        MonteCarlo[item][sample].SetFillColor(color)\n",
    "        MonteCarlo[item][sample].SetLineColor(color)\n",
    "        S[item].Add(MonteCarlo[item][sample])\n",
    "\n",
    "canvasas = dict()\n",
    "\n",
    "# canvas0 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas0.Draw()\n",
    "# canvasas['0'] = canvas0\n",
    "\n",
    "# canvas1 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas1.Draw()\n",
    "# canvasas['1'] = canvas1\n",
    "\n",
    "# canvas2 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas2.Draw()\n",
    "# canvasas['2'] = canvas2\n",
    "\n",
    "# canvas3 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas3.Draw()\n",
    "# canvasas['3'] = canvas3\n",
    "\n",
    "# canvas4 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas4.Draw()\n",
    "# canvasas['4'] = canvas4\n",
    "\n",
    "# canvas5 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas5.Draw()\n",
    "# canvasas['5'] = canvas5\n",
    "\n",
    "# canvas6 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas6.Draw()\n",
    "# canvasas['6'] = canvas6\n",
    "\n",
    "# canvas7 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas7.Draw()\n",
    "# canvasas['7'] = canvas7\n",
    "\n",
    "# canvas8 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas8.Draw()\n",
    "# canvasas['8'] = canvas8\n",
    "\n",
    "# canvas9 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas9.Draw()\n",
    "# canvasas['9'] = canvas9\n",
    "\n",
    "# canvas10 = ROOT.TCanvas(\"c_met_before_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_before_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas10.Draw()\n",
    "# canvasas['10'] = canvas10\n",
    "\n",
    "# canvas11 = ROOT.TCanvas(\"c_met_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas11.Draw()\n",
    "# canvasas['11'] = canvas11\n",
    "\n",
    "# canvas12 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas12.Draw()\n",
    "# canvasas['12'] = canvas12\n",
    "\n",
    "# canvas13 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas13.Draw()\n",
    "# canvasas['13'] = canvas13\n",
    "\n",
    "# canvas14 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas14.Draw()\n",
    "# canvasas['14'] = canvas14\n",
    "\n",
    "# canvas15 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas15.Draw()\n",
    "# canvasas['15'] = canvas15\n",
    "\n",
    "# canvas16 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas16.Draw()\n",
    "# canvasas['16'] = canvas16\n",
    "\n",
    "# canvas17 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas17.Draw()\n",
    "# canvasas['17'] = canvas17\n",
    "\n",
    "# canvas18 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas18.Draw()\n",
    "# canvasas['18'] = canvas18\n",
    "\n",
    "# canvas19 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas19.Draw()\n",
    "# canvasas['19'] = canvas19\n",
    "\n",
    "# canvas20 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas20.Draw()\n",
    "# canvasas['20'] = canvas20\n",
    "\n",
    "# canvas21 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas21.Draw()\n",
    "# canvasas['21'] = canvas21\n",
    "\n",
    "# canvas22 = ROOT.TCanvas(\"c_number_of_jets_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jets_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas22.Draw()\n",
    "# canvasas['22'] = canvas22\n",
    "\n",
    "\n",
    "\n",
    "# canvas24 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas24.Draw()\n",
    "# canvasas['24'] = canvas24\n",
    "\n",
    "# canvas25 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas25.Draw()\n",
    "# canvasas['25'] = canvas25\n",
    "\n",
    "# canvas26 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas26.Draw()\n",
    "# canvasas['26'] = canvas26\n",
    "\n",
    "# canvas27 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas27.Draw()\n",
    "# canvasas['27'] = canvas27\n",
    "\n",
    "# canvas28 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas28.Draw()\n",
    "# canvasas['28'] = canvas28\n",
    "\n",
    "# canvas29 = ROOT.TCanvas(\"c_number_of_jpsi_muons_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jpsi_muons_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas29.Draw()\n",
    "# canvasas['29'] = canvas29\n",
    "\n",
    "# canvas30 = ROOT.TCanvas(\"c_number_of_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas30.Draw()\n",
    "# canvasas['30'] = canvas30\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas31 = ROOT.TCanvas(\"c_leading_isolated_muon_pt\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas31.Draw()\n",
    "canvasas['31'] = canvas31\n",
    "\n",
    "canvas32 = ROOT.TCanvas(\"c_leading_isolated_muon_eta\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas32.Draw()\n",
    "canvasas['32'] = canvas32\n",
    "\n",
    "canvas33 = ROOT.TCanvas(\"c_leading_isolated_muon_phi\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33.Draw()\n",
    "canvasas['33'] = canvas33\n",
    "\n",
    "canvas33a = ROOT.TCanvas(\"c_isolated_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33a.Draw()\n",
    "canvasas['33a'] = canvas33a\n",
    "\n",
    "canvas34a = ROOT.TCanvas(\"c_number_of_jets\", \"\", 800, 800)\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_jets\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas34a.Draw()\n",
    "canvasas['34a'] = canvas34a\n",
    "\n",
    "canvas35 = ROOT.TCanvas(\"c_jet1_pt\", \"\", 800, 800)\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas35.Draw()\n",
    "canvasas['35'] = canvas35\n",
    "\n",
    "canvas36 = ROOT.TCanvas(\"c_jet2_pt\", \"\", 800, 800)\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas36.Draw()\n",
    "canvasas['36'] = canvas36\n",
    "\n",
    "canvas37 = ROOT.TCanvas(\"c_jet1_eta\", \"\", 800, 800)\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas37.Draw()\n",
    "canvasas['37'] = canvas37\n",
    "\n",
    "canvas38 = ROOT.TCanvas(\"c_jet2_eta\", \"\", 800, 800)\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas38.Draw()\n",
    "canvasas['38'] = canvas38\n",
    "\n",
    "canvas39 = ROOT.TCanvas(\"c_jet1_phi\", \"\", 800, 800)\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas39.Draw()\n",
    "canvasas['39'] = canvas39\n",
    "\n",
    "canvas40 = ROOT.TCanvas(\"c_jet2_phi\", \"\", 800, 800)\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas40.Draw()\n",
    "canvasas['40'] = canvas40\n",
    "\n",
    "canvas41 = ROOT.TCanvas(\"c_transverse_mass\", \"\", 800, 800)\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"transverse_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas41.Draw()\n",
    "canvasas['41'] = canvas41\n",
    "\n",
    "canvas42 = ROOT.TCanvas(\"c_ht\", \"\", 800, 800)\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"ht\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas42.Draw()\n",
    "canvasas['42'] = canvas42\n",
    "\n",
    "canvas42a = ROOT.TCanvas(\"c_met\", \"\", 800, 800)\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"met\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# ROOT.TRatioPlot(RealData[\"met\"][\"SingleMuon2018\"],MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"]).Draw(\"PE1\")\n",
    "canvas42a.Draw()\n",
    "canvasas['42a'] = canvas42a\n",
    "\n",
    "canvas43 = ROOT.TCanvas(\"c_jpsi_muons_pt\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas43.Draw()\n",
    "canvasas['43'] = canvas43\n",
    "\n",
    "canvas44 = ROOT.TCanvas(\"c_jpsi_muons_eta\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas44.Draw()\n",
    "canvasas['44'] = canvas44\n",
    "\n",
    "canvas45 = ROOT.TCanvas(\"c_jpsi_muons_phi\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas45.Draw()\n",
    "canvasas['45'] = canvas45\n",
    "\n",
    "# canvas46 = ROOT.TCanvas(\"c_jpsi_muons_charge\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_charge\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas46.Draw()\n",
    "# canvasas['46'] = canvas46\n",
    "\n",
    "# canvas61b = ROOT.TCanvas(\"c_jpsi_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61b.Draw()\n",
    "# canvasas['61b'] = canvas61b\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas33a = ROOT.TCanvas(\"c_leading_isolated_muon_mass\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas33a.Draw()\n",
    "# canvasas['33a'] = canvas33a\n",
    "\n",
    "# canvas34 = ROOT.TCanvas(\"c_leading_isolated_muon_charge\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas34.Draw()\n",
    "# canvasas['34'] = canvas34\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas47 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_mass_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas47.Draw()\n",
    "# canvasas['47'] = canvas47\n",
    "\n",
    "# canvas48 = ROOT.TCanvas(\"c_invariant_masses_zoomed\", \"\", 800, 800)\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_masses_zoomed\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas48.Draw()\n",
    "# canvasas['48'] = canvas48\n",
    "\n",
    "canvas49 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons_and_isolated_muons\", \"\", 800, 800)\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas49.Draw()\n",
    "canvasas['49'] = canvas49\n",
    "\n",
    "# canvas50 = ROOT.TCanvas(\"c_delta_eta_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas50.Draw()\n",
    "# canvasas['50'] = canvas50\n",
    "\n",
    "# canvas51 = ROOT.TCanvas(\"c_delta_phi_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas51.Draw()\n",
    "# canvasas['51'] = canvas51\n",
    "\n",
    "# canvas52 = ROOT.TCanvas(\"c_delta_r_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas52.Draw()\n",
    "# canvasas['52'] = canvas52\n",
    "\n",
    "# canvas53 = ROOT.TCanvas(\"c_jpsi_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas53.Draw()\n",
    "# canvasas['53'] = canvas53\n",
    "\n",
    "# canvas54 = ROOT.TCanvas(\"c_jpsi_eta\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_eta\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas54.Draw()\n",
    "# canvasas['54'] = canvas54\n",
    "\n",
    "# canvas55 = ROOT.TCanvas(\"c_jpsi_phi\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_phi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas55.Draw()\n",
    "# canvasas['55'] = canvas55\n",
    "\n",
    "# canvas56 = ROOT.TCanvas(\"c_delta_eta_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas56.Draw()\n",
    "# canvasas['56'] = canvas56\n",
    "\n",
    "# canvas57 = ROOT.TCanvas(\"c_delta_phi_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas57.Draw()\n",
    "# canvasas['57'] = canvas57\n",
    "\n",
    "# canvas58 = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58.Draw()\n",
    "# canvasas['58'] = canvas58\n",
    "\n",
    "\n",
    "# canvas58a = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58a.Draw()\n",
    "# canvasas['58a'] = canvas58a\n",
    "\n",
    "\n",
    "# canvas59 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas59.Draw()\n",
    "# canvasas['59'] = canvas59\n",
    "\n",
    "# canvas60 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas60.Draw()\n",
    "# canvasas['60'] = canvas60\n",
    "\n",
    "# canvas61 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61.Draw()\n",
    "# canvasas['61'] = canvas61\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas61a = ROOT.TCanvas(\"c_jpsi_muon_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61a.Draw()\n",
    "# canvasas['61a'] = canvas61a\n",
    "\n",
    "\n",
    "\n",
    "# canvas61c = ROOT.TCanvas(\"c_jpsi_muon_pf_iso_id\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_iso_id\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61c.Draw()\n",
    "# canvasas['61c'] = canvas61c\n",
    "\n",
    "# canvas61d = ROOT.TCanvas(\"c_isolated_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"isolated_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61d.Draw()\n",
    "# canvasas['61d'] = canvas61d\n",
    "\n",
    "# canvas61e = ROOT.TCanvas(\"c_jpsi_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61e.Draw()\n",
    "# canvasas['61e'] = canvas61e\n",
    "\n",
    "# canvas61f = ROOT.TCanvas(\"c_jpsi_mass_muons_in_range\", \"\", 800, 800)\n",
    "# #RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_mass_muons_in_range\"].Draw(\"HIST S\")\n",
    "# RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61f.Draw()\n",
    "# canvasas['61f'] = canvas61f\n",
    "\n",
    "# canvas61g = ROOT.TCanvas(\"c_pt_at_low_delta_r\", \"\", 800, 800)\n",
    "# RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas61g.Draw()\n",
    "# canvasas['61g'] = canvas61g\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas96 = ROOT.TCanvas(\"c_jpsi_mass_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_mass_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas96.Draw()\n",
    "canvasas['96'] = canvas96\n",
    "\n",
    "canvas97 = ROOT.TCanvas(\"c_delta_eta_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas97.Draw()\n",
    "canvasas['97'] = canvas97\n",
    "\n",
    "canvas98 = ROOT.TCanvas(\"c_delta_phi_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas98.Draw()\n",
    "canvasas['98'] = canvas98\n",
    "\n",
    "canvas99 = ROOT.TCanvas(\"c_delta_r_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas99.Draw()\n",
    "canvasas['99'] = canvas99\n",
    "\n",
    "canvas100 = ROOT.TCanvas(\"c_jpsi_muons_charge_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_charge_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas100.Draw()\n",
    "canvasas['100'] = canvas100\n",
    "\n",
    "canvas101 = ROOT.TCanvas(\"c_jpsi_pt_with_muon_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas101.Draw()\n",
    "canvasas['101'] = canvas101\n",
    "\n",
    "canvas101a = ROOT.TCanvas(\"c_jpsi_muon_pts_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "canvas101a.Draw()\n",
    "canvasas['101a'] = canvas101a\n",
    "\n",
    "canvas102 = ROOT.TCanvas(\"c_jpsi_muon_isolation_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas102.Draw()\n",
    "canvasas['102'] = canvas102\n",
    "\n",
    "canvas103 = ROOT.TCanvas(\"c_top_mass_in_peak\", \"\", 800, 800)\n",
    "RealData[\"top_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"top_mass_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"top_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas103.Draw()\n",
    "canvasas['103'] = canvas103\n",
    "\n",
    "canvas104 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas104.Draw()\n",
    "canvasas['104'] = canvas104\n",
    "\n",
    "canvas105 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas105.Draw()\n",
    "canvasas['105'] = canvas105\n",
    "\n",
    "canvas106 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas106.Draw()\n",
    "canvasas['106'] = canvas106"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening PDF\n",
      "Closing PDF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf has been created using the current canvas\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf and file closed\n"
     ]
    }
   ],
   "source": [
    "for kn, k in enumerate(canvasas.keys()):\n",
    "    \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvasas[k].SaveAs('Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf(')\n",
    "    \n",
    "    elif kn == len(canvasas) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvasas[k].SaveAs('Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf)')\n",
    "    \n",
    "    else:\n",
    "        canvasas[k].SaveAs('Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "era = \"2017\"\n",
    "channel = \"Mu\"\n",
    "\n",
    "def DrawStack(MonteCarlo, Data, separator = \"___\"):\n",
    "    era, channel, sample, variable, systematic = list(MonteCarlo.values())[0].GetName().split(separator)\n",
    "    name = \"_\".join([\"stack\", era, channel, variable, systematic])\n",
    "    colors = {\"TTToSemiLeptonic\" : ROOT.kRed}\n",
    "    stack = ROOT.THStack(name, \"\")\n",
    "    \n",
    "    canvas = ROOT.TCanvas(name.replace(\"stack\", \"canvas\"), \"\", 800, 800)\n",
    "  \n",
    "    \n",
    "    for sample, hist in MonteCarlo.items():\n",
    "        hist.SetFillColor(colors.get(sample, ROOT.kMagenta))\n",
    "        hist.SetLineColor(colors.get(sample, ROOT.kMagenta))\n",
    "        stack.Add(hist)\n",
    "        \n",
    "    aggregate = None\n",
    "    \n",
    "    for sample, hist in Data.items():\n",
    "        if aggregate == None:\n",
    "            aggregate = hist.Clone(hist.GetName().replace(\"sample\", \"allData\"))\n",
    "            \n",
    "        else:\n",
    "            aggregate += hist\n",
    "    \n",
    "    maxima = []\n",
    "    minima = []\n",
    "    maxima.append(stack.GetMaximum())\n",
    "    maxima.append(aggregate.GetMaximum())\n",
    "    minima.append(stack.GetMinimum())\n",
    "    minima.append(aggregate.GetMinimum())\n",
    "    \n",
    "    stack.SetMinimum(min(minima))\n",
    "    stack.SetMaximum(max(maxima))\n",
    "    \n",
    "    stack.Draw(\"HIST S\")\n",
    "    aggregate.Draw(\"PE1 SAME\")\n",
    "    \n",
    "    canvas.BuildLegend()\n",
    "    \n",
    "    return stack, aggregate, canvas\n",
    "\n",
    "for kn, variable in enumerate(variables):\n",
    "        \n",
    "    MonteCarlo, RealData = GetHistos(f, era, channel, variable)\n",
    "    \n",
    "    stack, aggregate, canvas = DrawStack(MonteCarlo, RealData)\n",
    "       \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvas.SaveAs('December2.pdf(')\n",
    "\n",
    "    elif kn == len(variables) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvas.SaveAs('December2.pdf)')\n",
    "\n",
    "    else:\n",
    "        canvas.SaveAs('December2.pdf')\n",
    "        \n",
    "    canvas.SaveAs(variable + 'December2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on _Helper in module _sitebuiltins object:\n",
      "\n",
      "class _Helper(builtins.object)\n",
      " |  Define the builtin 'help'.\n",
      " |  \n",
      " |  This is a wrapper around pydoc.help that provides a helpful message\n",
      " |  when 'help' is typed at the Python interactive prompt.\n",
      " |  \n",
      " |  Calling help() at the Python prompt starts an interactive help session.\n",
      " |  Calling help(thing) prints help for the python object 'thing'.\n",
      " |  \n",
      " |  Methods defined here:\n",
      " |  \n",
      " |  __call__(self, *args, **kwds)\n",
      " |      Call self as a function.\n",
      " |  \n",
      " |  __repr__(self)\n",
      " |      Return repr(self).\n",
      " |  \n",
      " |  ----------------------------------------------------------------------\n",
      " |  Data descriptors defined here:\n",
      " |  \n",
      " |  __dict__\n",
      " |      dictionary for instance variables (if defined)\n",
      " |  \n",
      " |  __weakref__\n",
      " |      list of weak references to the object (if defined)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(help)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
