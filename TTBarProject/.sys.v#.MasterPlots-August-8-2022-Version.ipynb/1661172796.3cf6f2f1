{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!ls -ltr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!mv Combination.root Combination.root_backup\n",
    "!hadd -f Combination.root 2018_Mu_Data.root 2018_Mu_MonteCarloTTToSemiLeptonic.root 2018_Mu_MonteCarloTTTo2L2Nu.root 2018_Mu_MonteCarloWJetsToLNu.root 2018_Mu_MonteCarloST_tW_top.root 2018_Mu_MonteCarloST_tchannel_top.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "f = ROOT.TFile.Open('Combination.root', 'read')\n",
    "k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "eras = list(set([kk.split(\"___\")[0] for kk in k]))\n",
    "channels = list(set([kk.split(\"___\")[1] for kk in k]))\n",
    "samples = list(set([kk.split(\"___\")[2] for kk in k]))\n",
    "variables = list(set([kk.split(\"___\")[3] for kk in k]))\n",
    "systematics = list(set([kk.split(\"___\")[4] for kk in k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(eras)\n",
    "print(channels)\n",
    "print(samples)\n",
    "print(variables)\n",
    "print(systematics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetHistos(f, era, channel, variable, systematic = \"nominal\", separator = \"___\"):\n",
    "    \n",
    "    MC = dict()\n",
    "    Data = dict()\n",
    "    \n",
    "    k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "    print(k)\n",
    "    k = [kk for kk in k if era == kk.split(separator)[0]]\n",
    "    k = [kk for kk in k if channel == kk.split(separator)[1]]\n",
    "    k = [kk for kk in k if variable == kk.split(separator)[3]]\n",
    "    k = [kk for kk in k if systematic == kk.split(separator)[4]]\n",
    "    \n",
    "    for kk in k:\n",
    "        sample = kk.split(separator)[2]\n",
    "        \n",
    "        if \"data\" in sample.lower():\n",
    "            Data[sample] = f.Get(kk)\n",
    "            print(\"Data\")\n",
    "            \n",
    "        else:\n",
    "            MC[sample] = f.Get(kk)\n",
    "            print(sample)\n",
    "            \n",
    "    return MC, Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x, y = GetHistos(f, \"2018\", \"Mu\", \"mu_pt\")\n",
    "print(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#Load histograms from file(s)\n",
    "MonteCarlo = dict()\n",
    "RealData = dict()\n",
    "\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "MonteCarlo[\"met_before_met_cut\"] = dict()\n",
    "MonteCarlo[\"met_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jets_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jets\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsis\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"] = dict()\n",
    "MonteCarlo[\"jet1_pt\"] = dict()\n",
    "MonteCarlo[\"jet2_pt\"] = dict()\n",
    "MonteCarlo[\"jet1_eta\"] = dict()\n",
    "MonteCarlo[\"jet2_eta\"] = dict()\n",
    "MonteCarlo[\"jet1_phi\"] = dict()\n",
    "MonteCarlo[\"jet2_phi\"] = dict()\n",
    "MonteCarlo[\"transverse_mass\"] = dict()\n",
    "MonteCarlo[\"ht\"] = dict()\n",
    "MonteCarlo[\"met\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_phi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"invariant_masses_zoomed\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_phi\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "MonteCarlo[\"pt_at_low_delta_r\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"] = dict()\n",
    "\n",
    "\n",
    "\n",
    "RealData[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "RealData[\"met_before_met_cut\"] = dict()\n",
    "RealData[\"met_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "RealData[\"number_of_jets_initial\"] = dict()\n",
    "RealData[\"number_of_jets\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons\"] = dict()\n",
    "RealData[\"number_of_jpsis\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge\"] = dict()\n",
    "RealData[\"jet1_pt\"] = dict()\n",
    "RealData[\"jet2_pt\"] = dict()\n",
    "RealData[\"jet1_eta\"] = dict()\n",
    "RealData[\"jet2_eta\"] = dict()\n",
    "RealData[\"jet1_phi\"] = dict()\n",
    "RealData[\"jet2_phi\"] = dict()\n",
    "RealData[\"transverse_mass\"] = dict()\n",
    "RealData[\"ht\"] = dict()\n",
    "RealData[\"met\"] = dict()\n",
    "RealData[\"jpsi_muons_pt\"] = dict()\n",
    "RealData[\"jpsi_muons_eta\"] = dict()\n",
    "RealData[\"jpsi_muons_phi\"] = dict()\n",
    "RealData[\"jpsi_muons_charge\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "RealData[\"invariant_masses_zoomed\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"jpsi_pt\"] = dict()\n",
    "RealData[\"jpsi_eta\"] = dict()\n",
    "RealData[\"jpsi_phi\"] = dict()\n",
    "RealData[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"jpsi_muon_pt\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "RealData[\"pt_at_low_delta_r\"] = dict()\n",
    "RealData[\"jpsi_mass_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"] = dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal\")\n",
    "RealData[\"met_before_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal\")\n",
    "RealData[\"met_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal\")\n",
    "RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal\")\n",
    "RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal\")\n",
    "RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsis___nominal\")\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_phi___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___transverse_mass___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___ht___nominal\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___ht___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met___nominal\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal\")\n",
    "RealData[\"jpsi_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal\")\n",
    "RealData[\"jpsi_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal\")\n",
    "RealData[\"jpsi_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal\")\n",
    "RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal\")\n",
    "RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal\")\n",
    "RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "S = dict()\n",
    "S[\"leading_isolated_muon_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_initial\", \"Leading Isolated Muon Transverse Momentum (One Muon, No Electrons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_initial\", \"Leading Isolated Muon Pseudorapidity (One Muon, No Electrons); Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_initial\", \"Leading Isolated Muon Angle (One Muon, No Electrons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_initial\", \"Leading Isolated Muon Mass (One Muon, No Electrons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_initial\", \"Leading Isolated Muon Charge (One Muon, No Electrons); Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_initial\", \"Leading Isolated Electron Transverse Momentum (One Electron, No Muons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_initial\", \"Leading Isolated Electron Pseudorapidity (One Electron, No Muons); Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_initial\", \"Leading Isolated Electron Angle (One Electron, No Muons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_initial\", \"Leading Isolated Electron Mass (One Electron, No Muons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_initial\", \"Leading Isolated Electron Charge (One Electron, No Muons); Charge; Events\")\n",
    "S[\"met_before_met_cut\"] = ROOT.THStack(\"s_met_before_met_cut\", \"MET Before MET Cut; Pt (GeV); Events\")\n",
    "S[\"met_after_met_cut\"] = ROOT.THStack(\"s_met_after_met_cut\", \"MET; Pt (GeV); Events\")\n",
    "S[\"leading_isolated_muon_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_met_cut\", \"Leading Isolated Muon Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_met_cut\", \"Leading Isolated Muon Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_met_cut\", \"Leading Isolated Muon Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_met_cut\", \"Leading Isolated Muon Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_met_cut\", \"Leading Isolated Muon Charge After MET Cut; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_after_met_cut\", \"Leading Isolated Electron Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_after_met_cut\", \"Leading Isolated Electron Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_after_met_cut\", \"Leading Isolated Electron Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_after_met_cut\", \"Leading Isolated Electron Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_after_met_cut\", \"Leading Isolated Electron Charge After MET Cut; Charge; Events\")\n",
    "S[\"number_of_jets_initial\"] = ROOT.THStack(\"s_number_of_jets_initial\", \"Number Of Jets Before Jet Cut; Number Of Jets; Events\")\n",
    "S[\"number_of_jets\"] = ROOT.THStack(\"s_number_of_jets\", \"Number Of Jets; Number Of Jets; Events\")\n",
    "S[\"leading_isolated_muon_pt_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_jet_cut\", \"Leading Isolated Muon Transverse Momentum After Jet Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_jet_cut\", \"Leading Isolated Muon Pseudorapidity After Jet Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_jet_cut\", \"Leading Isolated Muon Angle After Jet Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_jet_cut\", \"Leading Isolated Muon Mass After Jet Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_jet_cut\", \"Leading Isolated Muon Charge After Jet Cut; Charge; Events\")\n",
    "S[\"number_of_jpsi_muons_initial\"] = ROOT.THStack(\"s_number_of_jpsi_muons_initial\", \"Number of JPsi Muons Before JPsi Muon Cut; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsi_muons\"] = ROOT.THStack(\"s_number_of_jpsi_muons\", \"Number of JPsi Muons; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsis\"] = ROOT.THStack(\"s_number_of_jpsis\", \"Number of JPsis; Number Of JPsis; Events\")\n",
    "S[\"leading_isolated_muon_pt\"] = ROOT.THStack(\"s_leading_isolated_muon_pt\", \"Leading Isolated Muon Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta\"] = ROOT.THStack(\"s_leading_isolated_muon_eta\", \"Leading Isolated Muon Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi\"] = ROOT.THStack(\"s_leading_isolated_muon_phi\", \"Leading Isolated Muon Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass\"] = ROOT.THStack(\"s_leading_isolated_muon_mass\", \"Leading Isolated Muon Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge\"] = ROOT.THStack(\"s_leading_isolated_muon_charge\", \"Leading Isolated Muon Charge; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt\"] = ROOT.THStack(\"s_leading_isolated_electron_pt\", \"Leading Isolated Electron Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta\"] = ROOT.THStack(\"s_leading_isolated_electron_eta\", \"Leading Isolated Electron Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi\"] = ROOT.THStack(\"s_leading_isolated_electron_phi\", \"Leading Isolated Electron Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass\"] = ROOT.THStack(\"s_leading_isolated_electron_mass\", \"Leading Isolated Electron Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge\"] = ROOT.THStack(\"s_leading_isolated_electron_charge\", \"Leading Isolated Electron Charge; Charge; Events\")\n",
    "S[\"jet1_pt\"] = ROOT.THStack(\"s_jet1_pt\", \"Jet Transverse Momentum for Leading Jet; Pt (GeV); Events\")\n",
    "S[\"jet2_pt\"] = ROOT.THStack(\"s_jet2_pt\", \"Jet Transverse Momentum for Subleading Jet; Pt (GeV); Events\")\n",
    "S[\"jet1_eta\"] = ROOT.THStack(\"s_jet1_eta\", \"Jet Pseudorapidity for Leading Jet; Eta; Events\")\n",
    "S[\"jet2_eta\"] = ROOT.THStack(\"s_jet2_eta\", \"Jet Pseudorapidity for Subleading Jet; Eta; Events\")\n",
    "S[\"jet1_phi\"] = ROOT.THStack(\"s_jet1_phi\", \"Jet Angle for Leading Jet; Phi (Radians); Events\")\n",
    "S[\"jet2_phi\"] = ROOT.THStack(\"s_jet2_phi\", \"Jet Angle for Subleading Jet; Phi (Radians); Events\")\n",
    "S[\"transverse_mass\"] = ROOT.THStack(\"s_transverse_mass\", \"Transverse Mass; Transverse Mass (GeV); Events\")\n",
    "S[\"ht\"] = ROOT.THStack(\"s_ht\", \"Ht; Ht; Events\")\n",
    "S[\"met\"] = ROOT.THStack(\"s_met\", \"MET; Pt (GeV); Events\")\n",
    "S[\"jpsi_muons_pt\"] = ROOT.THStack(\"s_jpsi_muons_pt\", \"Transverse Momentum for JPsi Muons; Pt; Events\")\n",
    "S[\"jpsi_muons_eta\"] = ROOT.THStack(\"s_jpsi_muons_eta\", \"Pseudorapidity for JPsi Muons; Eta; Events\")\n",
    "S[\"jpsi_muons_phi\"] = ROOT.THStack(\"s_jpsi_muons_phi\", \"Angle for JPsi Muons; Phi; Events\")\n",
    "S[\"jpsi_muons_charge\"] = ROOT.THStack(\"s_jpsi_muons_charge\", \"Charge of JPsi Muons; Charge; Events\")\n",
    "S[\"invariant_mass_jpsi_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_masses_zoomed\"] = ROOT.THStack(\"s_invariant_masses_zoomed\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons_and_isolated_muons\", \"Invariant Masses for J/Psi Candidate And Isolated Muons (dR > 2); Invariant Masses; Events\")\n",
    "S[\"delta_eta_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_isolated_and_jpsi_muons\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_isolated_and_jpsi_muons\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_isolated_and_jpsi_muons\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\")\n",
    "S[\"jpsi_pt\"] = ROOT.THStack(\"s_jpsi_pt\", \"Transverse Momentum for JPsi; Pt; Events\")\n",
    "S[\"jpsi_eta\"] = ROOT.THStack(\"s_jpsi_eta\", \"Pseudorapidity for JPsi; Eta; Events\")\n",
    "S[\"jpsi_phi\"] = ROOT.THStack(\"s_jpsi_phi\", \"Angle for JPsi; Phi; Events\")\n",
    "S[\"delta_eta_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_jpsi_muons\", \"Delta Eta for JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_jpsi_muons\", \"Delta Phi for JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons\", \"Delta R for JPsi Muons; Delta R; Events\")\n",
    "S[\"delta_r_between_jpsi_muons_in_peak\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons_in_peak\", \"Delta R for JPsi Muons In Peak; Delta R; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_eta_between_isolated_muon_and_jpsi\", \"Delta Eta for Isolated Muon And JPsi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_phi_between_isolated_muon_and_jpsi\", \"Delta Phi for Isolated Muon And JPsi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_r_between_isolated_muon_and_jpsi\", \"Delta R for Isolated Muon And JPsi; Delta R; Events\")\n",
    "S[\"jpsi_muon_pt\"] = ROOT.THStack(\"s_jpsi_muon_pt\", \"JPsi Muon Pt - Muon Id Medium, Iso Id Tight; JPsi Muon Pt; Events\")\n",
    "\n",
    "\n",
    "S[\"jpsi_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_jpsi_muon_pf_rel_iso_03_all\", \"JPsi Muon Pf Rel Iso 03 All; JPsi Muon Pf Rel Iso 03 All; Events\")\n",
    "S[\"jpsi_muon_pf_iso_id\"] = ROOT.THStack(\"s_jpsi_muon_pf_iso_id\", \"JPsi Muon Pf Iso Id - Muon Id Medium, Iso Id Tight; JPsi Muon Pf Iso Id; Events\")\n",
    "S[\"isolated_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_isolated_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For Isolated Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_jpsi_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For JPsi Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_mass_muons_in_range\"] = ROOT.THStack(\"s_jpsi_mass_muons_in_range\", \"JPsi Mass For JPsis In 90-120 GeV Range; JPsi Mass; Events\")\n",
    "S[\"pt_at_low_delta_r\"] = ROOT.THStack(\"s_pt_at_low_delta_r\", \"Isolated Muon and JPsi Pt at Delta R < 0.3; Isolated Muon Pt; JPsi Muon Pt; Events\")\n",
    "S[\"jpsi_mass_in_peak\"] = ROOT.THStack(\"jpsi_mass_in_peak\", \"J/Psi Mass Made from Muons In Peak; J/Psi Mass; Events\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_eta_for_jpsi_muons_in_peak\", \"Delta Eta For J/Psi Muons In Peak; Delta Eta; Events\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_phi_for_jpsi_muons_in_peak\", \"Delta Phi For J/Psi Muons In Peak; Delta Phi; Events\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_r_for_jpsi_muons_in_peak\", \"Delta R For J/Psi Muons In Peak; Delta R; Events\")\n",
    "S[\"jpsi_muons_charge_in_peak\"] = ROOT.THStack(\"jpsi_muons_charge_in_peak\", \"J/Psi Muons In Peak Charge; Charge; Events\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"] = ROOT.THStack(\"jpsi_pt_with_muon_in_peak\", \"J/Psi Pt With Muons In Peak; Pt; Events\")\n",
    "S[\"jpsi_muon_pts_in_peak\"] = ROOT.THStack(\"jpsi_muon_pts_in_peak\", \"J/Psi Muon Pts In Peak; Positive Muon Pts; Negative Muon Pts; Events\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"] = ROOT.THStack(\"jpsi_muon_isolation_in_peak\", \"J/Psi Pf Rel Iso 03 All Made From Muons In Peak; Pf Rel Iso 03 All; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"Delta Eta Between Isolated Muon And J/Psi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"Delta Phi Between Isolated Muon And J/Psi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_r_between_isolated_muon_and_jpsi_in_peak\", \"Delta R Between Isolated Muon And J/Psi; Delta R; Events\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_isolated_muon_pf_rel_iso_03_all\", \"Isolated Muon PfRelIso03_All; Isolated Muon PfRelIso03_All; Events\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "leading_isolated_muon_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_before_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_before_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_before_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_before_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_before_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jets ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons_initial ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsis TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsis TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsis WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsis ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "number_of_jpsis ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "leading_isolated_muon_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_pt ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_pt ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_eta ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_eta ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_phi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet1_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_phi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jet2_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "transverse_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "transverse_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "transverse_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "transverse_mass ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "transverse_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "ht TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "ht TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "ht WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "ht ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "ht ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "met ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_pt ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_eta ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_phi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_masses_zoomed TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_masses_zoomed TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_masses_zoomed WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_masses_zoomed ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_masses_zoomed ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_eta ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_phi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_iso_id TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_iso_id TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_iso_id WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_iso_id ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pf_iso_id ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_muons_in_range TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_muons_in_range TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_muons_in_range WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_muons_in_range ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_muons_in_range ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "pt_at_low_delta_r TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x9796860>\n",
      "pt_at_low_delta_r TTTo2L2Nu <class cppyy.gbl.TH2D at 0x9796860>\n",
      "pt_at_low_delta_r WJetsToLNu <class cppyy.gbl.TH2D at 0x9796860>\n",
      "pt_at_low_delta_r ST_tW_top <class cppyy.gbl.TH2D at 0x9796860>\n",
      "pt_at_low_delta_r ST_tchannel_top <class cppyy.gbl.TH2D at 0x9796860>\n",
      "jpsi_mass_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_mass_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muons_charge_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt_with_muon_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "jpsi_pt_with_muon_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt_with_muon_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt_with_muon_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_pt_with_muon_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_pts_in_peak TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x9796860>\n",
      "jpsi_muon_pts_in_peak TTTo2L2Nu <class cppyy.gbl.TH2D at 0x9796860>\n",
      "jpsi_muon_pts_in_peak WJetsToLNu <class cppyy.gbl.TH2D at 0x9796860>\n",
      "jpsi_muon_pts_in_peak ST_tW_top <class cppyy.gbl.TH2D at 0x9796860>\n",
      "jpsi_muon_pts_in_peak ST_tchannel_top <class cppyy.gbl.TH2D at 0x9796860>\n",
      "jpsi_muon_isolation_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_isolation_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_isolation_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_isolation_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "jpsi_muon_isolation_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x95f7510>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x95f7510>\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for item in MonteCarlo:\n",
    "\n",
    "    for sample, color in {\"TTToSemiLeptonic\" : ROOT.kRed, \"TTTo2L2Nu\" : ROOT.kGreen, \"WJetsToLNu\" : ROOT.kBlue, \"ST_tW_top\" : ROOT.kMagenta, \"ST_tchannel_top\" : ROOT.kOrange}.items():\n",
    "        print(item, sample, type(MonteCarlo[item][sample]))\n",
    "        MonteCarlo[item][sample].SetFillColor(color)\n",
    "        MonteCarlo[item][sample].SetLineColor(color)\n",
    "        S[item].Add(MonteCarlo[item][sample])\n",
    "\n",
    "canvasas = dict()\n",
    "\n",
    "# canvas0 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas0.Draw()\n",
    "# canvasas['0'] = canvas0\n",
    "\n",
    "# canvas1 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas1.Draw()\n",
    "# canvasas['1'] = canvas1\n",
    "\n",
    "# canvas2 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas2.Draw()\n",
    "# canvasas['2'] = canvas2\n",
    "\n",
    "# canvas3 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas3.Draw()\n",
    "# canvasas['3'] = canvas3\n",
    "\n",
    "# canvas4 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas4.Draw()\n",
    "# canvasas['4'] = canvas4\n",
    "\n",
    "# canvas5 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas5.Draw()\n",
    "# canvasas['5'] = canvas5\n",
    "\n",
    "# canvas6 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas6.Draw()\n",
    "# canvasas['6'] = canvas6\n",
    "\n",
    "# canvas7 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas7.Draw()\n",
    "# canvasas['7'] = canvas7\n",
    "\n",
    "# canvas8 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas8.Draw()\n",
    "# canvasas['8'] = canvas8\n",
    "\n",
    "# canvas9 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas9.Draw()\n",
    "# canvasas['9'] = canvas9\n",
    "\n",
    "# canvas10 = ROOT.TCanvas(\"c_met_before_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_before_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas10.Draw()\n",
    "# canvasas['10'] = canvas10\n",
    "\n",
    "# canvas11 = ROOT.TCanvas(\"c_met_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas11.Draw()\n",
    "# canvasas['11'] = canvas11\n",
    "\n",
    "# canvas12 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas12.Draw()\n",
    "# canvasas['12'] = canvas12\n",
    "\n",
    "# canvas13 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas13.Draw()\n",
    "# canvasas['13'] = canvas13\n",
    "\n",
    "# canvas14 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas14.Draw()\n",
    "# canvasas['14'] = canvas14\n",
    "\n",
    "# canvas15 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas15.Draw()\n",
    "# canvasas['15'] = canvas15\n",
    "\n",
    "# canvas16 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas16.Draw()\n",
    "# canvasas['16'] = canvas16\n",
    "\n",
    "# canvas17 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas17.Draw()\n",
    "# canvasas['17'] = canvas17\n",
    "\n",
    "# canvas18 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas18.Draw()\n",
    "# canvasas['18'] = canvas18\n",
    "\n",
    "# canvas19 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas19.Draw()\n",
    "# canvasas['19'] = canvas19\n",
    "\n",
    "# canvas20 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas20.Draw()\n",
    "# canvasas['20'] = canvas20\n",
    "\n",
    "# canvas21 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas21.Draw()\n",
    "# canvasas['21'] = canvas21\n",
    "\n",
    "# canvas22 = ROOT.TCanvas(\"c_number_of_jets_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jets_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas22.Draw()\n",
    "# canvasas['22'] = canvas22\n",
    "\n",
    "\n",
    "\n",
    "# canvas24 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas24.Draw()\n",
    "# canvasas['24'] = canvas24\n",
    "\n",
    "# canvas25 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas25.Draw()\n",
    "# canvasas['25'] = canvas25\n",
    "\n",
    "# canvas26 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas26.Draw()\n",
    "# canvasas['26'] = canvas26\n",
    "\n",
    "# canvas27 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas27.Draw()\n",
    "# canvasas['27'] = canvas27\n",
    "\n",
    "# canvas28 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas28.Draw()\n",
    "# canvasas['28'] = canvas28\n",
    "\n",
    "# canvas29 = ROOT.TCanvas(\"c_number_of_jpsi_muons_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jpsi_muons_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas29.Draw()\n",
    "# canvasas['29'] = canvas29\n",
    "\n",
    "# canvas30 = ROOT.TCanvas(\"c_number_of_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "# S[\"number_of_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "# canvas30.Draw()\n",
    "# canvasas['30'] = canvas30\n",
    "\n",
    "canvas30a = ROOT.TCanvas(\"c_number_of_jpsis\", \"\", 800, 800)\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "S[\"number_of_jpsis\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "canvas30a.Draw()\n",
    "canvasas['30a'] = canvas30a\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas31 = ROOT.TCanvas(\"c_leading_isolated_muon_pt\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas31.Draw()\n",
    "canvasas['31'] = canvas31\n",
    "\n",
    "canvas32 = ROOT.TCanvas(\"c_leading_isolated_muon_eta\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas32.Draw()\n",
    "canvasas['32'] = canvas32\n",
    "\n",
    "canvas33 = ROOT.TCanvas(\"c_leading_isolated_muon_phi\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33.Draw()\n",
    "canvasas['33'] = canvas33\n",
    "\n",
    "canvas33a = ROOT.TCanvas(\"c_isolated_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33a.Draw()\n",
    "canvasas['33a'] = canvas33a\n",
    "\n",
    "canvas34a = ROOT.TCanvas(\"c_number_of_jets\", \"\", 800, 800)\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_jets\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas34a.Draw()\n",
    "canvasas['34a'] = canvas34a\n",
    "\n",
    "canvas35 = ROOT.TCanvas(\"c_jet1_pt\", \"\", 800, 800)\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas35.Draw()\n",
    "canvasas['35'] = canvas35\n",
    "\n",
    "canvas36 = ROOT.TCanvas(\"c_jet2_pt\", \"\", 800, 800)\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas36.Draw()\n",
    "canvasas['36'] = canvas36\n",
    "\n",
    "canvas37 = ROOT.TCanvas(\"c_jet1_eta\", \"\", 800, 800)\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas37.Draw()\n",
    "canvasas['37'] = canvas37\n",
    "\n",
    "canvas38 = ROOT.TCanvas(\"c_jet2_eta\", \"\", 800, 800)\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas38.Draw()\n",
    "canvasas['38'] = canvas38\n",
    "\n",
    "canvas39 = ROOT.TCanvas(\"c_jet1_phi\", \"\", 800, 800)\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas39.Draw()\n",
    "canvasas['39'] = canvas39\n",
    "\n",
    "canvas40 = ROOT.TCanvas(\"c_jet2_phi\", \"\", 800, 800)\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas40.Draw()\n",
    "canvasas['40'] = canvas40\n",
    "\n",
    "canvas41 = ROOT.TCanvas(\"c_transverse_mass\", \"\", 800, 800)\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"transverse_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas41.Draw()\n",
    "canvasas['41'] = canvas41\n",
    "\n",
    "canvas42 = ROOT.TCanvas(\"c_ht\", \"\", 800, 800)\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"ht\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas42.Draw()\n",
    "canvasas['42'] = canvas42\n",
    "\n",
    "canvas42a = ROOT.TCanvas(\"c_met\", \"\", 800, 800)\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"met\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# ROOT.TRatioPlot(RealData[\"met\"][\"SingleMuon2018\"],MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"]).Draw(\"PE1\")\n",
    "canvas42a.Draw()\n",
    "canvasas['42a'] = canvas42a\n",
    "\n",
    "canvas43 = ROOT.TCanvas(\"c_jpsi_muons_pt\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas43.Draw()\n",
    "canvasas['43'] = canvas43\n",
    "\n",
    "canvas44 = ROOT.TCanvas(\"c_jpsi_muons_eta\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas44.Draw()\n",
    "canvasas['44'] = canvas44\n",
    "\n",
    "canvas45 = ROOT.TCanvas(\"c_jpsi_muons_phi\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas45.Draw()\n",
    "canvasas['45'] = canvas45\n",
    "\n",
    "canvas46 = ROOT.TCanvas(\"c_jpsi_muons_charge\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "S[\"jpsi_muons_charge\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "canvas46.Draw()\n",
    "canvasas['46'] = canvas46\n",
    "\n",
    "# canvas61b = ROOT.TCanvas(\"c_jpsi_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61b.Draw()\n",
    "# canvasas['61b'] = canvas61b\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas33a = ROOT.TCanvas(\"c_leading_isolated_muon_mass\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas33a.Draw()\n",
    "# canvasas['33a'] = canvas33a\n",
    "\n",
    "# canvas34 = ROOT.TCanvas(\"c_leading_isolated_muon_charge\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas34.Draw()\n",
    "# canvasas['34'] = canvas34\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas47 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_mass_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas47.Draw()\n",
    "# canvasas['47'] = canvas47\n",
    "\n",
    "# canvas48 = ROOT.TCanvas(\"c_invariant_masses_zoomed\", \"\", 800, 800)\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_masses_zoomed\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas48.Draw()\n",
    "# canvasas['48'] = canvas48\n",
    "\n",
    "canvas49 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons_and_isolated_muons\", \"\", 800, 800)\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas49.Draw()\n",
    "canvasas['49'] = canvas49\n",
    "\n",
    "# canvas50 = ROOT.TCanvas(\"c_delta_eta_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas50.Draw()\n",
    "# canvasas['50'] = canvas50\n",
    "\n",
    "# canvas51 = ROOT.TCanvas(\"c_delta_phi_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas51.Draw()\n",
    "# canvasas['51'] = canvas51\n",
    "\n",
    "# canvas52 = ROOT.TCanvas(\"c_delta_r_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas52.Draw()\n",
    "# canvasas['52'] = canvas52\n",
    "\n",
    "# canvas53 = ROOT.TCanvas(\"c_jpsi_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas53.Draw()\n",
    "# canvasas['53'] = canvas53\n",
    "\n",
    "# canvas54 = ROOT.TCanvas(\"c_jpsi_eta\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_eta\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas54.Draw()\n",
    "# canvasas['54'] = canvas54\n",
    "\n",
    "# canvas55 = ROOT.TCanvas(\"c_jpsi_phi\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_phi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas55.Draw()\n",
    "# canvasas['55'] = canvas55\n",
    "\n",
    "# canvas56 = ROOT.TCanvas(\"c_delta_eta_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas56.Draw()\n",
    "# canvasas['56'] = canvas56\n",
    "\n",
    "# canvas57 = ROOT.TCanvas(\"c_delta_phi_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas57.Draw()\n",
    "# canvasas['57'] = canvas57\n",
    "\n",
    "# canvas58 = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58.Draw()\n",
    "# canvasas['58'] = canvas58\n",
    "\n",
    "\n",
    "# canvas58a = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58a.Draw()\n",
    "# canvasas['58a'] = canvas58a\n",
    "\n",
    "\n",
    "# canvas59 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas59.Draw()\n",
    "# canvasas['59'] = canvas59\n",
    "\n",
    "# canvas60 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas60.Draw()\n",
    "# canvasas['60'] = canvas60\n",
    "\n",
    "# canvas61 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61.Draw()\n",
    "# canvasas['61'] = canvas61\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas61a = ROOT.TCanvas(\"c_jpsi_muon_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61a.Draw()\n",
    "# canvasas['61a'] = canvas61a\n",
    "\n",
    "\n",
    "\n",
    "# canvas61c = ROOT.TCanvas(\"c_jpsi_muon_pf_iso_id\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_iso_id\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61c.Draw()\n",
    "# canvasas['61c'] = canvas61c\n",
    "\n",
    "# canvas61d = ROOT.TCanvas(\"c_isolated_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"isolated_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61d.Draw()\n",
    "# canvasas['61d'] = canvas61d\n",
    "\n",
    "# canvas61e = ROOT.TCanvas(\"c_jpsi_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61e.Draw()\n",
    "# canvasas['61e'] = canvas61e\n",
    "\n",
    "# canvas61f = ROOT.TCanvas(\"c_jpsi_mass_muons_in_range\", \"\", 800, 800)\n",
    "# #RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_mass_muons_in_range\"].Draw(\"HIST S\")\n",
    "# RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61f.Draw()\n",
    "# canvasas['61f'] = canvas61f\n",
    "\n",
    "# canvas61g = ROOT.TCanvas(\"c_pt_at_low_delta_r\", \"\", 800, 800)\n",
    "# RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas61g.Draw()\n",
    "# canvasas['61g'] = canvas61g\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas96 = ROOT.TCanvas(\"c_jpsi_mass_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_mass_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas96.Draw()\n",
    "canvasas['96'] = canvas96\n",
    "\n",
    "canvas97 = ROOT.TCanvas(\"c_delta_eta_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas97.Draw()\n",
    "canvasas['97'] = canvas97\n",
    "\n",
    "canvas98 = ROOT.TCanvas(\"c_delta_phi_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas98.Draw()\n",
    "canvasas['98'] = canvas98\n",
    "\n",
    "canvas99 = ROOT.TCanvas(\"c_delta_r_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas99.Draw()\n",
    "canvasas['99'] = canvas99\n",
    "\n",
    "# canvas100 = ROOT.TCanvas(\"c_jpsi_muons_charge_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_charge_in_peak\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas100.Draw()\n",
    "# canvasas['100'] = canvas100\n",
    "\n",
    "canvas101 = ROOT.TCanvas(\"c_jpsi_pt_with_muon_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas101.Draw()\n",
    "canvasas['101'] = canvas101\n",
    "\n",
    "# canvas101a = ROOT.TCanvas(\"c_jpsi_muon_pts_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas101a.Draw()\n",
    "# canvasas['101a'] = canvas101a\n",
    "\n",
    "canvas102 = ROOT.TCanvas(\"c_jpsi_muon_isolation_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas102.Draw()\n",
    "canvasas['102'] = canvas102\n",
    "\n",
    "canvas104 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas104.Draw()\n",
    "canvasas['104'] = canvas104\n",
    "\n",
    "canvas105 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas105.Draw()\n",
    "canvasas['105'] = canvas105\n",
    "\n",
    "canvas106 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas106.Draw()\n",
    "canvasas['106'] = canvas106"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening PDF\n",
      "Closing PDF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf has been created using the current canvas\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf and file closed\n"
     ]
    }
   ],
   "source": [
    "for kn, k in enumerate(canvasas.keys()):\n",
    "    \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvasas[k].SaveAs('8_20_22_3Gev_dR_lt_2.pdf(')\n",
    "    \n",
    "    elif kn == len(canvasas) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvasas[k].SaveAs('8_20_22_3Gev_dR_lt_2.pdf)')\n",
    "    \n",
    "    else:\n",
    "        canvasas[k].SaveAs('8_20_22_3Gev_dR_lt_2.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "era = \"2017\"\n",
    "channel = \"Mu\"\n",
    "\n",
    "def DrawStack(MonteCarlo, Data, separator = \"___\"):\n",
    "    era, channel, sample, variable, systematic = list(MonteCarlo.values())[0].GetName().split(separator)\n",
    "    name = \"_\".join([\"stack\", era, channel, variable, systematic])\n",
    "    colors = {\"TTToSemiLeptonic\" : ROOT.kRed}\n",
    "    stack = ROOT.THStack(name, \"\")\n",
    "    \n",
    "    canvas = ROOT.TCanvas(name.replace(\"stack\", \"canvas\"), \"\", 800, 800)\n",
    "  \n",
    "    \n",
    "    for sample, hist in MonteCarlo.items():\n",
    "        hist.SetFillColor(colors.get(sample, ROOT.kMagenta))\n",
    "        hist.SetLineColor(colors.get(sample, ROOT.kMagenta))\n",
    "        stack.Add(hist)\n",
    "        \n",
    "    aggregate = None\n",
    "    \n",
    "    for sample, hist in Data.items():\n",
    "        if aggregate == None:\n",
    "            aggregate = hist.Clone(hist.GetName().replace(\"sample\", \"allData\"))\n",
    "            \n",
    "        else:\n",
    "            aggregate += hist\n",
    "    \n",
    "    maxima = []\n",
    "    minima = []\n",
    "    maxima.append(stack.GetMaximum())\n",
    "    maxima.append(aggregate.GetMaximum())\n",
    "    minima.append(stack.GetMinimum())\n",
    "    minima.append(aggregate.GetMinimum())\n",
    "    \n",
    "    stack.SetMinimum(min(minima))\n",
    "    stack.SetMaximum(max(maxima))\n",
    "    \n",
    "    stack.Draw(\"HIST S\")\n",
    "    aggregate.Draw(\"PE1 SAME\")\n",
    "    \n",
    "    canvas.BuildLegend()\n",
    "    \n",
    "    return stack, aggregate, canvas\n",
    "\n",
    "for kn, variable in enumerate(variables):\n",
    "        \n",
    "    MonteCarlo, RealData = GetHistos(f, era, channel, variable)\n",
    "    \n",
    "    stack, aggregate, canvas = DrawStack(MonteCarlo, RealData)\n",
    "       \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvas.SaveAs('December2.pdf(')\n",
    "\n",
    "    elif kn == len(variables) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvas.SaveAs('December2.pdf)')\n",
    "\n",
    "    else:\n",
    "        canvas.SaveAs('December2.pdf')\n",
    "        \n",
    "    canvas.SaveAs(variable + 'December2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on _Helper in module _sitebuiltins object:\n",
      "\n",
      "class _Helper(builtins.object)\n",
      " |  Define the builtin 'help'.\n",
      " |  \n",
      " |  This is a wrapper around pydoc.help that provides a helpful message\n",
      " |  when 'help' is typed at the Python interactive prompt.\n",
      " |  \n",
      " |  Calling help() at the Python prompt starts an interactive help session.\n",
      " |  Calling help(thing) prints help for the python object 'thing'.\n",
      " |  \n",
      " |  Methods defined here:\n",
      " |  \n",
      " |  __call__(self, *args, **kwds)\n",
      " |      Call self as a function.\n",
      " |  \n",
      " |  __repr__(self)\n",
      " |      Return repr(self).\n",
      " |  \n",
      " |  ----------------------------------------------------------------------\n",
      " |  Data descriptors defined here:\n",
      " |  \n",
      " |  __dict__\n",
      " |      dictionary for instance variables (if defined)\n",
      " |  \n",
      " |  __weakref__\n",
      " |      list of weak references to the object (if defined)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(help)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
