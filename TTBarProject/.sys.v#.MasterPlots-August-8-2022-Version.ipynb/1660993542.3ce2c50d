{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.26/04\n"
     ]
    }
   ],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total 47226\r\n",
      "-rw-r--r--. 1 migordon 1399   15708 Aug 18  2020 TTto2L2Nu.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   41132 Aug 18  2020 TTToSemiLeptonic.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   14492 Aug 25  2020 Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   37773 Aug 27  2020 August26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 Sep  2  2020 FTFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399    5774 Sep 21  2020 RealData\r\n",
      "-rw-r--r--. 1 migordon 1399   45563 Sep 23  2020 September9.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   45708 Sep 24  2020 September23MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   46111 Sep 24  2020 September23RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   48733 Oct  9  2020 October8MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399     926 Oct 20  2020 graph.dot.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145577 Oct 20  2020 October15.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   49188 Nov 11  2020 October8RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November12.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November23.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 24  2020 November24.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  114959 Dec  3  2020 December2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145516 Dec 10  2020 December10.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198313 Jan 19  2021 January18LooseID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198153 Jan 21  2021 January21MediumID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198536 Jan 21  2021 January21TightID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198491 Jan 26  2021 January26WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197655 Jan 28  2021 January28WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198647 Feb 23  2021 February16AtLeastOneVetoedMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  269832 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  378821 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup-Jaunary-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  198548 Feb 24  2021 February23ExactlyOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198645 Feb 24  2021 February23AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  148905 Feb 24  2021 February23NoGoodMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198461 Feb 24  2021 February24VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197977 Feb 25  2021 February25AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198084 Feb 25  2021 February25VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  237095 Mar  7  2021 March2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  273136 Mar  8  2021 March8.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  277452 May  2  2021 April27.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  383603 May  3  2021 May3.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  385981 May  5  2021 May4AtLeast4JetsAtLeast1BTagged.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399    7149 May  5  2021 WJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   46268 May  5  2021 2017_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   29677 May  5  2021 2017_Mu_WJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  382235 May  5  2021 FirstTTreeAnalysisMonteCarlo2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   21530 May  5  2021 2017_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  264376 May  6  2021 FirstTTreeAnalysisRealData2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399    7138 May  6  2021 TTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7261 May  6  2021 TTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7219 May  6  2021 graph.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   44070 May  6  2021 2018_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   44250 May  6  2021 2018_Mu_TTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  388482 May  6  2021 May6.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  292166 May 12  2021 FirstTTreeAnalysisMonteCarlo2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  322266 May 12  2021 May11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 May 26  2021 TopMassFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399   24558 Aug 19  2021 FirstTTreeAnalysis2018United-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399     427 Aug 24  2021 New_Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  152243 Aug 25  2021 August25_50K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  253643 Aug 25  2021 August25_500K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  268165 Aug 26  2021 August25_1M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  288466 Aug 26  2021 August25_3M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  293684 Aug 26  2021 August25_5M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32517 Aug 30  2021 FirstTTreeAnalysis2018United-Backup-Copy1.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  308929 Aug 31  2021 August31.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  287815 Sep  1  2021 September1.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  165129 Sep  2  2021 FirstTTreeAnalysisRealData2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  342481 Sep  3  2021 September2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354661 Sep 21  2021 September21TightMedium.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354301 Sep 21  2021 September21TightTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354485 Sep 21  2021 September22MediumTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  568715 Sep 28  2021 MasterPlots-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  366143 Oct  1  2021 September30.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  608173 Oct  6  2021 MasterPlots-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  718643 Oct 20  2021 MasterPlots-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  460135 Oct 21  2021 October21.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  459750 Oct 28  2021 October26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  469993 Nov 11  2021 November11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  815942 Dec 20  2021 MasterPlots.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   35815 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.py\r\n",
      "-rw-r--r--. 1 migordon 1399   48706 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399 5254040 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-OldCopy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   49408 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-1-9-22-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   52579 Jan 10  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.py\r\n",
      "-rw-r--r--. 1 migordon 1399   22036 May  9 11:57 FirstTTreeAnalysis2018United.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75336 May 14 12:09 May14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  134983 May 26 14:41 May26_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  156426 Jun 13 14:42 June13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   76628 Jun 13 16:00 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   41767 Jun 13 17:53 FirstTTreeAnalysis2018United-AdditionalJPsi-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  317522 Jun 14 16:22 June14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   39626 Jun 20 15:21 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   27369 Jun 20 16:49 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.py\r\n",
      "-rw-r--r--. 1 migordon 1399  115107 Jun 21 15:12 FirstTTreeAnalysis2018United-AdditionalJPsi-May_23_2022_Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  552871 Jun 21 16:25 MasterPlots-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  461138 Jun 23 17:27 June23_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  267495 Jun 27 14:57 FirstTTreeAnalysisRealData-Backup-January-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  472488 Jun 30 17:37 June30_2022_JPsiZoomed.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32374 Jul  1 16:35 FirstTTreeAnalysis2018United-AdditionalJPsi-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   66434 Jul  1 23:03 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.py\r\n",
      "-rw-r--r--. 1 migordon 1399   80894 Jul  3 13:20 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  605767 Jul  3 20:45 July3_2022_MinimumFourJets.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  173470 Jul  4 12:49 MasterPlots-June-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  702825 Jul  4 13:22 July4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  705989 Jul  5 09:55 July5_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 10 23:20 FirstTTreeAnalysis2018United-AdditionalJPsi-July_10_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  776465 Jul 10 23:49 July10_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   97291 Jul 11 01:36 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80141 Jul 11 01:38 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399   98358 Jul 11 02:56 TopQuark_JPsi_Analysis-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80916 Jul 11 02:57 TopQuark_JPsi_Analysis-July_11_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  769640 Jul 11 03:12 July11_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 11 09:41 FirstTTreeAnalysis2018United-AdditionalJPsi-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  802986 Jul 11 10:35 July11_2022_a.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   77722 Jul 11 11:04 TopQuark_JPsi_Analysis-July_11_2022-Copy1.py\r\n",
      "-rw-r--r--. 1 migordon 1399  838420 Jul 11 11:30 July11_2022_b.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  900846 Jul 12 19:46 July12_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1057489 Jul 13 15:13 July13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1049253 Jul 13 22:15 July13_2022_Isolated_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   83308 Jul 17 18:38 Gordon_Michael_July_17_2022_Alternate_Muon_IDs.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  613179 Jul 20 08:43 MasterPlots-July-3-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75405 Jul 20 12:46 Gordon_Michael_July_20_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   90076 Jul 21 07:24 Gordon_Michael_July_20_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  535140 Jul 21 11:17 Gordon_Michael_July_21_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  927599 Jul 21 18:29 Gordon_Michael_July_21_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  937378 Jul 21 19:27 Gordon_Michael_July_21_2022_Medium_Tight_Revised_Twice.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1008949 Jul 24 10:30 Gordon_Michael_July_24_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  626330 Jul 25 16:24 Gordon_Michael_July_25_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1284215 Aug  4 17:01 Gordon_Michael_August_4_2022_Negaverse_Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  161217 Aug  5 13:23 Gordon_Michael_August_4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  146891 Aug  8 14:26 Gordon_Michael_August_8_2022_dR_below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  189364 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  159737 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  148783 Aug  8 14:37 Gordon_Michael_August_8_2022_dR_above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1140010 Aug  8 16:40 MasterPlots-July-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  391521 Aug  9 23:20 Gordon_Michael_August_9_2022_JPsi_3Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  351638 Aug  9 23:27 Gordon_Michael_August_9_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  309560 Aug 10 09:49 Gordon_Michael_August_10_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  310508 Aug 11 14:24 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  312296 Aug 11 14:35 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  350475 Aug 11 14:42 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  347400 Aug 11 14:49 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  296712 Aug 17 15:27 Gordon_Michael_August_17_2022_JPsi_6Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  332091 Aug 17 15:43 Gordon_Michael_August_17_2022_JPsi_3Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  308542 Aug 17 16:14 Gordon_Michael_August_17_2022_JPsi_6Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  347218 Aug 17 16:38 Gordon_Michael_August_17_2022_JPsi_3Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  279059 Aug 18 17:33 8_18_22_6Gev_dR_lt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  156949 Aug 18 22:39 TopQuark_JPsi_Analysis-August_8_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  129415 Aug 19 00:06 TopQuark_JPsi_Analysis-August_8_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  219172 Aug 19 14:55 8_19_22_6Gev_dR_lt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  230235 Aug 19 15:54 8_19_22_6Gev_dR_gt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  474301 Aug 20 00:22 Combination.root_backup\r\n",
      "-rw-r--r--. 1 migordon 1399  474210 Aug 20 00:39 Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  220139 Aug 20 00:41 8_20_22_6Gev_dR_lt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  168482 Aug 20 00:42 TopQuark_JPsi_Analysis-August_18_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  138559 Aug 20 00:42 TopQuark_JPsi_Analysis-August_18_2022.py\r\n",
      "drwxr-xr-x. 2 migordon 1399    4096 Aug 20 00:42 __pycache__\r\n",
      "-rw-r--r--. 1 migordon 1399   19791 Aug 20 00:43 Data.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33515 Aug 20 00:43 Data_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20063 Aug 20 00:43 MonteCarloTTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34149 Aug 20 00:43 MonteCarloTTToSemiLeptonic_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20063 Aug 20 00:43 MonteCarloTTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34149 Aug 20 00:43 MonteCarloTTTo2L2Nu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20063 Aug 20 00:43 MonteCarloWJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34149 Aug 20 00:43 MonteCarloWJetsToLNu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20063 Aug 20 00:43 MonteCarloST_tW_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34149 Aug 20 00:43 MonteCarloST_tW_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20495 Aug 20 00:43 MonteCarloST_tchannel_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34149 Aug 20 00:43 MonteCarloST_tchannel_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   68973 Aug 20 00:45 2018_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  115851 Aug 20 00:46 2018_Mu_MonteCarloTTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399  111102 Aug 20 00:47 2018_Mu_MonteCarloTTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   81689 Aug 20 00:47 2018_Mu_MonteCarloWJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   66168 Aug 20 00:47 2018_Mu_MonteCarloST_tW_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399   73583 Aug 20 00:47 2018_Mu_MonteCarloST_tchannel_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399  149807 Aug 20 00:47 MasterPlots-August-8-2022-Version.ipynb\r\n"
     ]
    }
   ],
   "source": [
    "!ls -ltr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hadd Target file: Combination.root\n",
      "hadd compression setting for all output: 1\n",
      "hadd Source file 1: 2018_Mu_Data.root\n",
      "hadd Source file 2: 2018_Mu_MonteCarloTTToSemiLeptonic.root\n",
      "hadd Source file 3: 2018_Mu_MonteCarloTTTo2L2Nu.root\n",
      "hadd Source file 4: 2018_Mu_MonteCarloWJetsToLNu.root\n",
      "hadd Source file 5: 2018_Mu_MonteCarloST_tW_top.root\n",
      "hadd Source file 6: 2018_Mu_MonteCarloST_tchannel_top.root\n",
      "hadd Target path: Combination.root:/\n"
     ]
    }
   ],
   "source": [
    "!mv Combination.root Combination.root_backup\n",
    "!hadd -f Combination.root 2018_Mu_Data.root 2018_Mu_MonteCarloTTToSemiLeptonic.root 2018_Mu_MonteCarloTTTo2L2Nu.root 2018_Mu_MonteCarloWJetsToLNu.root 2018_Mu_MonteCarloST_tW_top.root 2018_Mu_MonteCarloST_tchannel_top.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___number_of_jpsis___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsis___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n"
     ]
    }
   ],
   "source": [
    "f = ROOT.TFile.Open('Combination.root', 'read')\n",
    "k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "eras = list(set([kk.split(\"___\")[0] for kk in k]))\n",
    "channels = list(set([kk.split(\"___\")[1] for kk in k]))\n",
    "samples = list(set([kk.split(\"___\")[2] for kk in k]))\n",
    "variables = list(set([kk.split(\"___\")[3] for kk in k]))\n",
    "systematics = list(set([kk.split(\"___\")[4] for kk in k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018']\n",
      "['Mu']\n",
      "['MonteCarloST_tchannel_top', 'MonteCarloST_tW_top', 'MonteCarloWJetsToLNu', 'MonteCarloTTTo2L2Nu', 'MonteCarloTTToSemiLeptonic', 'Data']\n",
      "['jet2_pt', 'leading_isolated_muon_phi', 'number_of_jpsi_muons', 'delta_r_between_jpsi_muons_in_peak', 'leading_isolated_muon_charge_initial', 'delta_r_between_isolated_and_jpsi_muons', 'leading_isolated_muon_eta_after_met_cut', 'jpsi_muons_phi', 'leading_isolated_muon_charge_after_met_cut', 'leading_isolated_electron_phi_after_met_cut', 'leading_isolated_muon_phi_after_met_cut', 'leading_isolated_muon_pt', 'leading_isolated_muon_phi_after_jet_cut', 'isolated_muons_in_range_pfRelIso03_all', 'delta_eta_between_jpsi_muons', 'leading_isolated_electron_charge_initial', 'ht', 'leading_isolated_electron_eta_initial', 'jet1_pt', 'met', 'met_after_met_cut', 'delta_phi_between_jpsi_muons', 'leading_isolated_electron_pt_initial', 'invariant_mass_jpsi_muons', 'jpsi_muon_pt', 'jpsi_phi', 'delta_phi_between_isolated_muon_and_jpsi_in_peak', 'jpsi_muon_pf_rel_iso_03_all', 'leading_isolated_electron_mass_initial', 'delta_r_for_jpsi_muons_in_peak', 'leading_isolated_muon_mass_after_jet_cut', 'delta_r_between_jpsi_muons', 'jpsi_muons_eta', 'pt_at_low_delta_r', 'leading_isolated_muon_eta', 'leading_isolated_muon_pt_initial', 'jpsi_muons_pt', 'number_of_jets_initial', 'leading_isolated_muon_charge', 'leading_isolated_muon_eta_initial', 'jet2_phi', 'jpsi_pt', 'jet2_eta', 'jpsi_mass_muons_in_range', 'leading_isolated_muon_mass_initial', 'delta_eta_between_isolated_and_jpsi_muons', 'jpsi_muon_isolation_in_peak', 'leading_isolated_electron_pt_after_met_cut', 'invariant_mass_jpsi_muons_and_isolated_muons', 'transverse_mass', 'jet1_eta', 'invariant_masses_zoomed', 'leading_isolated_electron_charge_after_met_cut', 'isolated_muon_pf_rel_iso_03_all', 'leading_isolated_electron_eta_after_met_cut', 'leading_isolated_electron_mass_after_met_cut', 'number_of_jpsi_muons_initial', 'leading_isolated_muon_mass_after_met_cut', 'jpsi_pt_with_muon_in_peak', 'leading_isolated_muon_eta_after_jet_cut', 'delta_phi_between_isolated_muon_and_jpsi', 'delta_eta_for_jpsi_muons_in_peak', 'leading_isolated_muon_mass', 'met_before_met_cut', 'number_of_jets', 'delta_eta_between_isolated_muon_and_jpsi', 'leading_isolated_muon_pt_after_jet_cut', 'jpsi_muon_pts_in_peak', 'jpsi_mass_in_peak', 'delta_phi_for_jpsi_muons_in_peak', 'jpsi_muons_charge', 'delta_eta_between_isolated_muon_and_jpsi_in_peak', 'delta_r_between_isolated_muon_and_jpsi', 'jpsi_muons_charge_in_peak', 'delta_phi_between_isolated_and_jpsi_muons', 'leading_isolated_muon_charge_after_jet_cut', 'delta_r_between_isolated_muon_and_jpsi_in_peak', 'leading_isolated_muon_pt_after_met_cut', 'jet1_phi', 'leading_isolated_electron_phi_initial', 'jpsi_muons_in_range_pfRelIso03_all', 'jpsi_eta', 'leading_isolated_muon_phi_initial', 'number_of_jpsis', 'jpsi_muon_pf_iso_id']\n",
      "['nominal']\n"
     ]
    }
   ],
   "source": [
    "print(eras)\n",
    "print(channels)\n",
    "print(samples)\n",
    "print(variables)\n",
    "print(systematics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetHistos(f, era, channel, variable, systematic = \"nominal\", separator = \"___\"):\n",
    "    \n",
    "    MC = dict()\n",
    "    Data = dict()\n",
    "    \n",
    "    k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "    print(k)\n",
    "    k = [kk for kk in k if era == kk.split(separator)[0]]\n",
    "    k = [kk for kk in k if channel == kk.split(separator)[1]]\n",
    "    k = [kk for kk in k if variable == kk.split(separator)[3]]\n",
    "    k = [kk for kk in k if systematic == kk.split(separator)[4]]\n",
    "    \n",
    "    for kk in k:\n",
    "        sample = kk.split(separator)[2]\n",
    "        \n",
    "        if \"data\" in sample.lower():\n",
    "            Data[sample] = f.Get(kk)\n",
    "            print(\"Data\")\n",
    "            \n",
    "        else:\n",
    "            MC[sample] = f.Get(kk)\n",
    "            print(sample)\n",
    "            \n",
    "    return MC, Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___number_of_jpsis___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsis___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n",
      "{} {}\n"
     ]
    }
   ],
   "source": [
    "x, y = GetHistos(f, \"2018\", \"Mu\", \"mu_pt\")\n",
    "print(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#Load histograms from file(s)\n",
    "MonteCarlo = dict()\n",
    "RealData = dict()\n",
    "\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "MonteCarlo[\"met_before_met_cut\"] = dict()\n",
    "MonteCarlo[\"met_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jets_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jets\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsis\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"] = dict()\n",
    "MonteCarlo[\"jet1_pt\"] = dict()\n",
    "MonteCarlo[\"jet2_pt\"] = dict()\n",
    "MonteCarlo[\"jet1_eta\"] = dict()\n",
    "MonteCarlo[\"jet2_eta\"] = dict()\n",
    "MonteCarlo[\"jet1_phi\"] = dict()\n",
    "MonteCarlo[\"jet2_phi\"] = dict()\n",
    "MonteCarlo[\"transverse_mass\"] = dict()\n",
    "MonteCarlo[\"ht\"] = dict()\n",
    "MonteCarlo[\"met\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_phi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"invariant_masses_zoomed\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_phi\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "MonteCarlo[\"pt_at_low_delta_r\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"] = dict()\n",
    "\n",
    "\n",
    "\n",
    "RealData[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "RealData[\"met_before_met_cut\"] = dict()\n",
    "RealData[\"met_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "RealData[\"number_of_jets_initial\"] = dict()\n",
    "RealData[\"number_of_jets\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons\"] = dict()\n",
    "RealData[\"number_of_jpsis\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge\"] = dict()\n",
    "RealData[\"jet1_pt\"] = dict()\n",
    "RealData[\"jet2_pt\"] = dict()\n",
    "RealData[\"jet1_eta\"] = dict()\n",
    "RealData[\"jet2_eta\"] = dict()\n",
    "RealData[\"jet1_phi\"] = dict()\n",
    "RealData[\"jet2_phi\"] = dict()\n",
    "RealData[\"transverse_mass\"] = dict()\n",
    "RealData[\"ht\"] = dict()\n",
    "RealData[\"met\"] = dict()\n",
    "RealData[\"jpsi_muons_pt\"] = dict()\n",
    "RealData[\"jpsi_muons_eta\"] = dict()\n",
    "RealData[\"jpsi_muons_phi\"] = dict()\n",
    "RealData[\"jpsi_muons_charge\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "RealData[\"invariant_masses_zoomed\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"jpsi_pt\"] = dict()\n",
    "RealData[\"jpsi_eta\"] = dict()\n",
    "RealData[\"jpsi_phi\"] = dict()\n",
    "RealData[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"jpsi_muon_pt\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "RealData[\"pt_at_low_delta_r\"] = dict()\n",
    "RealData[\"jpsi_mass_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"] = dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal\")\n",
    "RealData[\"met_before_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal\")\n",
    "RealData[\"met_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal\")\n",
    "RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal\")\n",
    "RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal\")\n",
    "RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsis___nominal\")\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_phi___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___transverse_mass___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___ht___nominal\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___ht___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met___nominal\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal\")\n",
    "RealData[\"jpsi_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal\")\n",
    "RealData[\"jpsi_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal\")\n",
    "RealData[\"jpsi_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal\")\n",
    "RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal\")\n",
    "RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal\")\n",
    "RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "S = dict()\n",
    "S[\"leading_isolated_muon_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_initial\", \"Leading Isolated Muon Transverse Momentum (One Muon, No Electrons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_initial\", \"Leading Isolated Muon Pseudorapidity (One Muon, No Electrons); Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_initial\", \"Leading Isolated Muon Angle (One Muon, No Electrons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_initial\", \"Leading Isolated Muon Mass (One Muon, No Electrons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_initial\", \"Leading Isolated Muon Charge (One Muon, No Electrons); Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_initial\", \"Leading Isolated Electron Transverse Momentum (One Electron, No Muons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_initial\", \"Leading Isolated Electron Pseudorapidity (One Electron, No Muons); Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_initial\", \"Leading Isolated Electron Angle (One Electron, No Muons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_initial\", \"Leading Isolated Electron Mass (One Electron, No Muons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_initial\", \"Leading Isolated Electron Charge (One Electron, No Muons); Charge; Events\")\n",
    "S[\"met_before_met_cut\"] = ROOT.THStack(\"s_met_before_met_cut\", \"MET Before MET Cut; Pt (GeV); Events\")\n",
    "S[\"met_after_met_cut\"] = ROOT.THStack(\"s_met_after_met_cut\", \"MET; Pt (GeV); Events\")\n",
    "S[\"leading_isolated_muon_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_met_cut\", \"Leading Isolated Muon Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_met_cut\", \"Leading Isolated Muon Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_met_cut\", \"Leading Isolated Muon Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_met_cut\", \"Leading Isolated Muon Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_met_cut\", \"Leading Isolated Muon Charge After MET Cut; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_after_met_cut\", \"Leading Isolated Electron Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_after_met_cut\", \"Leading Isolated Electron Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_after_met_cut\", \"Leading Isolated Electron Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_after_met_cut\", \"Leading Isolated Electron Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_after_met_cut\", \"Leading Isolated Electron Charge After MET Cut; Charge; Events\")\n",
    "S[\"number_of_jets_initial\"] = ROOT.THStack(\"s_number_of_jets_initial\", \"Number Of Jets Before Jet Cut; Number Of Jets; Events\")\n",
    "S[\"number_of_jets\"] = ROOT.THStack(\"s_number_of_jets\", \"Number Of Jets; Number Of Jets; Events\")\n",
    "S[\"leading_isolated_muon_pt_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_jet_cut\", \"Leading Isolated Muon Transverse Momentum After Jet Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_jet_cut\", \"Leading Isolated Muon Pseudorapidity After Jet Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_jet_cut\", \"Leading Isolated Muon Angle After Jet Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_jet_cut\", \"Leading Isolated Muon Mass After Jet Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_jet_cut\", \"Leading Isolated Muon Charge After Jet Cut; Charge; Events\")\n",
    "S[\"number_of_jpsi_muons_initial\"] = ROOT.THStack(\"s_number_of_jpsi_muons_initial\", \"Number of JPsi Muons Before JPsi Muon Cut; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsi_muons\"] = ROOT.THStack(\"s_number_of_jpsi_muons\", \"Number of JPsi Muons; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsis\"] = ROOT.THStack(\"s_number_of_jpsis\", \"Number of JPsis; Number Of JPsis; Events\")\n",
    "S[\"leading_isolated_muon_pt\"] = ROOT.THStack(\"s_leading_isolated_muon_pt\", \"Leading Isolated Muon Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta\"] = ROOT.THStack(\"s_leading_isolated_muon_eta\", \"Leading Isolated Muon Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi\"] = ROOT.THStack(\"s_leading_isolated_muon_phi\", \"Leading Isolated Muon Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass\"] = ROOT.THStack(\"s_leading_isolated_muon_mass\", \"Leading Isolated Muon Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge\"] = ROOT.THStack(\"s_leading_isolated_muon_charge\", \"Leading Isolated Muon Charge; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt\"] = ROOT.THStack(\"s_leading_isolated_electron_pt\", \"Leading Isolated Electron Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta\"] = ROOT.THStack(\"s_leading_isolated_electron_eta\", \"Leading Isolated Electron Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi\"] = ROOT.THStack(\"s_leading_isolated_electron_phi\", \"Leading Isolated Electron Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass\"] = ROOT.THStack(\"s_leading_isolated_electron_mass\", \"Leading Isolated Electron Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge\"] = ROOT.THStack(\"s_leading_isolated_electron_charge\", \"Leading Isolated Electron Charge; Charge; Events\")\n",
    "S[\"jet1_pt\"] = ROOT.THStack(\"s_jet1_pt\", \"Jet Transverse Momentum for Leading Jet; Pt (GeV); Events\")\n",
    "S[\"jet2_pt\"] = ROOT.THStack(\"s_jet2_pt\", \"Jet Transverse Momentum for Subleading Jet; Pt (GeV); Events\")\n",
    "S[\"jet1_eta\"] = ROOT.THStack(\"s_jet1_eta\", \"Jet Pseudorapidity for Leading Jet; Eta; Events\")\n",
    "S[\"jet2_eta\"] = ROOT.THStack(\"s_jet2_eta\", \"Jet Pseudorapidity for Subleading Jet; Eta; Events\")\n",
    "S[\"jet1_phi\"] = ROOT.THStack(\"s_jet1_phi\", \"Jet Angle for Leading Jet; Phi (Radians); Events\")\n",
    "S[\"jet2_phi\"] = ROOT.THStack(\"s_jet2_phi\", \"Jet Angle for Subleading Jet; Phi (Radians); Events\")\n",
    "S[\"transverse_mass\"] = ROOT.THStack(\"s_transverse_mass\", \"Transverse Mass; Transverse Mass (GeV); Events\")\n",
    "S[\"ht\"] = ROOT.THStack(\"s_ht\", \"Ht; Ht; Events\")\n",
    "S[\"met\"] = ROOT.THStack(\"s_met\", \"MET; Pt (GeV); Events\")\n",
    "S[\"jpsi_muons_pt\"] = ROOT.THStack(\"s_jpsi_muons_pt\", \"Transverse Momentum for JPsi Muons; Pt; Events\")\n",
    "S[\"jpsi_muons_eta\"] = ROOT.THStack(\"s_jpsi_muons_eta\", \"Pseudorapidity for JPsi Muons; Eta; Events\")\n",
    "S[\"jpsi_muons_phi\"] = ROOT.THStack(\"s_jpsi_muons_phi\", \"Angle for JPsi Muons; Phi; Events\")\n",
    "S[\"jpsi_muons_charge\"] = ROOT.THStack(\"s_jpsi_muons_charge\", \"Charge of JPsi Muons; Charge; Events\")\n",
    "S[\"invariant_mass_jpsi_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_masses_zoomed\"] = ROOT.THStack(\"s_invariant_masses_zoomed\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons_and_isolated_muons\", \"Invariant Masses for J/Psi Candidate And Isolated Muons (dR > 2); Invariant Masses; Events\")\n",
    "S[\"delta_eta_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_isolated_and_jpsi_muons\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_isolated_and_jpsi_muons\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_isolated_and_jpsi_muons\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\")\n",
    "S[\"jpsi_pt\"] = ROOT.THStack(\"s_jpsi_pt\", \"Transverse Momentum for JPsi; Pt; Events\")\n",
    "S[\"jpsi_eta\"] = ROOT.THStack(\"s_jpsi_eta\", \"Pseudorapidity for JPsi; Eta; Events\")\n",
    "S[\"jpsi_phi\"] = ROOT.THStack(\"s_jpsi_phi\", \"Angle for JPsi; Phi; Events\")\n",
    "S[\"delta_eta_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_jpsi_muons\", \"Delta Eta for JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_jpsi_muons\", \"Delta Phi for JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons\", \"Delta R for JPsi Muons; Delta R; Events\")\n",
    "S[\"delta_r_between_jpsi_muons_in_peak\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons_in_peak\", \"Delta R for JPsi Muons In Peak; Delta R; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_eta_between_isolated_muon_and_jpsi\", \"Delta Eta for Isolated Muon And JPsi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_phi_between_isolated_muon_and_jpsi\", \"Delta Phi for Isolated Muon And JPsi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_r_between_isolated_muon_and_jpsi\", \"Delta R for Isolated Muon And JPsi; Delta R; Events\")\n",
    "S[\"jpsi_muon_pt\"] = ROOT.THStack(\"s_jpsi_muon_pt\", \"JPsi Muon Pt - Muon Id Medium, Iso Id Tight; JPsi Muon Pt; Events\")\n",
    "\n",
    "\n",
    "S[\"jpsi_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_jpsi_muon_pf_rel_iso_03_all\", \"JPsi Muon Pf Rel Iso 03 All; JPsi Muon Pf Rel Iso 03 All; Events\")\n",
    "S[\"jpsi_muon_pf_iso_id\"] = ROOT.THStack(\"s_jpsi_muon_pf_iso_id\", \"JPsi Muon Pf Iso Id - Muon Id Medium, Iso Id Tight; JPsi Muon Pf Iso Id; Events\")\n",
    "S[\"isolated_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_isolated_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For Isolated Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_jpsi_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For JPsi Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_mass_muons_in_range\"] = ROOT.THStack(\"s_jpsi_mass_muons_in_range\", \"JPsi Mass For JPsis In 90-120 GeV Range; JPsi Mass; Events\")\n",
    "S[\"pt_at_low_delta_r\"] = ROOT.THStack(\"s_pt_at_low_delta_r\", \"Isolated Muon and JPsi Pt at Delta R < 0.3; Isolated Muon Pt; JPsi Muon Pt; Events\")\n",
    "S[\"jpsi_mass_in_peak\"] = ROOT.THStack(\"jpsi_mass_in_peak\", \"J/Psi Mass Made from Muons In Peak; J/Psi Mass; Events\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_eta_for_jpsi_muons_in_peak\", \"Delta Eta For J/Psi Muons In Peak; Delta Eta; Events\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_phi_for_jpsi_muons_in_peak\", \"Delta Phi For J/Psi Muons In Peak; Delta Phi; Events\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_r_for_jpsi_muons_in_peak\", \"Delta R For J/Psi Muons In Peak; Delta R; Events\")\n",
    "S[\"jpsi_muons_charge_in_peak\"] = ROOT.THStack(\"jpsi_muons_charge_in_peak\", \"J/Psi Muons In Peak Charge; Charge; Events\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"] = ROOT.THStack(\"jpsi_pt_with_muon_in_peak\", \"J/Psi Pt With Muons In Peak; Pt; Events\")\n",
    "S[\"jpsi_muon_pts_in_peak\"] = ROOT.THStack(\"jpsi_muon_pts_in_peak\", \"J/Psi Muon Pts In Peak; Positive Muon Pts; Negative Muon Pts; Events\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"] = ROOT.THStack(\"jpsi_muon_isolation_in_peak\", \"J/Psi Pf Rel Iso 03 All Made From Muons In Peak; Pf Rel Iso 03 All; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"Delta Eta Between Isolated Muon And J/Psi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"Delta Phi Between Isolated Muon And J/Psi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_r_between_isolated_muon_and_jpsi_in_peak\", \"Delta R Between Isolated Muon And J/Psi; Delta R; Events\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_isolated_muon_pf_rel_iso_03_all\", \"Isolated Muon PfRelIso03_All; Isolated Muon PfRelIso03_All; Events\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "leading_isolated_muon_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_before_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_before_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_before_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_before_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_before_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jets ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons_initial ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsis TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsis TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsis WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsis ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "number_of_jpsis ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "leading_isolated_muon_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_pt ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_pt ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_eta ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_eta ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_phi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet1_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_phi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jet2_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "transverse_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "transverse_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "transverse_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "transverse_mass ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "transverse_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "ht TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "ht TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "ht WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "ht ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "ht ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "met ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_pt ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_eta ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_phi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_masses_zoomed TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_masses_zoomed TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_masses_zoomed WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_masses_zoomed ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_masses_zoomed ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_eta ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_phi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_iso_id TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_iso_id TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_iso_id WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_iso_id ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pf_iso_id ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_muons_in_range TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_muons_in_range TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_muons_in_range WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_muons_in_range ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_muons_in_range ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "pt_at_low_delta_r TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "pt_at_low_delta_r TTTo2L2Nu <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "pt_at_low_delta_r WJetsToLNu <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "pt_at_low_delta_r ST_tW_top <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "pt_at_low_delta_r ST_tchannel_top <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "jpsi_mass_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_mass_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muons_charge_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt_with_muon_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt_with_muon_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt_with_muon_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt_with_muon_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_pt_with_muon_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_pts_in_peak TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "jpsi_muon_pts_in_peak TTTo2L2Nu <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "jpsi_muon_pts_in_peak WJetsToLNu <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "jpsi_muon_pts_in_peak ST_tW_top <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "jpsi_muon_pts_in_peak ST_tchannel_top <class cppyy.gbl.TH2D at 0x9ff74a0>\n",
      "jpsi_muon_isolation_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_isolation_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_isolation_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_isolation_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "jpsi_muon_isolation_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x9e58510>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x9e58510>\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for item in MonteCarlo:\n",
    "\n",
    "    for sample, color in {\"TTToSemiLeptonic\" : ROOT.kRed, \"TTTo2L2Nu\" : ROOT.kGreen, \"WJetsToLNu\" : ROOT.kBlue, \"ST_tW_top\" : ROOT.kMagenta, \"ST_tchannel_top\" : ROOT.kOrange}.items():\n",
    "        print(item, sample, type(MonteCarlo[item][sample]))\n",
    "        MonteCarlo[item][sample].SetFillColor(color)\n",
    "        MonteCarlo[item][sample].SetLineColor(color)\n",
    "        S[item].Add(MonteCarlo[item][sample])\n",
    "\n",
    "canvasas = dict()\n",
    "\n",
    "# canvas0 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas0.Draw()\n",
    "# canvasas['0'] = canvas0\n",
    "\n",
    "# canvas1 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas1.Draw()\n",
    "# canvasas['1'] = canvas1\n",
    "\n",
    "# canvas2 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas2.Draw()\n",
    "# canvasas['2'] = canvas2\n",
    "\n",
    "# canvas3 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas3.Draw()\n",
    "# canvasas['3'] = canvas3\n",
    "\n",
    "# canvas4 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas4.Draw()\n",
    "# canvasas['4'] = canvas4\n",
    "\n",
    "# canvas5 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas5.Draw()\n",
    "# canvasas['5'] = canvas5\n",
    "\n",
    "# canvas6 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas6.Draw()\n",
    "# canvasas['6'] = canvas6\n",
    "\n",
    "# canvas7 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas7.Draw()\n",
    "# canvasas['7'] = canvas7\n",
    "\n",
    "# canvas8 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas8.Draw()\n",
    "# canvasas['8'] = canvas8\n",
    "\n",
    "# canvas9 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas9.Draw()\n",
    "# canvasas['9'] = canvas9\n",
    "\n",
    "# canvas10 = ROOT.TCanvas(\"c_met_before_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_before_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas10.Draw()\n",
    "# canvasas['10'] = canvas10\n",
    "\n",
    "# canvas11 = ROOT.TCanvas(\"c_met_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas11.Draw()\n",
    "# canvasas['11'] = canvas11\n",
    "\n",
    "# canvas12 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas12.Draw()\n",
    "# canvasas['12'] = canvas12\n",
    "\n",
    "# canvas13 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas13.Draw()\n",
    "# canvasas['13'] = canvas13\n",
    "\n",
    "# canvas14 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas14.Draw()\n",
    "# canvasas['14'] = canvas14\n",
    "\n",
    "# canvas15 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas15.Draw()\n",
    "# canvasas['15'] = canvas15\n",
    "\n",
    "# canvas16 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas16.Draw()\n",
    "# canvasas['16'] = canvas16\n",
    "\n",
    "# canvas17 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas17.Draw()\n",
    "# canvasas['17'] = canvas17\n",
    "\n",
    "# canvas18 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas18.Draw()\n",
    "# canvasas['18'] = canvas18\n",
    "\n",
    "# canvas19 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas19.Draw()\n",
    "# canvasas['19'] = canvas19\n",
    "\n",
    "# canvas20 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas20.Draw()\n",
    "# canvasas['20'] = canvas20\n",
    "\n",
    "# canvas21 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas21.Draw()\n",
    "# canvasas['21'] = canvas21\n",
    "\n",
    "# canvas22 = ROOT.TCanvas(\"c_number_of_jets_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jets_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas22.Draw()\n",
    "# canvasas['22'] = canvas22\n",
    "\n",
    "\n",
    "\n",
    "# canvas24 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas24.Draw()\n",
    "# canvasas['24'] = canvas24\n",
    "\n",
    "# canvas25 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas25.Draw()\n",
    "# canvasas['25'] = canvas25\n",
    "\n",
    "# canvas26 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas26.Draw()\n",
    "# canvasas['26'] = canvas26\n",
    "\n",
    "# canvas27 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas27.Draw()\n",
    "# canvasas['27'] = canvas27\n",
    "\n",
    "# canvas28 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas28.Draw()\n",
    "# canvasas['28'] = canvas28\n",
    "\n",
    "# canvas29 = ROOT.TCanvas(\"c_number_of_jpsi_muons_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jpsi_muons_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas29.Draw()\n",
    "# canvasas['29'] = canvas29\n",
    "\n",
    "# canvas30 = ROOT.TCanvas(\"c_number_of_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "# S[\"number_of_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "# canvas30.Draw()\n",
    "# canvasas['30'] = canvas30\n",
    "\n",
    "canvas30a = ROOT.TCanvas(\"c_number_of_jpsis\", \"\", 800, 800)\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "S[\"number_of_jpsis\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "canvas30a.Draw()\n",
    "canvasas['30a'] = canvas30a\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas31 = ROOT.TCanvas(\"c_leading_isolated_muon_pt\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas31.Draw()\n",
    "canvasas['31'] = canvas31\n",
    "\n",
    "canvas32 = ROOT.TCanvas(\"c_leading_isolated_muon_eta\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas32.Draw()\n",
    "canvasas['32'] = canvas32\n",
    "\n",
    "canvas33 = ROOT.TCanvas(\"c_leading_isolated_muon_phi\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33.Draw()\n",
    "canvasas['33'] = canvas33\n",
    "\n",
    "canvas33a = ROOT.TCanvas(\"c_isolated_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33a.Draw()\n",
    "canvasas['33a'] = canvas33a\n",
    "\n",
    "canvas34a = ROOT.TCanvas(\"c_number_of_jets\", \"\", 800, 800)\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_jets\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas34a.Draw()\n",
    "canvasas['34a'] = canvas34a\n",
    "\n",
    "canvas35 = ROOT.TCanvas(\"c_jet1_pt\", \"\", 800, 800)\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas35.Draw()\n",
    "canvasas['35'] = canvas35\n",
    "\n",
    "canvas36 = ROOT.TCanvas(\"c_jet2_pt\", \"\", 800, 800)\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas36.Draw()\n",
    "canvasas['36'] = canvas36\n",
    "\n",
    "canvas37 = ROOT.TCanvas(\"c_jet1_eta\", \"\", 800, 800)\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas37.Draw()\n",
    "canvasas['37'] = canvas37\n",
    "\n",
    "canvas38 = ROOT.TCanvas(\"c_jet2_eta\", \"\", 800, 800)\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas38.Draw()\n",
    "canvasas['38'] = canvas38\n",
    "\n",
    "canvas39 = ROOT.TCanvas(\"c_jet1_phi\", \"\", 800, 800)\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas39.Draw()\n",
    "canvasas['39'] = canvas39\n",
    "\n",
    "canvas40 = ROOT.TCanvas(\"c_jet2_phi\", \"\", 800, 800)\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas40.Draw()\n",
    "canvasas['40'] = canvas40\n",
    "\n",
    "canvas41 = ROOT.TCanvas(\"c_transverse_mass\", \"\", 800, 800)\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"transverse_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas41.Draw()\n",
    "canvasas['41'] = canvas41\n",
    "\n",
    "canvas42 = ROOT.TCanvas(\"c_ht\", \"\", 800, 800)\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"ht\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas42.Draw()\n",
    "canvasas['42'] = canvas42\n",
    "\n",
    "canvas42a = ROOT.TCanvas(\"c_met\", \"\", 800, 800)\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"met\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# ROOT.TRatioPlot(RealData[\"met\"][\"SingleMuon2018\"],MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"]).Draw(\"PE1\")\n",
    "canvas42a.Draw()\n",
    "canvasas['42a'] = canvas42a\n",
    "\n",
    "canvas43 = ROOT.TCanvas(\"c_jpsi_muons_pt\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas43.Draw()\n",
    "canvasas['43'] = canvas43\n",
    "\n",
    "canvas44 = ROOT.TCanvas(\"c_jpsi_muons_eta\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas44.Draw()\n",
    "canvasas['44'] = canvas44\n",
    "\n",
    "canvas45 = ROOT.TCanvas(\"c_jpsi_muons_phi\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas45.Draw()\n",
    "canvasas['45'] = canvas45\n",
    "\n",
    "canvas46 = ROOT.TCanvas(\"c_jpsi_muons_charge\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "S[\"jpsi_muons_charge\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "canvas46.Draw()\n",
    "canvasas['46'] = canvas46\n",
    "\n",
    "# canvas61b = ROOT.TCanvas(\"c_jpsi_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61b.Draw()\n",
    "# canvasas['61b'] = canvas61b\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas33a = ROOT.TCanvas(\"c_leading_isolated_muon_mass\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas33a.Draw()\n",
    "# canvasas['33a'] = canvas33a\n",
    "\n",
    "# canvas34 = ROOT.TCanvas(\"c_leading_isolated_muon_charge\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas34.Draw()\n",
    "# canvasas['34'] = canvas34\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas47 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_mass_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas47.Draw()\n",
    "# canvasas['47'] = canvas47\n",
    "\n",
    "# canvas48 = ROOT.TCanvas(\"c_invariant_masses_zoomed\", \"\", 800, 800)\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_masses_zoomed\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas48.Draw()\n",
    "# canvasas['48'] = canvas48\n",
    "\n",
    "canvas49 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons_and_isolated_muons\", \"\", 800, 800)\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas49.Draw()\n",
    "canvasas['49'] = canvas49\n",
    "\n",
    "# canvas50 = ROOT.TCanvas(\"c_delta_eta_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas50.Draw()\n",
    "# canvasas['50'] = canvas50\n",
    "\n",
    "# canvas51 = ROOT.TCanvas(\"c_delta_phi_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas51.Draw()\n",
    "# canvasas['51'] = canvas51\n",
    "\n",
    "# canvas52 = ROOT.TCanvas(\"c_delta_r_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas52.Draw()\n",
    "# canvasas['52'] = canvas52\n",
    "\n",
    "# canvas53 = ROOT.TCanvas(\"c_jpsi_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas53.Draw()\n",
    "# canvasas['53'] = canvas53\n",
    "\n",
    "# canvas54 = ROOT.TCanvas(\"c_jpsi_eta\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_eta\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas54.Draw()\n",
    "# canvasas['54'] = canvas54\n",
    "\n",
    "# canvas55 = ROOT.TCanvas(\"c_jpsi_phi\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_phi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas55.Draw()\n",
    "# canvasas['55'] = canvas55\n",
    "\n",
    "# canvas56 = ROOT.TCanvas(\"c_delta_eta_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas56.Draw()\n",
    "# canvasas['56'] = canvas56\n",
    "\n",
    "# canvas57 = ROOT.TCanvas(\"c_delta_phi_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas57.Draw()\n",
    "# canvasas['57'] = canvas57\n",
    "\n",
    "# canvas58 = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58.Draw()\n",
    "# canvasas['58'] = canvas58\n",
    "\n",
    "\n",
    "# canvas58a = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58a.Draw()\n",
    "# canvasas['58a'] = canvas58a\n",
    "\n",
    "\n",
    "# canvas59 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas59.Draw()\n",
    "# canvasas['59'] = canvas59\n",
    "\n",
    "# canvas60 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas60.Draw()\n",
    "# canvasas['60'] = canvas60\n",
    "\n",
    "# canvas61 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61.Draw()\n",
    "# canvasas['61'] = canvas61\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas61a = ROOT.TCanvas(\"c_jpsi_muon_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61a.Draw()\n",
    "# canvasas['61a'] = canvas61a\n",
    "\n",
    "\n",
    "\n",
    "# canvas61c = ROOT.TCanvas(\"c_jpsi_muon_pf_iso_id\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_iso_id\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61c.Draw()\n",
    "# canvasas['61c'] = canvas61c\n",
    "\n",
    "# canvas61d = ROOT.TCanvas(\"c_isolated_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"isolated_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61d.Draw()\n",
    "# canvasas['61d'] = canvas61d\n",
    "\n",
    "# canvas61e = ROOT.TCanvas(\"c_jpsi_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61e.Draw()\n",
    "# canvasas['61e'] = canvas61e\n",
    "\n",
    "# canvas61f = ROOT.TCanvas(\"c_jpsi_mass_muons_in_range\", \"\", 800, 800)\n",
    "# #RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_mass_muons_in_range\"].Draw(\"HIST S\")\n",
    "# RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61f.Draw()\n",
    "# canvasas['61f'] = canvas61f\n",
    "\n",
    "# canvas61g = ROOT.TCanvas(\"c_pt_at_low_delta_r\", \"\", 800, 800)\n",
    "# RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas61g.Draw()\n",
    "# canvasas['61g'] = canvas61g\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas96 = ROOT.TCanvas(\"c_jpsi_mass_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_mass_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas96.Draw()\n",
    "canvasas['96'] = canvas96\n",
    "\n",
    "canvas97 = ROOT.TCanvas(\"c_delta_eta_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas97.Draw()\n",
    "canvasas['97'] = canvas97\n",
    "\n",
    "canvas98 = ROOT.TCanvas(\"c_delta_phi_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas98.Draw()\n",
    "canvasas['98'] = canvas98\n",
    "\n",
    "canvas99 = ROOT.TCanvas(\"c_delta_r_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas99.Draw()\n",
    "canvasas['99'] = canvas99\n",
    "\n",
    "canvas100 = ROOT.TCanvas(\"c_jpsi_muons_charge_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_charge_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas100.Draw()\n",
    "canvasas['100'] = canvas100\n",
    "\n",
    "canvas101 = ROOT.TCanvas(\"c_jpsi_pt_with_muon_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas101.Draw()\n",
    "canvasas['101'] = canvas101\n",
    "\n",
    "# canvas101a = ROOT.TCanvas(\"c_jpsi_muon_pts_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas101a.Draw()\n",
    "# canvasas['101a'] = canvas101a\n",
    "\n",
    "canvas102 = ROOT.TCanvas(\"c_jpsi_muon_isolation_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas102.Draw()\n",
    "canvasas['102'] = canvas102\n",
    "\n",
    "canvas104 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas104.Draw()\n",
    "canvasas['104'] = canvas104\n",
    "\n",
    "canvas105 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas105.Draw()\n",
    "canvasas['105'] = canvas105\n",
    "\n",
    "canvas106 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas106.Draw()\n",
    "canvasas['106'] = canvas106"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening PDF\n",
      "Closing PDF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: pdf file 8_20_22_6Gev_dR_gt_2.pdf has been created using the current canvas\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_6Gev_dR_gt_2.pdf and file closed\n"
     ]
    }
   ],
   "source": [
    "for kn, k in enumerate(canvasas.keys()):\n",
    "    \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvasas[k].SaveAs('8_20_22_6Gev_dR_gt_2.pdf(')\n",
    "    \n",
    "    elif kn == len(canvasas) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvasas[k].SaveAs('8_20_22_6Gev_dR_gt_2.pdf)')\n",
    "    \n",
    "    else:\n",
    "        canvasas[k].SaveAs('8_20_22_6Gev_dR_gt_2.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "era = \"2017\"\n",
    "channel = \"Mu\"\n",
    "\n",
    "def DrawStack(MonteCarlo, Data, separator = \"___\"):\n",
    "    era, channel, sample, variable, systematic = list(MonteCarlo.values())[0].GetName().split(separator)\n",
    "    name = \"_\".join([\"stack\", era, channel, variable, systematic])\n",
    "    colors = {\"TTToSemiLeptonic\" : ROOT.kRed}\n",
    "    stack = ROOT.THStack(name, \"\")\n",
    "    \n",
    "    canvas = ROOT.TCanvas(name.replace(\"stack\", \"canvas\"), \"\", 800, 800)\n",
    "  \n",
    "    \n",
    "    for sample, hist in MonteCarlo.items():\n",
    "        hist.SetFillColor(colors.get(sample, ROOT.kMagenta))\n",
    "        hist.SetLineColor(colors.get(sample, ROOT.kMagenta))\n",
    "        stack.Add(hist)\n",
    "        \n",
    "    aggregate = None\n",
    "    \n",
    "    for sample, hist in Data.items():\n",
    "        if aggregate == None:\n",
    "            aggregate = hist.Clone(hist.GetName().replace(\"sample\", \"allData\"))\n",
    "            \n",
    "        else:\n",
    "            aggregate += hist\n",
    "    \n",
    "    maxima = []\n",
    "    minima = []\n",
    "    maxima.append(stack.GetMaximum())\n",
    "    maxima.append(aggregate.GetMaximum())\n",
    "    minima.append(stack.GetMinimum())\n",
    "    minima.append(aggregate.GetMinimum())\n",
    "    \n",
    "    stack.SetMinimum(min(minima))\n",
    "    stack.SetMaximum(max(maxima))\n",
    "    \n",
    "    stack.Draw(\"HIST S\")\n",
    "    aggregate.Draw(\"PE1 SAME\")\n",
    "    \n",
    "    canvas.BuildLegend()\n",
    "    \n",
    "    return stack, aggregate, canvas\n",
    "\n",
    "for kn, variable in enumerate(variables):\n",
    "        \n",
    "    MonteCarlo, RealData = GetHistos(f, era, channel, variable)\n",
    "    \n",
    "    stack, aggregate, canvas = DrawStack(MonteCarlo, RealData)\n",
    "       \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvas.SaveAs('December2.pdf(')\n",
    "\n",
    "    elif kn == len(variables) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvas.SaveAs('December2.pdf)')\n",
    "\n",
    "    else:\n",
    "        canvas.SaveAs('December2.pdf')\n",
    "        \n",
    "    canvas.SaveAs(variable + 'December2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on _Helper in module _sitebuiltins object:\n",
      "\n",
      "class _Helper(builtins.object)\n",
      " |  Define the builtin 'help'.\n",
      " |  \n",
      " |  This is a wrapper around pydoc.help that provides a helpful message\n",
      " |  when 'help' is typed at the Python interactive prompt.\n",
      " |  \n",
      " |  Calling help() at the Python prompt starts an interactive help session.\n",
      " |  Calling help(thing) prints help for the python object 'thing'.\n",
      " |  \n",
      " |  Methods defined here:\n",
      " |  \n",
      " |  __call__(self, *args, **kwds)\n",
      " |      Call self as a function.\n",
      " |  \n",
      " |  __repr__(self)\n",
      " |      Return repr(self).\n",
      " |  \n",
      " |  ----------------------------------------------------------------------\n",
      " |  Data descriptors defined here:\n",
      " |  \n",
      " |  __dict__\n",
      " |      dictionary for instance variables (if defined)\n",
      " |  \n",
      " |  __weakref__\n",
      " |      list of weak references to the object (if defined)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(help)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
