{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.26/04\n"
     ]
    }
   ],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total 49484\r\n",
      "-rw-r--r--. 1 migordon 1399   15708 Aug 18  2020 TTto2L2Nu.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   41132 Aug 18  2020 TTToSemiLeptonic.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   14492 Aug 25  2020 Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   37773 Aug 27  2020 August26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 Sep  2  2020 FTFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399    5774 Sep 21  2020 RealData\r\n",
      "-rw-r--r--. 1 migordon 1399   45563 Sep 23  2020 September9.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   45708 Sep 24  2020 September23MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   46111 Sep 24  2020 September23RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   48733 Oct  9  2020 October8MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399     926 Oct 20  2020 graph.dot.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145577 Oct 20  2020 October15.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   49188 Nov 11  2020 October8RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November12.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November23.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 24  2020 November24.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  114959 Dec  3  2020 December2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145516 Dec 10  2020 December10.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198313 Jan 19  2021 January18LooseID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198153 Jan 21  2021 January21MediumID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198536 Jan 21  2021 January21TightID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198491 Jan 26  2021 January26WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197655 Jan 28  2021 January28WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198647 Feb 23  2021 February16AtLeastOneVetoedMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  269832 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  378821 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup-Jaunary-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  198548 Feb 24  2021 February23ExactlyOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198645 Feb 24  2021 February23AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  148905 Feb 24  2021 February23NoGoodMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198461 Feb 24  2021 February24VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197977 Feb 25  2021 February25AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198084 Feb 25  2021 February25VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  237095 Mar  7  2021 March2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  273136 Mar  8  2021 March8.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  277452 May  2  2021 April27.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  383603 May  3  2021 May3.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  385981 May  5  2021 May4AtLeast4JetsAtLeast1BTagged.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399    7149 May  5  2021 WJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   46268 May  5  2021 2017_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   29677 May  5  2021 2017_Mu_WJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  382235 May  5  2021 FirstTTreeAnalysisMonteCarlo2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   21530 May  5  2021 2017_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  264376 May  6  2021 FirstTTreeAnalysisRealData2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399    7138 May  6  2021 TTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7261 May  6  2021 TTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7219 May  6  2021 graph.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   44070 May  6  2021 2018_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   44250 May  6  2021 2018_Mu_TTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  388482 May  6  2021 May6.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  292166 May 12  2021 FirstTTreeAnalysisMonteCarlo2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  322266 May 12  2021 May11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 May 26  2021 TopMassFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399   24558 Aug 19  2021 FirstTTreeAnalysis2018United-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399     427 Aug 24  2021 New_Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  152243 Aug 25  2021 August25_50K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  253643 Aug 25  2021 August25_500K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  268165 Aug 26  2021 August25_1M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  288466 Aug 26  2021 August25_3M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  293684 Aug 26  2021 August25_5M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32517 Aug 30  2021 FirstTTreeAnalysis2018United-Backup-Copy1.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  308929 Aug 31  2021 August31.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  287815 Sep  1  2021 September1.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  165129 Sep  2  2021 FirstTTreeAnalysisRealData2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  342481 Sep  3  2021 September2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354661 Sep 21  2021 September21TightMedium.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354301 Sep 21  2021 September21TightTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354485 Sep 21  2021 September22MediumTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  568715 Sep 28  2021 MasterPlots-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  366143 Oct  1  2021 September30.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  608173 Oct  6  2021 MasterPlots-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  718643 Oct 20  2021 MasterPlots-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  460135 Oct 21  2021 October21.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  459750 Oct 28  2021 October26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  469993 Nov 11  2021 November11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  815942 Dec 20  2021 MasterPlots.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   35815 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.py\r\n",
      "-rw-r--r--. 1 migordon 1399   48706 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399 5254040 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-OldCopy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   49408 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-1-9-22-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   52579 Jan 10  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.py\r\n",
      "-rw-r--r--. 1 migordon 1399   22036 May  9 11:57 FirstTTreeAnalysis2018United.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75336 May 14 12:09 May14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  134983 May 26 14:41 May26_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  156426 Jun 13 14:42 June13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   76628 Jun 13 16:00 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   41767 Jun 13 17:53 FirstTTreeAnalysis2018United-AdditionalJPsi-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  317522 Jun 14 16:22 June14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   39626 Jun 20 15:21 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   27369 Jun 20 16:49 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.py\r\n",
      "-rw-r--r--. 1 migordon 1399  115107 Jun 21 15:12 FirstTTreeAnalysis2018United-AdditionalJPsi-May_23_2022_Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  552871 Jun 21 16:25 MasterPlots-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  461138 Jun 23 17:27 June23_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  267495 Jun 27 14:57 FirstTTreeAnalysisRealData-Backup-January-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  472488 Jun 30 17:37 June30_2022_JPsiZoomed.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32374 Jul  1 16:35 FirstTTreeAnalysis2018United-AdditionalJPsi-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   66434 Jul  1 23:03 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.py\r\n",
      "-rw-r--r--. 1 migordon 1399   80894 Jul  3 13:20 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  605767 Jul  3 20:45 July3_2022_MinimumFourJets.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  173470 Jul  4 12:49 MasterPlots-June-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  702825 Jul  4 13:22 July4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  705989 Jul  5 09:55 July5_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 10 23:20 FirstTTreeAnalysis2018United-AdditionalJPsi-July_10_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  776465 Jul 10 23:49 July10_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   97291 Jul 11 01:36 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80141 Jul 11 01:38 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399   98358 Jul 11 02:56 TopQuark_JPsi_Analysis-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80916 Jul 11 02:57 TopQuark_JPsi_Analysis-July_11_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  769640 Jul 11 03:12 July11_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 11 09:41 FirstTTreeAnalysis2018United-AdditionalJPsi-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  802986 Jul 11 10:35 July11_2022_a.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   77722 Jul 11 11:04 TopQuark_JPsi_Analysis-July_11_2022-Copy1.py\r\n",
      "-rw-r--r--. 1 migordon 1399  838420 Jul 11 11:30 July11_2022_b.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  900846 Jul 12 19:46 July12_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1057489 Jul 13 15:13 July13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1049253 Jul 13 22:15 July13_2022_Isolated_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   83308 Jul 17 18:38 Gordon_Michael_July_17_2022_Alternate_Muon_IDs.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  613179 Jul 20 08:43 MasterPlots-July-3-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75405 Jul 20 12:46 Gordon_Michael_July_20_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   90076 Jul 21 07:24 Gordon_Michael_July_20_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  535140 Jul 21 11:17 Gordon_Michael_July_21_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  927599 Jul 21 18:29 Gordon_Michael_July_21_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  937378 Jul 21 19:27 Gordon_Michael_July_21_2022_Medium_Tight_Revised_Twice.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1008949 Jul 24 10:30 Gordon_Michael_July_24_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  626330 Jul 25 16:24 Gordon_Michael_July_25_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1284215 Aug  4 17:01 Gordon_Michael_August_4_2022_Negaverse_Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  161217 Aug  5 13:23 Gordon_Michael_August_4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  146891 Aug  8 14:26 Gordon_Michael_August_8_2022_dR_below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  189364 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  159737 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  148783 Aug  8 14:37 Gordon_Michael_August_8_2022_dR_above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1140010 Aug  8 16:40 MasterPlots-July-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  391521 Aug  9 23:20 Gordon_Michael_August_9_2022_JPsi_3Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  351638 Aug  9 23:27 Gordon_Michael_August_9_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  309560 Aug 10 09:49 Gordon_Michael_August_10_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  310508 Aug 11 14:24 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  312296 Aug 11 14:35 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  350475 Aug 11 14:42 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  347400 Aug 11 14:49 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  296712 Aug 17 15:27 Gordon_Michael_August_17_2022_JPsi_6Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  332091 Aug 17 15:43 Gordon_Michael_August_17_2022_JPsi_3Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  308542 Aug 17 16:14 Gordon_Michael_August_17_2022_JPsi_6Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  347218 Aug 17 16:38 Gordon_Michael_August_17_2022_JPsi_3Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  279059 Aug 18 17:33 8_18_22_6Gev_dR_lt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  156949 Aug 18 22:39 TopQuark_JPsi_Analysis-August_8_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  129415 Aug 19 00:06 TopQuark_JPsi_Analysis-August_8_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  219172 Aug 19 14:55 8_19_22_6Gev_dR_lt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  230235 Aug 19 15:54 8_19_22_6Gev_dR_gt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  215184 Aug 20 14:59 8_20_22_6Gev_dR_lt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  225774 Aug 20 15:07 8_20_22_6Gev_dR_gt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  213581 Aug 20 21:26 8_20_22_6Gev_dR_lt_2_3bim_gt_20.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  226434 Aug 21 14:44 8_20_22_6Gev_dR_gt_2_3bim_gt_20.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  226701 Aug 21 21:53 8_20_22_6Gev_dR_gt_2_3bim_gt_20_ht_gt_75.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  214584 Aug 21 22:04 8_20_22_6Gev_dR_lt_2_3bim_gt_20_ht_gt_75.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  221412 Aug 22 14:16 8_20_22_6Gev_dR_gt_2_3bim_gt_20_3plus_jets.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  490742 Aug 22 14:37 Combination.root_backup\r\n",
      "-rw-r--r--. 1 migordon 1399  490649 Aug 22 14:45 Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  223954 Aug 22 14:45 8_20_22_3Gev_dR_lt_2_3bim_gt_20.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  143836 Aug 22 14:47 TopQuark_JPsi_Analysis-August_18_2022.py\r\n",
      "drwxr-xr-x. 2 migordon 1399    4096 Aug 22 14:47 __pycache__\r\n",
      "-rw-r--r--. 1 migordon 1399   19985 Aug 22 14:48 Data.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34018 Aug 22 14:48 Data_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20257 Aug 22 14:48 MonteCarloTTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34395 Aug 22 14:48 MonteCarloTTToSemiLeptonic_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  174592 Aug 22 14:48 TopQuark_JPsi_Analysis-August_18_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   20257 Aug 22 14:48 MonteCarloTTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34395 Aug 22 14:48 MonteCarloTTTo2L2Nu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20257 Aug 22 14:48 MonteCarloWJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34395 Aug 22 14:48 MonteCarloWJetsToLNu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20257 Aug 22 14:48 MonteCarloST_tW_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34395 Aug 22 14:48 MonteCarloST_tW_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20695 Aug 22 14:48 MonteCarloST_tchannel_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   34395 Aug 22 14:48 MonteCarloST_tchannel_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   67125 Aug 22 14:51 2018_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  112149 Aug 22 14:52 2018_Mu_MonteCarloTTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399  108219 Aug 22 14:52 2018_Mu_MonteCarloTTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   80065 Aug 22 14:52 2018_Mu_MonteCarloWJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   66965 Aug 22 14:52 2018_Mu_MonteCarloST_tW_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399   74586 Aug 22 14:53 2018_Mu_MonteCarloST_tchannel_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399  872387 Aug 22 14:53 MasterPlots-August-8-2022-Version.ipynb\r\n"
     ]
    }
   ],
   "source": [
    "!ls -ltr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hadd Target file: Combination.root\n",
      "hadd compression setting for all output: 1\n",
      "hadd Source file 1: 2018_Mu_Data.root\n",
      "hadd Source file 2: 2018_Mu_MonteCarloTTToSemiLeptonic.root\n",
      "hadd Source file 3: 2018_Mu_MonteCarloTTTo2L2Nu.root\n",
      "hadd Source file 4: 2018_Mu_MonteCarloWJetsToLNu.root\n",
      "hadd Source file 5: 2018_Mu_MonteCarloST_tW_top.root\n",
      "hadd Source file 6: 2018_Mu_MonteCarloST_tchannel_top.root\n",
      "hadd Target path: Combination.root:/\n"
     ]
    }
   ],
   "source": [
    "!mv Combination.root Combination.root_backup\n",
    "!hadd -f Combination.root 2018_Mu_Data.root 2018_Mu_MonteCarloTTToSemiLeptonic.root 2018_Mu_MonteCarloTTTo2L2Nu.root 2018_Mu_MonteCarloWJetsToLNu.root 2018_Mu_MonteCarloST_tW_top.root 2018_Mu_MonteCarloST_tchannel_top.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___number_of_jpsis___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsis___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n"
     ]
    }
   ],
   "source": [
    "f = ROOT.TFile.Open('Combination.root', 'read')\n",
    "k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "eras = list(set([kk.split(\"___\")[0] for kk in k]))\n",
    "channels = list(set([kk.split(\"___\")[1] for kk in k]))\n",
    "samples = list(set([kk.split(\"___\")[2] for kk in k]))\n",
    "variables = list(set([kk.split(\"___\")[3] for kk in k]))\n",
    "systematics = list(set([kk.split(\"___\")[4] for kk in k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018']\n",
      "['Mu']\n",
      "['MonteCarloST_tW_top', 'MonteCarloST_tchannel_top', 'MonteCarloTTTo2L2Nu', 'MonteCarloWJetsToLNu', 'Data', 'MonteCarloTTToSemiLeptonic']\n",
      "['delta_eta_for_jpsi_muons_in_peak', 'leading_isolated_electron_charge_initial', 'met_after_met_cut', 'leading_isolated_electron_mass_initial', 'leading_isolated_electron_phi_after_met_cut', 'delta_phi_between_jpsi_muons', 'isolated_muons_in_range_pfRelIso03_all', 'invariant_masses_zoomed', 'leading_isolated_muon_eta_after_met_cut', 'leading_isolated_muon_charge_after_jet_cut', 'jet1_pt', 'leading_isolated_muon_phi_after_met_cut', 'leading_isolated_muon_phi_after_jet_cut', 'delta_phi_between_isolated_and_jpsi_muons', 'pt_at_low_delta_r', 'jpsi_muons_pt', 'delta_r_between_isolated_and_jpsi_muons', 'delta_phi_between_isolated_muon_and_jpsi', 'delta_eta_between_isolated_and_jpsi_muons', 'delta_r_between_jpsi_muons', 'jpsi_muons_in_range_pfRelIso03_all', 'delta_eta_between_jpsi_muons', 'leading_isolated_electron_pt_initial', 'leading_isolated_muon_mass', 'jet2_pt', 'jet2_phi', 'delta_r_between_jpsi_muons_in_peak', 'leading_isolated_electron_charge_after_met_cut', 'isolated_muon_pf_rel_iso_03_all', 'jpsi_pt_with_muon_in_peak', 'leading_isolated_muon_phi', 'leading_isolated_muon_pt_after_jet_cut', 'jpsi_muons_eta', 'jpsi_muon_pf_iso_id', 'number_of_jpsi_muons', 'jpsi_muons_phi', 'jpsi_mass_in_peak', 'jpsi_muon_pf_rel_iso_03_all', 'invariant_mass_jpsi_muons', 'number_of_jets_initial', 'jet1_phi', 'leading_isolated_muon_charge', 'jpsi_pt', 'leading_isolated_electron_eta_initial', 'leading_isolated_electron_mass_after_met_cut', 'delta_eta_between_isolated_muon_and_jpsi_in_peak', 'delta_r_for_jpsi_muons_in_peak', 'leading_isolated_muon_eta', 'jet2_eta', 'leading_isolated_electron_pt_after_met_cut', 'leading_isolated_muon_eta_initial', 'leading_isolated_muon_mass_after_met_cut', 'jpsi_muon_pts_in_peak', 'jet1_eta', 'ht', 'jpsi_eta', 'met', 'leading_isolated_muon_mass_initial', 'leading_isolated_electron_phi_initial', 'jpsi_muons_charge_in_peak', 'delta_r_between_isolated_muon_and_jpsi', 'number_of_jpsis', 'leading_isolated_muon_mass_after_jet_cut', 'jpsi_muon_pt', 'transverse_mass', 'invariant_mass_jpsi_muons_and_isolated_muons', 'met_before_met_cut', 'leading_isolated_muon_eta_after_jet_cut', 'leading_isolated_muon_charge_after_met_cut', 'leading_isolated_muon_charge_initial', 'jpsi_muon_isolation_in_peak', 'leading_isolated_muon_pt_initial', 'jpsi_mass_muons_in_range', 'leading_isolated_muon_pt', 'delta_phi_between_isolated_muon_and_jpsi_in_peak', 'number_of_jets', 'leading_isolated_muon_phi_initial', 'leading_isolated_muon_pt_after_met_cut', 'delta_eta_between_isolated_muon_and_jpsi', 'jpsi_muons_charge', 'jpsi_phi', 'leading_isolated_electron_eta_after_met_cut', 'number_of_jpsi_muons_initial', 'delta_r_between_isolated_muon_and_jpsi_in_peak', 'delta_phi_for_jpsi_muons_in_peak']\n",
      "['nominal']\n"
     ]
    }
   ],
   "source": [
    "print(eras)\n",
    "print(channels)\n",
    "print(samples)\n",
    "print(variables)\n",
    "print(systematics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetHistos(f, era, channel, variable, systematic = \"nominal\", separator = \"___\"):\n",
    "    \n",
    "    MC = dict()\n",
    "    Data = dict()\n",
    "    \n",
    "    k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "    print(k)\n",
    "    k = [kk for kk in k if era == kk.split(separator)[0]]\n",
    "    k = [kk for kk in k if channel == kk.split(separator)[1]]\n",
    "    k = [kk for kk in k if variable == kk.split(separator)[3]]\n",
    "    k = [kk for kk in k if systematic == kk.split(separator)[4]]\n",
    "    \n",
    "    for kk in k:\n",
    "        sample = kk.split(separator)[2]\n",
    "        \n",
    "        if \"data\" in sample.lower():\n",
    "            Data[sample] = f.Get(kk)\n",
    "            print(\"Data\")\n",
    "            \n",
    "        else:\n",
    "            MC[sample] = f.Get(kk)\n",
    "            print(sample)\n",
    "            \n",
    "    return MC, Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___number_of_jpsis___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsis___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsis___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsis___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n",
      "{} {}\n"
     ]
    }
   ],
   "source": [
    "x, y = GetHistos(f, \"2018\", \"Mu\", \"mu_pt\")\n",
    "print(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#Load histograms from file(s)\n",
    "MonteCarlo = dict()\n",
    "RealData = dict()\n",
    "\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "MonteCarlo[\"met_before_met_cut\"] = dict()\n",
    "MonteCarlo[\"met_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jets_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jets\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsis\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"] = dict()\n",
    "MonteCarlo[\"jet1_pt\"] = dict()\n",
    "MonteCarlo[\"jet2_pt\"] = dict()\n",
    "MonteCarlo[\"jet1_eta\"] = dict()\n",
    "MonteCarlo[\"jet2_eta\"] = dict()\n",
    "MonteCarlo[\"jet1_phi\"] = dict()\n",
    "MonteCarlo[\"jet2_phi\"] = dict()\n",
    "MonteCarlo[\"transverse_mass\"] = dict()\n",
    "MonteCarlo[\"ht\"] = dict()\n",
    "MonteCarlo[\"met\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_phi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"invariant_masses_zoomed\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_phi\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "MonteCarlo[\"pt_at_low_delta_r\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"] = dict()\n",
    "\n",
    "\n",
    "\n",
    "RealData[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "RealData[\"met_before_met_cut\"] = dict()\n",
    "RealData[\"met_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "RealData[\"number_of_jets_initial\"] = dict()\n",
    "RealData[\"number_of_jets\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons\"] = dict()\n",
    "RealData[\"number_of_jpsis\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge\"] = dict()\n",
    "RealData[\"jet1_pt\"] = dict()\n",
    "RealData[\"jet2_pt\"] = dict()\n",
    "RealData[\"jet1_eta\"] = dict()\n",
    "RealData[\"jet2_eta\"] = dict()\n",
    "RealData[\"jet1_phi\"] = dict()\n",
    "RealData[\"jet2_phi\"] = dict()\n",
    "RealData[\"transverse_mass\"] = dict()\n",
    "RealData[\"ht\"] = dict()\n",
    "RealData[\"met\"] = dict()\n",
    "RealData[\"jpsi_muons_pt\"] = dict()\n",
    "RealData[\"jpsi_muons_eta\"] = dict()\n",
    "RealData[\"jpsi_muons_phi\"] = dict()\n",
    "RealData[\"jpsi_muons_charge\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "RealData[\"invariant_masses_zoomed\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"jpsi_pt\"] = dict()\n",
    "RealData[\"jpsi_eta\"] = dict()\n",
    "RealData[\"jpsi_phi\"] = dict()\n",
    "RealData[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"jpsi_muon_pt\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "RealData[\"pt_at_low_delta_r\"] = dict()\n",
    "RealData[\"jpsi_mass_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"] = dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal\")\n",
    "RealData[\"met_before_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal\")\n",
    "RealData[\"met_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal\")\n",
    "RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal\")\n",
    "RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal\")\n",
    "RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"number_of_jpsis\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsis___nominal\")\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsis___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_phi___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___transverse_mass___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___ht___nominal\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___ht___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met___nominal\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal\")\n",
    "RealData[\"jpsi_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal\")\n",
    "RealData[\"jpsi_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal\")\n",
    "RealData[\"jpsi_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal\")\n",
    "RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal\")\n",
    "RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal\")\n",
    "RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "S = dict()\n",
    "S[\"leading_isolated_muon_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_initial\", \"Leading Isolated Muon Transverse Momentum (One Muon, No Electrons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_initial\", \"Leading Isolated Muon Pseudorapidity (One Muon, No Electrons); Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_initial\", \"Leading Isolated Muon Angle (One Muon, No Electrons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_initial\", \"Leading Isolated Muon Mass (One Muon, No Electrons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_initial\", \"Leading Isolated Muon Charge (One Muon, No Electrons); Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_initial\", \"Leading Isolated Electron Transverse Momentum (One Electron, No Muons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_initial\", \"Leading Isolated Electron Pseudorapidity (One Electron, No Muons); Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_initial\", \"Leading Isolated Electron Angle (One Electron, No Muons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_initial\", \"Leading Isolated Electron Mass (One Electron, No Muons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_initial\", \"Leading Isolated Electron Charge (One Electron, No Muons); Charge; Events\")\n",
    "S[\"met_before_met_cut\"] = ROOT.THStack(\"s_met_before_met_cut\", \"MET Before MET Cut; Pt (GeV); Events\")\n",
    "S[\"met_after_met_cut\"] = ROOT.THStack(\"s_met_after_met_cut\", \"MET; Pt (GeV); Events\")\n",
    "S[\"leading_isolated_muon_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_met_cut\", \"Leading Isolated Muon Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_met_cut\", \"Leading Isolated Muon Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_met_cut\", \"Leading Isolated Muon Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_met_cut\", \"Leading Isolated Muon Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_met_cut\", \"Leading Isolated Muon Charge After MET Cut; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_after_met_cut\", \"Leading Isolated Electron Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_after_met_cut\", \"Leading Isolated Electron Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_after_met_cut\", \"Leading Isolated Electron Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_after_met_cut\", \"Leading Isolated Electron Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_after_met_cut\", \"Leading Isolated Electron Charge After MET Cut; Charge; Events\")\n",
    "S[\"number_of_jets_initial\"] = ROOT.THStack(\"s_number_of_jets_initial\", \"Number Of Jets Before Jet Cut; Number Of Jets; Events\")\n",
    "S[\"number_of_jets\"] = ROOT.THStack(\"s_number_of_jets\", \"Number Of Jets; Number Of Jets; Events\")\n",
    "S[\"leading_isolated_muon_pt_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_jet_cut\", \"Leading Isolated Muon Transverse Momentum After Jet Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_jet_cut\", \"Leading Isolated Muon Pseudorapidity After Jet Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_jet_cut\", \"Leading Isolated Muon Angle After Jet Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_jet_cut\", \"Leading Isolated Muon Mass After Jet Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_jet_cut\", \"Leading Isolated Muon Charge After Jet Cut; Charge; Events\")\n",
    "S[\"number_of_jpsi_muons_initial\"] = ROOT.THStack(\"s_number_of_jpsi_muons_initial\", \"Number of JPsi Muons Before JPsi Muon Cut; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsi_muons\"] = ROOT.THStack(\"s_number_of_jpsi_muons\", \"Number of JPsi Muons; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsis\"] = ROOT.THStack(\"s_number_of_jpsis\", \"Number of JPsis; Number Of JPsis; Events\")\n",
    "S[\"leading_isolated_muon_pt\"] = ROOT.THStack(\"s_leading_isolated_muon_pt\", \"Leading Isolated Muon Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta\"] = ROOT.THStack(\"s_leading_isolated_muon_eta\", \"Leading Isolated Muon Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi\"] = ROOT.THStack(\"s_leading_isolated_muon_phi\", \"Leading Isolated Muon Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass\"] = ROOT.THStack(\"s_leading_isolated_muon_mass\", \"Leading Isolated Muon Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge\"] = ROOT.THStack(\"s_leading_isolated_muon_charge\", \"Leading Isolated Muon Charge; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt\"] = ROOT.THStack(\"s_leading_isolated_electron_pt\", \"Leading Isolated Electron Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta\"] = ROOT.THStack(\"s_leading_isolated_electron_eta\", \"Leading Isolated Electron Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi\"] = ROOT.THStack(\"s_leading_isolated_electron_phi\", \"Leading Isolated Electron Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass\"] = ROOT.THStack(\"s_leading_isolated_electron_mass\", \"Leading Isolated Electron Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge\"] = ROOT.THStack(\"s_leading_isolated_electron_charge\", \"Leading Isolated Electron Charge; Charge; Events\")\n",
    "S[\"jet1_pt\"] = ROOT.THStack(\"s_jet1_pt\", \"Jet Transverse Momentum for Leading Jet; Pt (GeV); Events\")\n",
    "S[\"jet2_pt\"] = ROOT.THStack(\"s_jet2_pt\", \"Jet Transverse Momentum for Subleading Jet; Pt (GeV); Events\")\n",
    "S[\"jet1_eta\"] = ROOT.THStack(\"s_jet1_eta\", \"Jet Pseudorapidity for Leading Jet; Eta; Events\")\n",
    "S[\"jet2_eta\"] = ROOT.THStack(\"s_jet2_eta\", \"Jet Pseudorapidity for Subleading Jet; Eta; Events\")\n",
    "S[\"jet1_phi\"] = ROOT.THStack(\"s_jet1_phi\", \"Jet Angle for Leading Jet; Phi (Radians); Events\")\n",
    "S[\"jet2_phi\"] = ROOT.THStack(\"s_jet2_phi\", \"Jet Angle for Subleading Jet; Phi (Radians); Events\")\n",
    "S[\"transverse_mass\"] = ROOT.THStack(\"s_transverse_mass\", \"Transverse Mass; Transverse Mass (GeV); Events\")\n",
    "S[\"ht\"] = ROOT.THStack(\"s_ht\", \"Ht; Ht; Events\")\n",
    "S[\"met\"] = ROOT.THStack(\"s_met\", \"MET; Pt (GeV); Events\")\n",
    "S[\"jpsi_muons_pt\"] = ROOT.THStack(\"s_jpsi_muons_pt\", \"Transverse Momentum for JPsi Muons; Pt; Events\")\n",
    "S[\"jpsi_muons_eta\"] = ROOT.THStack(\"s_jpsi_muons_eta\", \"Pseudorapidity for JPsi Muons; Eta; Events\")\n",
    "S[\"jpsi_muons_phi\"] = ROOT.THStack(\"s_jpsi_muons_phi\", \"Angle for JPsi Muons; Phi; Events\")\n",
    "S[\"jpsi_muons_charge\"] = ROOT.THStack(\"s_jpsi_muons_charge\", \"Charge of JPsi Muons; Charge; Events\")\n",
    "S[\"invariant_mass_jpsi_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_masses_zoomed\"] = ROOT.THStack(\"s_invariant_masses_zoomed\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons_and_isolated_muons\", \"Invariant Masses for J/Psi Candidate And Isolated Muons (dR > 2); Invariant Masses; Events\")\n",
    "S[\"delta_eta_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_isolated_and_jpsi_muons\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_isolated_and_jpsi_muons\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_isolated_and_jpsi_muons\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\")\n",
    "S[\"jpsi_pt\"] = ROOT.THStack(\"s_jpsi_pt\", \"Transverse Momentum for JPsi; Pt; Events\")\n",
    "S[\"jpsi_eta\"] = ROOT.THStack(\"s_jpsi_eta\", \"Pseudorapidity for JPsi; Eta; Events\")\n",
    "S[\"jpsi_phi\"] = ROOT.THStack(\"s_jpsi_phi\", \"Angle for JPsi; Phi; Events\")\n",
    "S[\"delta_eta_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_jpsi_muons\", \"Delta Eta for JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_jpsi_muons\", \"Delta Phi for JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons\", \"Delta R for JPsi Muons; Delta R; Events\")\n",
    "S[\"delta_r_between_jpsi_muons_in_peak\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons_in_peak\", \"Delta R for JPsi Muons In Peak; Delta R; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_eta_between_isolated_muon_and_jpsi\", \"Delta Eta for Isolated Muon And JPsi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_phi_between_isolated_muon_and_jpsi\", \"Delta Phi for Isolated Muon And JPsi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_r_between_isolated_muon_and_jpsi\", \"Delta R for Isolated Muon And JPsi; Delta R; Events\")\n",
    "S[\"jpsi_muon_pt\"] = ROOT.THStack(\"s_jpsi_muon_pt\", \"JPsi Muon Pt - Muon Id Medium, Iso Id Tight; JPsi Muon Pt; Events\")\n",
    "\n",
    "\n",
    "S[\"jpsi_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_jpsi_muon_pf_rel_iso_03_all\", \"JPsi Muon Pf Rel Iso 03 All; JPsi Muon Pf Rel Iso 03 All; Events\")\n",
    "S[\"jpsi_muon_pf_iso_id\"] = ROOT.THStack(\"s_jpsi_muon_pf_iso_id\", \"JPsi Muon Pf Iso Id - Muon Id Medium, Iso Id Tight; JPsi Muon Pf Iso Id; Events\")\n",
    "S[\"isolated_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_isolated_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For Isolated Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_jpsi_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For JPsi Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_mass_muons_in_range\"] = ROOT.THStack(\"s_jpsi_mass_muons_in_range\", \"JPsi Mass For JPsis In 90-120 GeV Range; JPsi Mass; Events\")\n",
    "S[\"pt_at_low_delta_r\"] = ROOT.THStack(\"s_pt_at_low_delta_r\", \"Isolated Muon and JPsi Pt at Delta R < 0.3; Isolated Muon Pt; JPsi Muon Pt; Events\")\n",
    "S[\"jpsi_mass_in_peak\"] = ROOT.THStack(\"jpsi_mass_in_peak\", \"J/Psi Mass Made from Muons In Peak; J/Psi Mass; Events\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_eta_for_jpsi_muons_in_peak\", \"Delta Eta For J/Psi Muons In Peak; Delta Eta; Events\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_phi_for_jpsi_muons_in_peak\", \"Delta Phi For J/Psi Muons In Peak; Delta Phi; Events\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_r_for_jpsi_muons_in_peak\", \"Delta R For J/Psi Muons In Peak; Delta R; Events\")\n",
    "S[\"jpsi_muons_charge_in_peak\"] = ROOT.THStack(\"jpsi_muons_charge_in_peak\", \"J/Psi Muons In Peak Charge; Charge; Events\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"] = ROOT.THStack(\"jpsi_pt_with_muon_in_peak\", \"J/Psi Pt With Muons In Peak; Pt; Events\")\n",
    "S[\"jpsi_muon_pts_in_peak\"] = ROOT.THStack(\"jpsi_muon_pts_in_peak\", \"J/Psi Muon Pts In Peak; Positive Muon Pts; Negative Muon Pts; Events\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"] = ROOT.THStack(\"jpsi_muon_isolation_in_peak\", \"J/Psi Pf Rel Iso 03 All Made From Muons In Peak; Pf Rel Iso 03 All; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"Delta Eta Between Isolated Muon And J/Psi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"Delta Phi Between Isolated Muon And J/Psi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_r_between_isolated_muon_and_jpsi_in_peak\", \"Delta R Between Isolated Muon And J/Psi; Delta R; Events\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_isolated_muon_pf_rel_iso_03_all\", \"Isolated Muon PfRelIso03_All; Isolated Muon PfRelIso03_All; Events\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "leading_isolated_muon_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_before_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_before_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_before_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_before_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_before_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jets ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons_initial ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsis TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsis TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsis WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsis ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "number_of_jpsis ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "leading_isolated_muon_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet1_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jet2_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "transverse_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "transverse_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "transverse_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "transverse_mass ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "transverse_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "ht TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "ht TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "ht WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "ht ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "ht ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "met ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_masses_zoomed TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_masses_zoomed TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_masses_zoomed WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_masses_zoomed ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_masses_zoomed ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_eta ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_phi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "delta_r_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_iso_id TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_iso_id TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_iso_id WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_iso_id ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pf_iso_id ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_muons_in_range TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_muons_in_range TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_muons_in_range WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_muons_in_range ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_muons_in_range ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "pt_at_low_delta_r TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "pt_at_low_delta_r TTTo2L2Nu <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "pt_at_low_delta_r WJetsToLNu <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "pt_at_low_delta_r ST_tW_top <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "pt_at_low_delta_r ST_tchannel_top <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "jpsi_mass_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_mass_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muons_charge_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt_with_muon_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt_with_muon_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt_with_muon_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt_with_muon_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_pt_with_muon_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_pts_in_peak TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "jpsi_muon_pts_in_peak TTTo2L2Nu <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "jpsi_muon_pts_in_peak WJetsToLNu <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "jpsi_muon_pts_in_peak ST_tW_top <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "jpsi_muon_pts_in_peak ST_tchannel_top <class cppyy.gbl.TH2D at 0x90d1700>\n",
      "jpsi_muon_isolation_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_isolation_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_isolation_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_isolation_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "jpsi_muon_isolation_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x8f323c0>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x8f323c0>\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxwAAAMECAIAAAC64LSpAAAABmJLR0QAAAAAAAD5Q7t/AAAgAElEQVR4nO3dXbKjPIImYJiuHVXdgztitlK5izLuXWTuZdr4vmtFEzHMhSpVJH+WbRmDeZ744ouTHAxC2OY9khBl13UFAACv+V+fLgAAwDcQqgAAMhCqAAAyEKoAADIQqgAAMhCqAAAyEKoAADIQqgAAMhCqAAAyEKoAADIQqgAAMhCqAAAyEKoAADIQqgDyaNv200UAPkmo2oemacoHfbrILOmfqZQrsTO7ceHUnE6nuq4/XZai+F2epmnGCxfUdf1iLqzrOv1d+ui72qeA7ROq4MM0b0xq27Zpml1Uztdc42+326dy4SD/je3inQB/+XQBSNI0zfibrmma2+1WFMX5fN7I38c84XK5LF9R7l5vvlJ4e18ul67rPl2WJOfzeS9n6nq9Dpa0bdu2bfg+ud1uTdO8cixVVT36kruZaS91y8GVe/nCYqxpmsvlUhTF9XoVqvZl0LaxfAYHKx/kM1vXdbjGb/x427Y9nU7Fxj6G4T0zyHnxjTRXpfErZWGdjB56Yx/zU8Du6P6Dz0vp2njir394yEdag+Ibe2Hv8QPiU8DG6f77fm3bxj+gwziVuq4H31/tb0VRhJXnvuAGWwuWXzJes67rwd/0/V3PbWFyhUHJE4u9XAl3DyeII37q35bXn3Q+ny+Xy0IPYFweW24WylP8PtKF8sydwcFL+ke3XBWJ9TY4g2H7cy/pp8zBC5ffKuPfTu53fFwLVbEgvvfiPydf+MSpCeWc7Pd/q6qqwtts8lhSDmSuEu7udOFPi7DfhUS1sNPlN0zipzjxUzN+1UNfKXyDjt06n8/hJF6v1+V1qqrquq7/lRRXGI+uiM7n89weB1uLxiWZ234o0mCd8R6DuK9Ht/xiJdwtz8DkypP6L5mruv6a5/O5X/mTBzg23mYoeaiKueOd3Npk8dLrLa45t/3+S5bfWgvlmayiuP7CcU3ucfJ03D38wdsv/dT062GhJhNNvjzl0GJVDEo4956fWy29kFVV9d8eC2ter9fJ7S/UVdzyuMKf+9Rk/N7jKwlVO/ZQqOp/g/Q/2IMP/OArY7DluJG42mDL46/Fhe2PizH3jTP+7eA7a1DsyQvbXFH7m6p+i0vG39TLNTZ3IuY2snzsk1lksM742Pv/nLzmDU7f4KT0f7VwaA+dgn5untt1LOpyqps8rsELx1XdP665fLDw/pw0eeFcSIfLp2ZQP+OtPWTy5XGzd184WGdQLQvv+edC1VyBg/6nIFeoeu5Ts/Aumtzp5MpPn1N2QajasfRQNfdlEX87+JzHL4WFP7sHL5nc1N2/eheWLB/m8tffoBjLlTD5tTi3fHL73Z9xc3wIY/2NpzRBza3WP7T+8v7X+mT5B/WwkJ/mTuLd+uwvHyTXyUMYLJ97S0zudLCpyfIMtt8/3ifCx/jQ5j5ciaemX57QeJOy9znPHddkme9+G0x+5NML2W8Bmvz4TDYU3T3YQeHn3u2TKxfzn5rBXiY/HXc/MnMVwhdwdnfs0VA1/u3kd2Uw+eX16Nbmtj/+plvoARyXZPnAxyVMKfZyX+fdI5os54JBeeYOp1+25cQw3sVklc6Fwm4+JHVTVZRyCuZaFlPW794QqgYrLxRpIeaOzYWqR09NXD9LS8bkpvqnuO98Pi/84bFQG+MT93SoWugB7BcpS6haODXLSXHygz93KhO/Uvgyzu6OPRSq5sbEBAsvTN/a+Htn4csr5eX95el/DY9L/mix59z9Tlz4cp9cs/gzVM11mc3tfSGJTu6lW6y6hZM1d9mYq7RHizpZqryhaiHZv3jxm7xsP3FqFur/CZN7L9LMtcKm7PfpUDVX5sGn4PVQlfdTM7n3ubccR2BKhaOYvEVl7u6Vtm3jdDXpWxuLX0Z1wuMvwnf34Aa3eL9M/8aZsM7cyJi45niPC8W+3W53C3n3EJ42eex3dxdXmDuuuSpa8NBL5va7UM8r38uWst/xr14v5DtOzQpCt+PgJrV4COPn3mTfe1EUg2+eu/f9PWq1U5PylcL3MaUCRfHnxATL9+0/utkwZV94/EVRFFVVzd2iX9d1+D7tz+Yclkx+zYXvrMnlDxXyer2Gst0tZNzy8kX3ia/ROOli/87tsGTQLzNpIdxkPJtRPMDL5TJ5sHGn4xvdPxWqPuXRU7NO2OoemTmzruvq9zwLYfqP8AFJn3giUdM04QPYF/b7jjD3vk9N+lcK30dL1dHVdR0eBHu5XG6323Ij0BO6P4d5hgePTD5IuD8NzGAjc19Gtynxt4nhpq7ruULOfe1O7vfFL+JQgHEz2ytfxAtVmkuWU3BAK5yajNq27Yf78AE5nU552676c3TF/Q5+9boVKvyJrxS+hpaqQ+s/+WHw12f/gRUvCt9ioSWsv83T6XT988ke5/M5ZLvwz/68l+PNnu898fCh769YyPhExaIobrdbWU48ymnyXvoXhb+P+208r2/zHdekvryn4FDmTk16jbXrPh4ntB/HJu34Ro2ty1n2EprE4ly42fv+irc134499JXC1xCqjit+rVdVtc5fb7EBPCa20+nU/36Jy8M3+N3+r+zXkjgGov9VGBfGTpB3XMMGPYDpfX/FVC9bXJ6ziL/197Wp2LTBVp8VTs14F++rh36XX3zH3n0ieLpBD+D7+v6KtT41/WFVMc8Za/XFdP8dV/xUT368s3zm41+34+XLf33GAV7F/GV7riGt/f34iJQShvA0/tae/Na7u82w36erLvYAJvb93e1Cevdf5HP7fegUZLROC0SKNU/Nuy/PC5/i2GSbqwz9xJalnXXhU/ymUzP3ldLf43beqGQnVDEty8c+DGt96As33ge30PcX228mtxxamNLLn17IWJLJb/m436evAeGFyw9BmyzPZL6MG0ls7npIyH9zRT2dTuvnuU396b/CqYm7GFf1cr/5o8IHZDyE/E1CncTWr/S+v8k3wLj+l09NrLpXTs3y0zyLrd77SRZC1XGNh4VG/bFWrxtHljgmY/zlEgsTVpj8aovrnE6nwZZjA3vid2KshPE1Y3xlqus6holBpcXhYq98XQ7ueUw5hLjO4JTFATfFe3pPYrVPnoL37TcaXBH7x7sRa56a/nb6A56yhKr4lh6XNh5IxlbJQVhMqaK5iD9XqoVTE99XT5+afmgblCdv2GWjPjhHFi96aPLPyd/Gt0FVVWFW5f7cwfGHuP2Urc3No10kPymvv87ccS1vee55GstVFLezXMgnjmhsbv2FY587isGBD8pz9wFBgyIlzhnd/Vlvd0/BwnzZc6WK2w9vzrnj7b9pFyb/HM/0ODcT+t3Spm/noVMzV86UXcddLGy/e2F+0fGJ7u9r8gkt6Zudm+93cjuT2x88BGnyLTH3QUg5NY9O/vnoVwrfxNndsddD1dxdbGGD/e+FlK1NfkUuNLfMFbt/NV04/LnCj191d0rouealuQJMrr9c2oH4qrmiLvwqvfwLl/m5IqWHqm7+FCysOd74XKkGG5+8cg9WmNzL3SK9L1TNFXVy5blyJu797va7F0LVwu2ugwJnCVUL3wBz25/8ngllm6uQLJ+abubEPfqVwtdwbyf/apQOLdVN0/QHcsab9V5sr+7vov7tlQ1G7W/175kgnt5ULGTKpuJ+i9xH9LTBCPfVyhPfJ6+fgoUtj/tb+/X/1q7G17371PQ/Be97K27wPT8Q6zn9LdF/SfYjGnylbLDGyE6oAgDIwEB1AIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADP7y6QIAwF6VZfnpIvBeXdelryxUAcDzHrrosi+PhmbdfwAAGQhVAAAZCFUAABkIVQAAGQhVAAAZCFUAABkIVQAAGQhVAAAZCFUAABkIVQAAGQhVAAAZCFUA8JK2beu6rut68HNRFE3TtG0bfggSNxifOpf+qr66ruf2+MTWwiE8+qu8su9oYYPx9D3KA5UB4CVt28bkFH6OWSpkrLhO+tW6qqqwfv///Q3eFcJTWPm///u/b7dbURSXy+VyudR1fb1ew17+8z//M7FI4aBCXPvHP/4RXv4f//Efk/udfFXTNP3aGFTa3GvDwlilKUcdtx/2OA6Xg9UG5UmpjUlCFQC8JMaXmHjCzzFDhCUPtX+ELRS/U9EToWqwnZCliqKoqqqu6//3//7ff/7nf9Z1nRKq4ha6rgsHe7vdbrfb//k//2dcnhgf4//jDzFX9fXD33g7g0yZUtR+oor/H28qVm8oQ8xeKdFtju4/AHhJ22uaihaiRso2Yxx5peGk+B3C/uu//ut8PveX/9d//dd///d/P7SpqqriNv/xj3/84x//CK1fA0/0nfVbpF7c1KPl6ffbvljVhZYqAHhRbGuJw5hiX1IUfvvQlbvfaRWv/ek5Y7z+IAOF1qbErYX14yFUVRUz1t1ixAOJTXeDo5irk8vlUvTa6tKL2t/1+FwseKWZqiiKsuu6V14PAIdVloe4jMbesRczx0OyNNS96NHzq6UKAFZ1N5osN0f1X/5//+//nVznf//v/52rMLFIC/kmbuT1DruFTeU98Hc4RMQGgHc4SEvVYT16fg1UBwDIQKgCAMhAqAIAyECoAgDIQKgCAMhAqAIAyOCBeariFPtZpo3/iPjQbwCAvKYnYGh7D3b+13q9OBIenb1K8TIzoQgAGbmsfLcM81Q1TXM6nfrPAxo0Td1ut/02VgEAvMNEqArPL6yqKianELCu12vXdSGy3W63nTZWAQC8w3BMVYhK/Q6+8VN4zufz5XIJ46tWKCIAbJbRukTToaqflmLMWq1MALAXxlR9sUcT8/0pFUJv4MKzqQEAGIaq0EYVglQx1ffXXwgAQDBxr2Bo7AoD1eOg9RikmqYJC/fY4OneVwAycln5bo+e34m127Y9nU79JdfrNbRUxc7FnU5V5d0PQEYuK98twzxVdV1fr9cwMr2qqpioovP5vMdEBQDwPseK2P6kACAjl5XvlmdG9bsNUSnrAAAcx/SM6ssTKLRtGyb/fFOZAGDv2rYt52XZRVmWXz8Ld13X47wRHk/cf0Jx4gsTX/u0f03+Od7xQmba9ZxVy29lrbgAZFRV1dMXzXDf2MKFqf9Aua9U13V4LF48zHgvXRj5fblcLpfL5C13/UcYR/377cJrxwPHX/GvUNU0TX/3t9ttcAPg2E5PpNgEwGpCo8ibNv7dXUaTwSiEk3gpDxmraZqYXNu2Df1p4w2GE9FPUWVZLsfWR92fUX3S+XzeaagCgI0ICaDo9Un1H7wbgkIcxNz/Ifwqvry/wbm+rbDBwV627HQ6TT4i73w+x59DFOkfzul0mkxURVHcbrdB215/U3l0I0VRVFU1Xv4FJo8XAJ6zcFm5Xq/hsr3w8qqqYm6IP1yv167r+tf7sJF+CAiX6cH1ehxB4q/6L+xvc7P6x9gv6vV6DfXTX3N8LKHyB2tWVTVYM1TLYLXBxh8r9nhRmJvqoa3shVAFQEZ3Q1W4kA/Ei2yIOP0rfT8nhS30fzVIUf1/DvJB3Pt4zbipZw54FeFYws9z+S+kq1CB49AyGarG7tbDo7X0l3Hb1S5aBQFg+2632+SI6X4nVL+rrqqqyfWjuWv05XLp923VdX0+n+c6wrqu2+y1PoyICqloQRz5/dx4pDjg/e6OHjIRqvq7XPitMVUAsOx8Pme8ZX5yjFFff1/9i3jIamVZhgjy1uHzLwpDqe4WL+TCOCb9oUoONxUWfw5az2I6VKVModG5jQ4ANiDkp8lWsTB0PYxSDxEkpJC8aS+XUKTBQPv+EPv+ynHQ/d35NfubCg1Ubzr8iVCVa1IyAGAFIW0sB4X+pAPhFrkNhqpg0GsZwmKMhiFgxd/GZqe7woFXVfW+rs/hlApxT4nDuwCALRhkhbquQytJmNs9/rau6zCQaIPDqpqmGYeNMFA9tEuFuUD7L0k/itBG9dajHrZUhZ19/SStALCCON3UQHorUX8+8QVhWHqcwirM6R1uowsvP51OYQhRLNJOL/SXyyV2BfYPM9G45jO22E2PqdppRQPApszd/Zd+IU/ssQobjEOmij+fkHO9Xk+nU/9ZKXnveltN13VhGvS4JPFBQLECx3dEZgxV5aAjL/Q4bnP82uvKcni8APC0FS4rk2O0F4T0MLl+uF1uy7f+Jep3Zb51R4+e34m1QxfsV4YPoQqAjFxWvtuj53fi2X/h9f1BbQAALJuIYKEx7e4NinvM5h//k6Isf/X/2XV//1RJAHjdxy8rvFW27r+79vg22si7vyx/iVMAX2AjlxXe5NHzO3H3307vCAAA+KCJULX3mwIAANY3MVAdAIBHLYWqMDdGWZZxlFV4HOMa5QIA2JXpEVhN0wymHI3zLBRF8daHEb7V3TH464w3NFAd4DsYqP7dMsxTFRNVVVXn87mqqvir8PPtdtvvfOueEg0AvMPslArxSTUhY8XVwnNsClMqvFQMLVUA32AjlxXe5NWWqtivN9cWVdd1aK/ab2MVAEB206HqfD4vvMacCwAAA9N3/+10HDoAwKcMQ1XKg//CMHbtVQAA0XSoKuYzUxxKJVQBAETTz/47nU63260syzifQshScfKq5UFXAABHM32vYJw3YdL1et1pM9VG7n01pQLAd1i4rNR1HcbSTK6w98m036Su6/A0l8Hy+ECXsEL61sbrP7SpDJN/hj11XXe9XuPkn1VVhblAu67baaICgPWNY5MgNalt2/GQ7rZty7KMHWWXy+Xuw1GCGGpf31S6ie6/foHkJwB4Rdu2g4upUDXQtm3btoPn4wWD+cZDT1rTNMuNTJP5LLzk0U09ZKKlqq5r5xsAXldV1TgrXC6X/iPgohC/5rqlQr/Y+LchkfRX2N1F/HQ6TSaqoD+MO8TTuwd4Op3GNXy73foLEzf1mIXn34XOvm8yebzrK4qfny4CABksXFbC9ft6vYb/x+VxSVEUVVUN1p+8QIeVi99P4B38NozPGazQ3+NejOsqLBwsuZtPQiWM15zcVP8UjD0aGyZaquIpCd2Ne8y8ALAF4+aQOEq6v1rTNLfbLV7yQ7yI68R+q7Zt42/72wxtMHGF4oseJRdHIoUGufDzwtikUJPd1OjyyU1lrqi5tDWeNOELGq4WjndNWqoAvsPCZSW2l8Qf4ktCACp6zSTFqMkkXIXDz8utNYPtTy7ZhcmWqigljYQtxBXmVk4PNo9W4/Tdf0VRNE0T1ojpKjZcfU3+BYB3CxfN0LAUBz/NrRn1G6LiSKm2bZumyX7P2i50vycluFwucxUYhlLdTSn9TWW+IS8xfIXdP/HCTVm/2JONUuOF2q4A9mjhstJvLip+N0T125/iwjhkaiw02/RXCNMbFcdrqYrmji5WSxSra26bdyvq0WpcmlKhL/ZELozPBwDGQqNIMXPfX7i8ns/n5QaYftvVQa7FoWVuMB3oeAKqvkHN3G63uPKjm3rCbPdfX2hs7E+ZNXkvKJPK8tfgv6L4MVoCwNfqj4meS06De8Lqug7dfOMew+PcPRZCz+B45w4/DlvqtzOF9ryQpdI39byFVqzxWPWqqvZ4l2a0fLzv2aPuP4CvtXBZGY9PH1x2i97g9EGP3uCf/TVjV+BBuv/CwcaFg5oZjEwfGPwqTnIxuam5LTx0CLO9kgNfcOtfJ1QBkFV6qIpDfPqv7f9zcPFd+NUgV313qOpGkyP0a2Y83dfghYP0srCpuS08dAgTTwrs31aw0MW7R3fvmBjXxnuK4YHKAN/g0Qfu3jU5i1XR66iKvxo//eaLjQ9/nU09en6nQ9X5fP7KB/9lf/c/WwyhCuAbbOSywps8en4n7v7z/gAAeFTS3X8DeR/pDADwBf5X27ZhuoTBL0Jn7WR4ulwuB5khAwAg0dLkn3lnxAIA+GLPdP8BADAgVAEAZCBUAQBkIFQBAGQgVAEAZCBUAQBkIFQBAGSwNE9Vdm3bLkzFHp9x2F8SFEUxNxPpo2sCALxDeb1eT6dTURRVVfV/EWf+HCyPv3riEYFN0yxMxT7Y4OTK1+t1/Jjnuq7H85ROFm8jT770QGWA77CRywpv8vwDlefmT88+r3pVVeNgNBATVVVVTdO0bRv+eTqdxtkrlHCwpjc6ALCmsuu6uxFn0ri37q7QpHQ+n+92z4VnEQ7WfHFhsZmkpaUK4Dts5LLCmzx6fld9N4SsM9mF1xebqeY6BOPy5TWrqhokv428+4UqgO+QeFmJQ37fXR7yejQ2fODuv7vvqvDmG4/lGrdvza0ZduGB0AB8UNu2ZVmWZXk6nU6nU/j5oX6epmlCe8TCxgee6EfajrquJ8vfNE1d1yk3oo0rZO4l77it7TNTKizXTghDC9kr1nhYc7yR+Npdv7cA2LVwH9j1eu26ruu68/kcFwYLmSlRVVXX6/V6vZ7P57j9nd4C37btZGtIXdeXy+V2u91ut8vlkqXBb/IWt9etF6pivinLsl87Cyny7qYAYJvCpa0/cLlpmuv1Wky1Bbyyl9hI0TRN6KtauNF+m8KMS/242f9VGI0dg+ntdpuLAWF5TLHBZDfXm/qyPhCqiqI4n88hVoeeu8ngORlFxz196TvdgrL8VZa/+j8A8JUmL0B1XccLWZxeMdy6HtcJOenp4BVy2+Aa2rbtuINocvLIQWHWcTqd5oJgSFqxnOGHucpJHLt2Op0ejROpurWEZsnxHuPyGC0H/+wLtRAT68IhhF/FNfsLN15RAOzFwtUhXLCqqppbIV7+4tUq5KG+sJHJl4eVJ6+Vg8vWOED0C9DfQtjm4NK5mskjGtfhQp3EX4Uu0eV1Uo700av/ei1VoVmyGyWbmDefjsYPvfCh2hnULAAkCtem2+1WluVky1PTNCHWdL+7qMZjsJ7rpeqnqDCbY9xmvx1r3OoTW86e2On7PDqIqn9nwOC1oTbed03fxLP/wukfZKPJqPTo28v9qwB8SghGVVXFMcQLw4jDVe98PvfHYL1ehjDBUNxmXdf9rBbKNlj59Z2+1cKVPRzLYABW/961y+XSbyDMbtVn/80Jg/DnzvHk+msUCwBe0++NCc0kYfDQ3CRBgwvc3Qvio8Uo/myzCNffMOJqm81UDxlMhBnGh8UKDEOp3nqA64WqheFjk9NNLXTqxY2Ed9t4VF38p/gFwEeEpBL/GVNLuAV+YfKk13cdY0Tsghwns1C8MFd2uIyGIm3/upkSD/pLQmqMIWQ8VD8M4c9StvW6/0IHZ8rEVGGd8Ttgbj6qyffKa4UFgJfMXfLmup/CFe3161fsRozbnByOPWieKIoizFzw4t7f4fU6iQd76SmKIjQc5swMTw/cftTdu//6C8OSwYD/sHDyhr6Uhd3jw/gBYMHCZWXuItu/eS0OVI8vmbzwTW5/7u6/wUvG2xzcPRfv+Pv4JXLyiMb3+k1e37uZWxcXbhWc285gnbvF/mP9h9Z+UUxyVVXFuV+DQSXG20rDXLH9NQfbjL+6u2YnVAGQ1cJlJV7I+nfeDSYGGkxqMPhtHBWzsP14PY1TPw6yQtjFYI9z8w09dOzZTYaqeJjhn3OJsP/bwRT2c8lp96Gqm7mJcXIyiclGyMltjtecmxfk4+8YAL7J8mVl8kLWv5D3WxDCksHw4oUGpPGkVsXv9oXlYowvkYMw9ylzbW+DIx1PrNU/ooXaHkg55Edjw2OPX84ijhcriuLu6LDYIZ1lzUcfNw0AC1IuK4O77cYrDMZKv+leq8TZxjcrvfwhZmQZfv5obDhWyBCqAMjIZeW7PXp+NzH5JwDA3glVAAAZCFUAABkIVQAAGQhVAAAZCFUAABms90BlAPg+ZVl+ughshVAFAE8ySdWyo83jpfsPACADoQoAIIPDdf8td34fqpUSAMjocKFKbAIA3kH3HwBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGf/l0AdZWluXCb7uuW60kAMA3OVyoEpsAgHfQ/QcAkIFQBQCQgVAFAJCBUAUAkIFQBQCQgVAFAJCBUAUAkIFQBQCQgVAFAJCBUAUAkIFQBQCQgVAFAJCBUAUAkIFQBQCQgVAFAJCBUAUAkIFQBQCQgVAFAJCBUAUAkMFfPl2AtZVlufDbrutWKwkA8E0OF6q2H5vK8lf/n13390+VBABIV24/ZGRUlrs53rL8JU4BsGs7uuxmYUwVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkLVJpTlr4yrAQDr+8unC7C2siwXftt13WolAQC+yeFC1WZj06gV6sdi/AMAtuVwoWqzuu7v/X+W5XBJofsPADbMmCoAgAyEqk0YN0q9shoAsD6hCgAgA6EKACADoQoAIAOhCgAgA6EKACADoQoAIAOhCgAggw+HqqZp6rpu23byt23bhhXqum6aZmE76WsCALxD+cFn4bVtezqdiqI4n8/jJNQ0zeVyGSy8Xq91XQ8W1nV9u90GCyePqyw/ebwPKctfpvoEYNd2dNnN4pMtVSFRTYqJqqqq6/V6Pp/nXtI0TUhUgzVLjyMGAFb0sVA1bnDqC4nqfD63bRt69GLUHbRppa8JAPA+nwlVbduOO+yiGIYGqSi0QvX7BJfXnBuqBQCQ3WdCVejFm+tnDWGoqqrB8nHL09yaoRlsIbcBAOT1gVAVEk8c/DQWwtBC/2BsggprjsNWfK3GKgBgHWuHqjCuvKqqVwY8iUoAwNasGqratg0jolJS0WRL1bin7+4eH1ofAOA5f1lzZ2Eo1fV6zbvZ5RsJB56eauFQM20AAI9ar6UqDqV6KAOleKg5qntW3jIDAF9mpZaqOA1b5CYAACAASURBVIfC3ENpwsJ+3grzTg1We/SGvuwBbgVl+av/g3nVAWAXVu3+K2ZmUb9cLmGsVWgQqqpqOTztMSqlk6IAYI/WC1WTY8xjeBr/dqFTL4aqEL+aphmsHP/53fELANiOlULVXK9fGDY+eKBy0zSn02ncWDU5H9Xtdhuv6aY/AGBln3yg8pzYvDRoZ4qP+YtL5h5TM14TAOCtthiqit/TLtxut9DE1TRNnAph7oGAd9cEAHif8rOTBUx2/wVN0/SfnRxMlna8ZlVVc72NJkcAgHUc7bK79aONYauu6+VR5ylrHu3sAsAHHe2ye7CjPdjZBYAPOtpld6NjqgAA9kWoAgDIYO0Z1Zn2z+THPP/1QO2oALAjWqoAADIQqgAAMhCqAAAyEKoAADIQqgAAMjjWrFzbnYUs+ea/YpPFB4Cx7V5230NLFQBABkIVAEAGh5v8syyXetoO1UoJAGR0uFAlNgEA76D7DwAgA6EKACADoQoAIAOhCgAgA6EKACADoQoAIAOhCgAgA6EKACADoQoAIAOhCgAgA6EKACADoQoAIAOhCgAgA6EKACADoQoAIAOhCgAgA6EKACCDv3y6ADypLH/1/9l1f/9USQCAoijKrus+XYb1lOVWj7dMXvPP4pflL3EKgG3a7mX3PQ7XUlWWS/nlUOceAMjocKFKbAIA3sFAdQCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhKo9KYtfSauVSasBABkJVQAAGfzl0wXgMaNWqB9l+ZmSAAB9QtXOdN3f+/8sy+GSQvcfAHyC7j8AgAyEqj3pimGj1PRqo7YrAODdDtf9Vy4OQeq6brWSAADf5HChSmwCAN5B9x8AQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABmXXdZ8uw3rKcqvHWyav+bv4Zfnrj8Xd33OWBwBett3L7nsc7Gg3e3YfD1UAsHHbvey+h+4/AIAMhCoAgAyEKgCADP7y6QKsrSyXhi8dqusXAMjocKFKbAIA3kH3HwBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGQhUAQAZCFQBABkIVAEAGH3j2X/tbURR1XTdNs+aaAADvUK78gOGyLMcLz+fzOAY1TXO5XAYLr9drXdeDhXVd3263wcLJ4yrLtY831UStzNhk8QFgbLuX3fdYtfsvJqrz+Xy9Xq/Xa1VVRVFcLpfQyBTFRFVV1fV6PZ/PYfnpdBpss2makKgGa06mNwCAN1kvQsacNNhjbGfqLw+RaNCC9eLCYsuRWUsVAF9nu5fd91ivpSq0RYWmqb7Jjr/JX4VWqH6f4PKag9YvAID3Wfvuv/GIqLH0+DW3ZtjLeKAVAMCbrHf331y70Xh5CEML8att235sGoet+Nq4JgDAW31ynqq2beNAqzjAPPGF7yoTAMBTPjBPVTGaLmFuooTxC6uqeqhTT0sVALCOz4SqgdPp9MrdAQ/FpqenWjjU/QsAwKM+0/3XNE3XdV3XxamqXplW6qHewO5ZTxcPADiCDz/7r67rGIkG480no9KjN/Tp+wMA1rGJByqHxqqYosZTJAyISgDA1qwXqsqyXO7jG0SlhU69uGaIX3PzV423CQDwJmu3VKV06oWQNO7pm5uParymORcAgJWtF6pCq9LkE5EHP8TmpUE703hGq7nH1Dwx9xUAwCtWfdJh7P6LcSfOVjV4+HHbtiF+VVXVNE3btnHNQYHjlFd31yy2/GRHD1QG4Ots97L7HqsebYxKA4NEFQwmCA0mSztes6qqyR7A7Z5doQqAr7Pdy+57fOBo27btDyRfHkve7xN8fc3tnl2hCoCvs93L7nsc7Gg3e3aFKgC+znYvu++xiXmqAAD2TqgCAMhAqAIAyECoAgDIQKgCAMhAqAIAyECoAgDIQKgCAMhAqAIAyECoAgDIQKgCAMjgL58uwNrKcukxe4d6RBEAkNHhQpXYBAC8g+4/AIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADA73QOWjKctf/X923d8/VRIA+G5l13WfLsN6ynKrx1smr/lU8cvylzgFwMq2e9l9D91/AAAZCFUAABkIVQAAGQhVAAAZCFUAABkcbkqFsly60e5QNykAABkdLlSJTQDAO+j+AwDIQKgCAMhAqAIAyOBwY6qY5BGBAPAioWoT3vzov4TNdn8vPCIQAF6g+w8AIAOh6gsN+vKeXgcASCdUAQBkYEzVdxo1RP1YnEkeAHiVUPWdBuPNy3K8RPcfAOSk+w8AIAOh6gulTItg6gQAyEuoAgDIQKgCAMhAqAIAyECoAgDIQKgCAMhAqAIAyECoOqjEyT/NEQoAiYQqAIAMDveYmnLxGXhd161Wko+baoXyiEAAeNLhQtWhYtOy8aTqHhEIAE/T/QcAkIFQdVCJz/7ziEAASCRUAQBkcLgxVUcTB0WFH7Q8AcCbCFVfTooCgHXo/gMAyECoAgDIQKgCAMhAqAIAyECoAgDIwN1/pBo8ssZ9hQDQJ1TtzT/Tnnj81/yPOAwpqix/iVMAMKb7DwAgA6EKACAD3X8UhafZAMDLhCqKQooCgJfp/gMAyEBL1d78Le22vvw3/wEAS7RUAQBkcLiWqrJcmuep67TwAADPOFyoEpsAgHfQ/QcAkIFQBQCQgVAFAJCBUMWSONN6ltUA4IsJVQAAGRzu7r+1/XNpBoee7d6TOGqF+rE4KwUAHJRQxR2DxwKW5cSDAnX/AYDuPwCADIQqlowbpV5ZDQC+mFAFAJCBUAUAkMEHBqq3vxVFUf+WsmbTNInbXFhzZeXftntbHwCQUbnyA4brur7dboOFVVWFPNTXNM3lchksvF6v4wQ2uc3J4yrLtY83++wDqaV/21GW5S8jqABIsf5l97NW7f6L6ed8Pl+v1+v1ej6fi6K43W6DqBQTVVVVcbWiKE6n02CbTdOEbQ7WLE2mBACsqVvL9XoNe7xer3eXhyXn87m/5osLw/JXD+NBRZH5vy7xvzce0c83bh2AL7L+Zfez1mupih18g0apuq6rqiqKIg6EGv8QhFaofp/g8prjLkUAgDdZO1SF/DQwiFlza46Hn8+tGTY4HmgFAPAm64WqpmnO5/PkfXmDJqUQhuZuCeyvH9YcbzO+VmMVALCO9aZUmJs6oW3buWw0p23bhcgFALC+D0/+2bZtuKGvqqrxWKvx+pO9h8vbf7psAADpPjD5Z9SfX+qV9PNQq9XTUy10R5ppY1JZ/ur/YLYqAOj7TKjqT+w5N9Aq3UO9gbLR0xJTVMxeD70KAPbuA6EqthVNTqQeTUalR2/oM/RqfSFFmXgdgKNZe0xVTFTX63UuUd0dOCUqAQBbs2qoComqqqqu6+4Go4VGrPjawayh49eKXwDAOladpyr8cHdMelhz3NM3Nx/VeE03/QEAK1vv8dGhmep8Ps+1HvWXxzatfjyKW+inq/SFxScel539sc6ppf/0cHxjqgBY/7L7WWuHqgX9CNWfv6ppmrZt492CgwLHGwnvrlkIVSsSqgAQqt62p0dCVfHntAvRZGnHa87dVyhUrUaoAkCo2pbYfzf3lJuH1hSqViNUASBUfTOhajVCFQBHC1UffvYfAMB3EKoAADIQqgAAMhCqyGDwEOWn1wGA/frAA5VhPf9Mu1PgrwcaRwnAmwhV5DFqiPqR/c5HANgyoYo8BhMolOV4ie4/AL6ZMVUAABkIVWSQMs+nuUAB+G5CFQBABocbU7X8XOdDzaYPAGR0uFAlNgEA73C4ULW2LnlegVLaA4AdM6YKACADoQoAIAOhCgAgA2Oq+Gp/SxupZjwbAC/TUgUAkIFQBQCQgVAFAJBBeajJMMty7eMti8zzVKWW/nNntSx/9f/54Uf+JVb/gT4EAOtZ/7L7WQc7WqHqaIQqgM85WqjS/QcAkIEpFVj0z+SWtr8e6G8RABjTUgUAkIFQBQCQge6/zejSOtrSxrMDACvTUgUAkIFQBQCQgVAFAJCBUAUAkIFQBQCQweHu/ivLpZvsDjWbPgCQ0eFCldgEALzD4ULV3pVp01l1HhEMAOsypgoAIAMtVWRQ/i2pYUzXKwBfTKjiM8ryV/+fXff3T5UEALIQqviMkKLK8pc4BcB3MKYKACADoQoAIAPdfyxJHIEOAGipAgDIQKgCAMhAqAIAyECoAgDIQKgCAMhAqAIAyECoYjW/7q8yenwNAOyFUAUAkIHJP79TWZR31+mKtSf2nGqF+lHeLykA7IBQxXrGz04uy+FC3X8A7JRQ9V5dcjNM6XkwALBnhwtV5WJvU9eJNu8zbKaaNG7NAoBdOFyoEpsAgHc4XKji+wyGYWnrAuAjhCp2L6SosvwlTgHwQeapAgDIQEsV/EFnIgDPEaqOK2WC0KI73GQPOhMBeI7uPwCADIQqAIAMhCoAgAyMqeIz4njw8IMBTADsnVC1FYlPCfyaUeNSFABfRvcfuzSY+GB2tSJpNQB4nZaqnTlagxYA7IVQxV6NGqt+lGmJEwDeQagih8QGtCJnA9pgVFZZTozTSuklLItfXXF/gJfpQAFYJlSxaR4aA8BeCFVs2txDYxLTVUoTVDHdoKUzEYDHCFUw2W847l50IyEAS0ypAACQgZYq7kkdhL5XiV2EhnMBsExLFQBABodrqSoXhx93nUkzAYBnHC5UiU0AwDscLlRxWIPnACYOpQKAREIVK/rn/THv5d9+pgwJf2J+85CiEudPB4BHCVVsz0T2+jla+HOlwgBAGqGKzSn/Ng5MP6YW/l7/97Sc4QdzHwDwEUIVm9P9z4/BkvJvPwcL+xlLigJgC4Qq+IN2LwCeI1SxLeNmqvnV3hJ3pCgAnmNGdQCADISq79SV9/87grIrB//NLQSAFwlVfLUyYeaFlHUA4B6hCgAgg08OVK/ruq7rpmnmVmh/CytnWZPDGTZE/dA0BcA7lJ96wHDbtqfTqaqqkITGmqa5XC6Dhdfrta7rwcK6rm+322Dh5HGV5erHW253vE65+pnv/vnkC8fzVBVFUfz1/gGU5a+i+/OF5c/xEnf8AbzDBy67H/WxlqrT6bTw25ioqqpqmqZt2/DP0+k0OD1N04RENVjzaCfyCYnjszNmr/KvOV/r7AKwKWsnj9BJF5ug5lqqyrIsiuJ8Pvc78l5cWGipesr6DVoTxs1LRdElxKqyGNX/s5t6nzjdaKDZDPgaR2vgWHWgetM0p9Np3Kk3Xm3wQ3A+n4ui6L98ec25jkX2pPz5ryFQ8Yev03V/D0Eq/sCTyuT/AN5g1e6//nCotm3HA6Hir4qiqKpqsHw8ympuzbquL5fL3PbZk1GrEgBs09qhKuaqOBZqLCwfD0iP2rYNvw1rju/1i6+Na8L69OsBHMou56nSr8cu6NcDOJTthqrJFqZxT98y8QsAWMcnJ//M5aEOvvLZ2/EOdf/Co9afnQEAtuYbQtVDA6dkI7JYf7yUEVrfL/0vPl9jsEnbDVWTUenRG/qMUuff4owM4YfX7isMmaYsf60WbtbfIwAP2WKoqqpqOTyJSjxjS7MzpGQj+QlgX7Y7UH1hjHkMVWHc+nhKhfha8QsAWMcWW6rCxOvjxqrJ+ahut9t4TTf98SnpzUuDMVJF8WP/zzQCOLQthqrYvFTXdT8ehenUwyNogjjHetM0/cg1XpPvM/Fcv10ZZK+yHC8ZpK77DGYH+KAthqqiKK7Xa2isquu6aZr+M5jHj/m7XC6Xy6Vt2+U1YR0fbIJKHMwuewG8w0ZDVV3XIS3dbrfT6RSXjydECMlpsGZVVXoAc0mcg4robhNUkdYK9b6s40ZCgHcoNz5vU2xt6j838Ok1y3L14zVMpmezk392CdP+TEaQ8cKUJR954dgXhqq9z/O09/LDyAcuux+10ZaqKL0LT2cfO/JtaQaA7Ycq2I6pPrv3jpdaf48APE2o4pulDghLbJweTx9a/hwujPO25zDV/ZfhJkEA3mG7k38CAOyIUAVpEp9yk+9hOHnHXWnQAng3oQo+rCx/hcQTf/hsYT5bAID9MqYKPuz1FilPvAHYAqGKbUmfazTjrFdveuJNzDrhh3dP5tnb7/R0o7IXwFsJVfAuW5uMKtdU7wBMMqYK9m1r0Q3gsLRUwQckdjimPD8nUWL2EtEAnna4UFUujiI51COK1ufZzAB8scOFKrGJPOLM6eGHfNNTze5wrWHvADzncKEK8nh/ihruUIoC2DYD1QEAMhCqAAAy0P3HXhn2PmbcFcAHlYcauF2Wqx+vKav3IOPk7EXaPAjrT6nwx97/nOHze7JX+qdtm197ey8/jHzgsvtRBztaoYopeUNVRm8KVV9r76Fk7+WHkaOFKt1/cAjpzzeMSe5rG7QA3uNYEVJLFZOO0FL1RKj61wvLX7uJU3tv6dl7+WHkaC1V7v4DAMhA9x/wdnoSgSMQqiBJ+gwOm+1M/KCQovbUkwjwOKEKeNA/kwPmXwVM4ECMqYLtKosy5b+su/x5f5W/3V8H4ICEKgCADHT/gSfe/GEwqLwofpgYBCCFUAUfkBjjPjLmfTCWvCzHSwapa1r5t58p09MYvQ58Dd1/AAAZaKkCerofRXGn3aj7nx+JG3u0JzFxOiuzXgHbJFTB7mW+ATCfuz2JxZ8JKXE6K7NeAdskVAEvGcywkN6OBfBlDheqysXuh0M99xGyCCmq/NvPQZzq/ud+T2Kh8w74IocLVWITAPAOhwtVwLLRCK2fwyV/nXnhaLm/YIBDMaUCMKP8+a+n1sQf3rGTxFmvElYri6RNAbyJlirIbJvzs6eX6t8zjnaGnAM8QKgCHlT+TMpb5c/E/r/E6aw8PwfYOKEKeLuYh8IPgzv+EqezyvX8HIA3EaqAx00MsfqxMO5qs/MmmJwdyEioAh437v4b9wmmjW1PzDEpq3UJ02JNbtbk7EAWQhVsV+Lo8tLUBQAbYEoF4EGJdwV2P8qiTPnvzcUFWImWKuA7DaateqJzEOAhQhXwnUKKKotf4hSwDqEK2IrlmRceXW12L2kxy+h14FFCFezeynO4T+6unFqeOIL+38OqusHyPwZvdb9/LesA2yRUAX94NKKVxc/+D12xg4fbmJwdeAehCnjJdlJU+vCpxDncs5UMOAZTKgAAZKClCvgeg2kUiqIoih/P9ewZuQU8SqgCvse4+68cLSyLX6MZR39OzkHaFeaqBx6g+w8AIIPDtVSVizf5dJ0/TGGj7j/QphvOwlAURVH+LFeec+KewRB4/YzwNQ4XqsQmWM0OHghd/vzjh8THGr4mpCiTi8L3OVyoAvi3rClKExQcnFAFMO1+h+NAaHIrf4as1u+LfHTMu6dBwx4JVcCXyti1FzcVvL+XcLNPg9YaBwuEKuDD3jX0KmP0CZv63QT1sPJnSkPVBiPUmAFhsECoAo4l/V7A+zHu6Zg1u8c/Czdz6+LdzsRhx+V8S5u5uCAjoQrg7aaeJPjsU5zLn8X/3HvlX//854stbR+lw5EdEaoAJpTFzyLlWdGDRqCiKIofEwvHaWYccSY2tQmJnX1v6hPU4ciOCFUAL8ibloZrTuWz/up/++O33f/sryEKvolQBezDB+ZFfzDiZDBOY5OhLa7+Pz+Koij/9nMYpxJ7+tJG0BcT3ZfP9l3CVxOqAGbcjTiJGWuHI5kGBl1vZTkxtmlq3NiTPtvhCE8TqgCmDW/FS1gyuzClQShv9koc7PXPlBanjQ72gq0RqgAmdAmj1FPWmfDyrKTlX+8vyTjYq/ufH0XCBFr9RqPXb9nT4cgeCVUAeZS/W3TCD7OR6/UWqYTBXilNaO9LKa/fsrdyhyNkIVQB5LHQcPXoKPuYz0Ja6m+5LLIN9nqypS0fc1DxZYQqgDtSm6Dy+XjcmRNjUPjhxRg016CVuNn3hTBpj+cIVQB3bCridMWPu81e6QX+92CsxYdGx3H2C/GiLH+NejZ/jh+YkzGgDDc+79Gn8ZhxlOcIVQBfLqmlbUuPsvmmNKPR61CEKoAv93pLW1qb0M93TJeat8NxaS8TaTJDS1tio5fs9R2EKoCdicPeF8azp3jg+YaJzVcJI+gTny397zTTDZZ/viHtrqkMOspnf3ZK6nD8DkIVwF5tarBXqs0+WzpxutTETd2NocnPCGJHDheqysX547rOexw4kowddqsPxnpgoornZrTfQNrTdrUvhwtVYhNANGjrKouf49avMuNjap7rRtyj9Z/GzQYcLlQB8A79dqOlyUu3+YftA2kvbQ6te2m1LFKHl72JofHvIFQBHFTikKyu+PHoE21SB3u9/BjERHfvXpzsSZx8NnbOgVCPdzhmTEJ5h8aLaIFQBcB6/owpgwCxakkWvDiH/vtuIJhLQqnzoCZMCfFczHL3YiBUAfCBR/HkNRj4NVv+xYnj77+8v6XX2mZSZsZ/wOqztibnp2ONJBOqANhfiir+HKgUfpgfaP974czE8ZMvnNxjMZhA6/em/pxA699bW0irKaPQnglei8FxNJBrvVFcRyBUAfDlBkOjxoOl3pcrHhi4NiNxPHvviP7Ml39Et2GLWlmOl4x391LBDkWoAmCvRtM9/JicACJxtbRdrj1XwriX7ZUklNFmC/ZBQhUAe5U4z1bKBAd595i4tYxyBceDjzR/kVAFABvVFT+mHnc4fpLg/eAYFv77hb8b2P7VmPToOPeuSJuyK3Vmr+8gVAGwS68PV3rHptJXS/Su8exZ7xaM3Xzhh8M2d5Xf8diW9reiKOq6bppmcrWyTDrenKsdfMwewCoSp1RInXkh3x4/Ze5+xvVntO+O9ODobwhVTdNcLpfBwuv1Wtf1YKFQBcB3Wy3tJeWz8liP3N19qGrb9nQ6FUVRVVXTNG3bxoA1PjShCgAWDJq45iJa4sxeRVEUO48ZD9l9qCrLsiiKqqpC39/CwkKoAoBFT99BObM1LVX7EZupBkcxt1yoAoAFMxMx/Bg/cEaoGtv33X+DhqgojqZq23Y8sgoAmJPYUrViiXbjf326AC8Joep8Pi+vAAA8oSx+hvwUf2DBvluqbrfb3K+qqlr4LQAwNmiRmuvj29oUEhux75aqu7RUAQDr2HdLVZA+aqorkkaO513NSHUAOIJvCFUPjEb/xD0IB7rtAQAObN/df1VVLa/g1j8AYB37DlULjFIHANa071AVGqLGD/4brAAA8G7fEKrG4k1/QhUAsI4vCVWD8BSeUbMwKSgAQF77fvZf0XvMX1VVTdO0bRt7A/d+aADAjuw+VBW9XNV3vV77TwAMiqKo67ppmlXL94K2bRdKu9mpTeu6Xq7njZ+RhfJv+YwMajVIWXMj9Z9S/s3Wf3qV7qLyd/fm7wt/XTdNM/n+32b9R3OF32blP1qqjVd+Ht23OP92vV4Hy8dHPVhns5Z7MD9dumnX67Uoiqqq5lbY+BlZLv9mz8jk9CKTR7HN+k8s/zbrf7Iw5/N5vOY2Kz+x/Nus/IHw+d1X/UcLhd9m5T9Uqo1Xfi7fMPlnMPenVegNHHQOnk6nbj9NdFVV7WjE/bjVsK9pmo2fkeXyh7+xtnZG6roOc4icz+dQsFCxt9utruv+34vbrP/08m+w/svfj1WIhW+a5na7XS6XQWPbNis/vfwbrPyxhc/vNuu/b6HwW678lFJtv/Kz+WSie79wjIO/dycXblP4833yT66tuV6v/T9E5qo3/HZwRJMLV/ZQ+Tf111X863ZQqsnlG6z/J8q/nfqP75nB8tjw1l+4wcp/ovzbqfyxfnvnuEo3WP99KYXfWuWnX6E2XvkZfXOoil/Kics3aJsfpLFxu+5yx1Pi8tUklr/7fUbWLd0dC7UXvvLisWyz/tPL322v/sclDMZfMtus/PTyd9ur/IFY5slL9TbrP1oufLfVyk+8Qm288vPa95QKy+bG7vUHsK9VlpdssL13oK7rOKZt4dlBsQV7sPzjwxUTy79Nc7VajN4526z/9PJvVko5t1n5wV7qeVnoO+tm+pK2XP/FvcJv3N33z8YrP6/vGVM1Fk7kwki6Nv1JzJ8WOqGLrd4x0R97EQZkTK4Wli/U+afOSGL5B4OTNnJGQknmbnTq/3Ob9Z9e/g3W/9wfZuPl26z89PJvsPL7QtUtfNtvs/6Du4XfeOUX90q15crP79NNZW8UDnCyv3YXY5UGDcJ9Wy55+GqY7D5bKPx2jmuh/Ps6I+MxSbuo/2hc/l3Uf39wXr9Ue6n8ufJvufIHn9nJUm22/lMKv83KTy/VZiv/Hb65+++ujXf/9Yt3Pp/Dl12Ig+HGnE8V7EWTJd9Fp9vkGQn/vFwu2/mrsfhzUtxBhe+i/ifLv/H6b5qmLMvT6RRua7per+Mibbnyl8u/2cqP95GlfJ9vrf4TC7/Nyn/0CrW1yn+T7w9V+w0fUdd1YS640MQaPk63223jofBbhb8p4xnpfjd8LjzYe2V1Xcd7s/f4Jlku//brP1iem2P7Jsu/wcoP5VxoNdmyhwq/wcoPXKH6vj9U7fe8ho9NNxq6GP8u2e+h7VQ4IwvDTTbSWBLnfBq/eTZuufwbr//4gb1er+FqF6eA2oXl8m+z8uNopD3+8Zxe+G1WvivUpG8OVXfbFff4OQzCoe30LTtZ7Lmx4XuxhTNSlmWcXi/87Ti52mbrP7H8k7ZQ/1F/wtLBUWy28vsWyj/pU5Xftm0cAd329FdYuNch+kj9P1H4SZt650eTpdpO5b/VN4eqBXs/kSEO7u4ovjjmfrzksVHher3OfcNuuf5Tyr/g4/U/NriubLnyJ6VfrT9e8tOfwsLL5dL/52brP6XwCz5e+ZMGV6jNVv47fPOUCnVdh4ctzP2xtfETGe9QnfvVdBtdyQAAA3VJREFUTof4LXxN7/2MfKr8IZFUVZVyCdxg/SeWf4P1H0q+0M06KNLWKj+9/Bus/GLmO3DhWr6p+k8v/DYr/9Er1KYq/43ec1PhJux9RvVQyN3dhpoyJcHkSzZyRu5OCTE5ffDCr94tvfa2Wf/pe99g/d8tUvyQbrPy08u/wcqfM/n1uM36H5ss/DYrP/0KtZfKz+KrDmYsnLDJZ/9tM5H07XRq/4VQ0u3hjCyUf/KBaAvL1xFr7zpjvPKm6j+9/Bus/7ldT35IN1j56eXfYOXPmavSDdb/2GR5tln5D12hdlH5WWzok/AOMSBXVXX984m5ny5akljaqqrCQ1Tiku38XTiwHKq2f0ZSQmH4ItjIGSnu6R/LBuv/ofJvuf7HRZprLNlO5XePlH+DlT9psvDdVut/YK7w26z8/od0uVS7qPwsvu14xianANnUV8CyceE3Xv7lUNL1/o7pW7GAdySGwu2ckcny9A2OZWv1/1D5N1j/c0Wa/Pt7a5XfPVL+DVb+pH3V/8DuKj+9VNuv/CzKbm8z2TwnjlWv63p3Y+L699busfyTnJHPUv95PVSkDVZ+evk3WPmP2mD9J9pm5e/9zZ/XUUIVAMBbHXSeKgCAvIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADP7y6QIAAFsUZ/Uc+Mp5O7Mw+ScAMKEsy4XfVlU1l7oOS6gCACYsh6pgkCJCI9Zhw5YxVQDArOWnUw+6Am+32+12+0Apt0GoAgAe0zRNVVVFURw5Qo0JVQDAw5qmGSw5bK9f5O4/AOB5bdvWdd0fgBV+PuCgbS1VAMDDYrtUGFZ1Pp9Dh2BRFFVVxZ8PRUsVAPCYpmkul0tRFDE8hd7A0EZ12H5AUyoAABOemFLhsB1/ge4/AOBhVVUdNjzN0f0HAMyqqmp8o58n1UwSqgCAWXVdi1CJdP8BAGQgVAEAZCBUAQBkIFQBAGQgVAEAOTVNc8z5P4UqACCny+VyOp0+XYoPMKUCADDhibk9u64bT2p1HB5TAwCQge4/AIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAMhCoAgAyEKgCADIQqAIAM/j8oBCzjkj1jPQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for item in MonteCarlo:\n",
    "\n",
    "    for sample, color in {\"TTToSemiLeptonic\" : ROOT.kRed, \"TTTo2L2Nu\" : ROOT.kGreen, \"WJetsToLNu\" : ROOT.kBlue, \"ST_tW_top\" : ROOT.kMagenta, \"ST_tchannel_top\" : ROOT.kOrange}.items():\n",
    "        print(item, sample, type(MonteCarlo[item][sample]))\n",
    "        MonteCarlo[item][sample].SetFillColor(color)\n",
    "        MonteCarlo[item][sample].SetLineColor(color)\n",
    "        S[item].Add(MonteCarlo[item][sample])\n",
    "\n",
    "canvasas = dict()\n",
    "\n",
    "# canvas0 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas0.Draw()\n",
    "# canvasas['0'] = canvas0\n",
    "\n",
    "# canvas1 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas1.Draw()\n",
    "# canvasas['1'] = canvas1\n",
    "\n",
    "# canvas2 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas2.Draw()\n",
    "# canvasas['2'] = canvas2\n",
    "\n",
    "# canvas3 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas3.Draw()\n",
    "# canvasas['3'] = canvas3\n",
    "\n",
    "# canvas4 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas4.Draw()\n",
    "# canvasas['4'] = canvas4\n",
    "\n",
    "# canvas5 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas5.Draw()\n",
    "# canvasas['5'] = canvas5\n",
    "\n",
    "# canvas6 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas6.Draw()\n",
    "# canvasas['6'] = canvas6\n",
    "\n",
    "# canvas7 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas7.Draw()\n",
    "# canvasas['7'] = canvas7\n",
    "\n",
    "# canvas8 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas8.Draw()\n",
    "# canvasas['8'] = canvas8\n",
    "\n",
    "# canvas9 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas9.Draw()\n",
    "# canvasas['9'] = canvas9\n",
    "\n",
    "# canvas10 = ROOT.TCanvas(\"c_met_before_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_before_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas10.Draw()\n",
    "# canvasas['10'] = canvas10\n",
    "\n",
    "# canvas11 = ROOT.TCanvas(\"c_met_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas11.Draw()\n",
    "# canvasas['11'] = canvas11\n",
    "\n",
    "# canvas12 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas12.Draw()\n",
    "# canvasas['12'] = canvas12\n",
    "\n",
    "# canvas13 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas13.Draw()\n",
    "# canvasas['13'] = canvas13\n",
    "\n",
    "# canvas14 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas14.Draw()\n",
    "# canvasas['14'] = canvas14\n",
    "\n",
    "# canvas15 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas15.Draw()\n",
    "# canvasas['15'] = canvas15\n",
    "\n",
    "# canvas16 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas16.Draw()\n",
    "# canvasas['16'] = canvas16\n",
    "\n",
    "# canvas17 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas17.Draw()\n",
    "# canvasas['17'] = canvas17\n",
    "\n",
    "# canvas18 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas18.Draw()\n",
    "# canvasas['18'] = canvas18\n",
    "\n",
    "# canvas19 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas19.Draw()\n",
    "# canvasas['19'] = canvas19\n",
    "\n",
    "# canvas20 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas20.Draw()\n",
    "# canvasas['20'] = canvas20\n",
    "\n",
    "# canvas21 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas21.Draw()\n",
    "# canvasas['21'] = canvas21\n",
    "\n",
    "# canvas22 = ROOT.TCanvas(\"c_number_of_jets_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jets_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas22.Draw()\n",
    "# canvasas['22'] = canvas22\n",
    "\n",
    "\n",
    "\n",
    "# canvas24 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas24.Draw()\n",
    "# canvasas['24'] = canvas24\n",
    "\n",
    "# canvas25 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas25.Draw()\n",
    "# canvasas['25'] = canvas25\n",
    "\n",
    "# canvas26 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas26.Draw()\n",
    "# canvasas['26'] = canvas26\n",
    "\n",
    "# canvas27 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas27.Draw()\n",
    "# canvasas['27'] = canvas27\n",
    "\n",
    "# canvas28 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas28.Draw()\n",
    "# canvasas['28'] = canvas28\n",
    "\n",
    "# canvas29 = ROOT.TCanvas(\"c_number_of_jpsi_muons_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jpsi_muons_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas29.Draw()\n",
    "# canvasas['29'] = canvas29\n",
    "\n",
    "# canvas30 = ROOT.TCanvas(\"c_number_of_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "# S[\"number_of_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "# canvas30.Draw()\n",
    "# canvasas['30'] = canvas30\n",
    "\n",
    "canvas30a = ROOT.TCanvas(\"c_number_of_jpsis\", \"\", 800, 800)\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "S[\"number_of_jpsis\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jpsis\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "canvas30a.Draw()\n",
    "canvasas['30a'] = canvas30a\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas31 = ROOT.TCanvas(\"c_leading_isolated_muon_pt\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas31.Draw()\n",
    "canvasas['31'] = canvas31\n",
    "\n",
    "canvas32 = ROOT.TCanvas(\"c_leading_isolated_muon_eta\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas32.Draw()\n",
    "canvasas['32'] = canvas32\n",
    "\n",
    "canvas33 = ROOT.TCanvas(\"c_leading_isolated_muon_phi\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33.Draw()\n",
    "canvasas['33'] = canvas33\n",
    "\n",
    "canvas33a = ROOT.TCanvas(\"c_isolated_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33a.Draw()\n",
    "canvasas['33a'] = canvas33a\n",
    "\n",
    "canvas34a = ROOT.TCanvas(\"c_number_of_jets\", \"\", 800, 800)\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_jets\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas34a.Draw()\n",
    "canvasas['34a'] = canvas34a\n",
    "\n",
    "canvas35 = ROOT.TCanvas(\"c_jet1_pt\", \"\", 800, 800)\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas35.Draw()\n",
    "canvasas['35'] = canvas35\n",
    "\n",
    "canvas36 = ROOT.TCanvas(\"c_jet2_pt\", \"\", 800, 800)\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas36.Draw()\n",
    "canvasas['36'] = canvas36\n",
    "\n",
    "canvas37 = ROOT.TCanvas(\"c_jet1_eta\", \"\", 800, 800)\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas37.Draw()\n",
    "canvasas['37'] = canvas37\n",
    "\n",
    "canvas38 = ROOT.TCanvas(\"c_jet2_eta\", \"\", 800, 800)\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas38.Draw()\n",
    "canvasas['38'] = canvas38\n",
    "\n",
    "canvas39 = ROOT.TCanvas(\"c_jet1_phi\", \"\", 800, 800)\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas39.Draw()\n",
    "canvasas['39'] = canvas39\n",
    "\n",
    "canvas40 = ROOT.TCanvas(\"c_jet2_phi\", \"\", 800, 800)\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas40.Draw()\n",
    "canvasas['40'] = canvas40\n",
    "\n",
    "canvas41 = ROOT.TCanvas(\"c_transverse_mass\", \"\", 800, 800)\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"transverse_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas41.Draw()\n",
    "canvasas['41'] = canvas41\n",
    "\n",
    "canvas42 = ROOT.TCanvas(\"c_ht\", \"\", 800, 800)\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"ht\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas42.Draw()\n",
    "canvasas['42'] = canvas42\n",
    "\n",
    "canvas42a = ROOT.TCanvas(\"c_met\", \"\", 800, 800)\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"met\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# ROOT.TRatioPlot(RealData[\"met\"][\"SingleMuon2018\"],MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"]).Draw(\"PE1\")\n",
    "canvas42a.Draw()\n",
    "canvasas['42a'] = canvas42a\n",
    "\n",
    "canvas43 = ROOT.TCanvas(\"c_jpsi_muons_pt\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas43.Draw()\n",
    "canvasas['43'] = canvas43\n",
    "\n",
    "canvas44 = ROOT.TCanvas(\"c_jpsi_muons_eta\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas44.Draw()\n",
    "canvasas['44'] = canvas44\n",
    "\n",
    "canvas45 = ROOT.TCanvas(\"c_jpsi_muons_phi\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas45.Draw()\n",
    "canvasas['45'] = canvas45\n",
    "\n",
    "canvas46 = ROOT.TCanvas(\"c_jpsi_muons_charge\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"TEXT PE1\")\n",
    "S[\"jpsi_muons_charge\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"TEXT PE1 SAME\")\n",
    "canvas46.Draw()\n",
    "canvasas['46'] = canvas46\n",
    "\n",
    "# canvas61b = ROOT.TCanvas(\"c_jpsi_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61b.Draw()\n",
    "# canvasas['61b'] = canvas61b\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas33a = ROOT.TCanvas(\"c_leading_isolated_muon_mass\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas33a.Draw()\n",
    "# canvasas['33a'] = canvas33a\n",
    "\n",
    "# canvas34 = ROOT.TCanvas(\"c_leading_isolated_muon_charge\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas34.Draw()\n",
    "# canvasas['34'] = canvas34\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas47 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_mass_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas47.Draw()\n",
    "# canvasas['47'] = canvas47\n",
    "\n",
    "# canvas48 = ROOT.TCanvas(\"c_invariant_masses_zoomed\", \"\", 800, 800)\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_masses_zoomed\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas48.Draw()\n",
    "# canvasas['48'] = canvas48\n",
    "\n",
    "canvas49 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons_and_isolated_muons\", \"\", 800, 800)\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas49.Draw()\n",
    "canvasas['49'] = canvas49\n",
    "\n",
    "# canvas50 = ROOT.TCanvas(\"c_delta_eta_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas50.Draw()\n",
    "# canvasas['50'] = canvas50\n",
    "\n",
    "# canvas51 = ROOT.TCanvas(\"c_delta_phi_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas51.Draw()\n",
    "# canvasas['51'] = canvas51\n",
    "\n",
    "# canvas52 = ROOT.TCanvas(\"c_delta_r_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas52.Draw()\n",
    "# canvasas['52'] = canvas52\n",
    "\n",
    "# canvas53 = ROOT.TCanvas(\"c_jpsi_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas53.Draw()\n",
    "# canvasas['53'] = canvas53\n",
    "\n",
    "# canvas54 = ROOT.TCanvas(\"c_jpsi_eta\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_eta\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas54.Draw()\n",
    "# canvasas['54'] = canvas54\n",
    "\n",
    "# canvas55 = ROOT.TCanvas(\"c_jpsi_phi\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_phi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas55.Draw()\n",
    "# canvasas['55'] = canvas55\n",
    "\n",
    "# canvas56 = ROOT.TCanvas(\"c_delta_eta_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas56.Draw()\n",
    "# canvasas['56'] = canvas56\n",
    "\n",
    "# canvas57 = ROOT.TCanvas(\"c_delta_phi_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas57.Draw()\n",
    "# canvasas['57'] = canvas57\n",
    "\n",
    "# canvas58 = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58.Draw()\n",
    "# canvasas['58'] = canvas58\n",
    "\n",
    "\n",
    "# canvas58a = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58a.Draw()\n",
    "# canvasas['58a'] = canvas58a\n",
    "\n",
    "\n",
    "# canvas59 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas59.Draw()\n",
    "# canvasas['59'] = canvas59\n",
    "\n",
    "# canvas60 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas60.Draw()\n",
    "# canvasas['60'] = canvas60\n",
    "\n",
    "# canvas61 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61.Draw()\n",
    "# canvasas['61'] = canvas61\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas61a = ROOT.TCanvas(\"c_jpsi_muon_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61a.Draw()\n",
    "# canvasas['61a'] = canvas61a\n",
    "\n",
    "\n",
    "\n",
    "# canvas61c = ROOT.TCanvas(\"c_jpsi_muon_pf_iso_id\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_iso_id\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61c.Draw()\n",
    "# canvasas['61c'] = canvas61c\n",
    "\n",
    "# canvas61d = ROOT.TCanvas(\"c_isolated_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"isolated_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61d.Draw()\n",
    "# canvasas['61d'] = canvas61d\n",
    "\n",
    "# canvas61e = ROOT.TCanvas(\"c_jpsi_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61e.Draw()\n",
    "# canvasas['61e'] = canvas61e\n",
    "\n",
    "# canvas61f = ROOT.TCanvas(\"c_jpsi_mass_muons_in_range\", \"\", 800, 800)\n",
    "# #RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_mass_muons_in_range\"].Draw(\"HIST S\")\n",
    "# RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61f.Draw()\n",
    "# canvasas['61f'] = canvas61f\n",
    "\n",
    "# canvas61g = ROOT.TCanvas(\"c_pt_at_low_delta_r\", \"\", 800, 800)\n",
    "# RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas61g.Draw()\n",
    "# canvasas['61g'] = canvas61g\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas96 = ROOT.TCanvas(\"c_jpsi_mass_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_mass_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas96.Draw()\n",
    "canvasas['96'] = canvas96\n",
    "\n",
    "canvas97 = ROOT.TCanvas(\"c_delta_eta_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas97.Draw()\n",
    "canvasas['97'] = canvas97\n",
    "\n",
    "canvas98 = ROOT.TCanvas(\"c_delta_phi_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas98.Draw()\n",
    "canvasas['98'] = canvas98\n",
    "\n",
    "canvas99 = ROOT.TCanvas(\"c_delta_r_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas99.Draw()\n",
    "canvasas['99'] = canvas99\n",
    "\n",
    "# canvas100 = ROOT.TCanvas(\"c_jpsi_muons_charge_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_charge_in_peak\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas100.Draw()\n",
    "# canvasas['100'] = canvas100\n",
    "\n",
    "canvas101 = ROOT.TCanvas(\"c_jpsi_pt_with_muon_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas101.Draw()\n",
    "canvasas['101'] = canvas101\n",
    "\n",
    "# canvas101a = ROOT.TCanvas(\"c_jpsi_muon_pts_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas101a.Draw()\n",
    "# canvasas['101a'] = canvas101a\n",
    "\n",
    "canvas102 = ROOT.TCanvas(\"c_jpsi_muon_isolation_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas102.Draw()\n",
    "canvasas['102'] = canvas102\n",
    "\n",
    "canvas104 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas104.Draw()\n",
    "canvasas['104'] = canvas104\n",
    "\n",
    "canvas105 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas105.Draw()\n",
    "canvasas['105'] = canvas105\n",
    "\n",
    "canvas106 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas106.Draw()\n",
    "canvasas['106'] = canvas106"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening PDF\n",
      "Closing PDF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: pdf file 8_20_22_3Gev_dR_lt_2.pdf has been created using the current canvas\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_20_22_3Gev_dR_lt_2.pdf and file closed\n"
     ]
    }
   ],
   "source": [
    "for kn, k in enumerate(canvasas.keys()):\n",
    "    \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvasas[k].SaveAs('8_20_22_3Gev_dR_lt_2.pdf(')\n",
    "    \n",
    "    elif kn == len(canvasas) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvasas[k].SaveAs('8_20_22_3Gev_dR_lt_2.pdf)')\n",
    "    \n",
    "    else:\n",
    "        canvasas[k].SaveAs('8_20_22_3Gev_dR_lt_2.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "era = \"2017\"\n",
    "channel = \"Mu\"\n",
    "\n",
    "def DrawStack(MonteCarlo, Data, separator = \"___\"):\n",
    "    era, channel, sample, variable, systematic = list(MonteCarlo.values())[0].GetName().split(separator)\n",
    "    name = \"_\".join([\"stack\", era, channel, variable, systematic])\n",
    "    colors = {\"TTToSemiLeptonic\" : ROOT.kRed}\n",
    "    stack = ROOT.THStack(name, \"\")\n",
    "    \n",
    "    canvas = ROOT.TCanvas(name.replace(\"stack\", \"canvas\"), \"\", 800, 800)\n",
    "  \n",
    "    \n",
    "    for sample, hist in MonteCarlo.items():\n",
    "        hist.SetFillColor(colors.get(sample, ROOT.kMagenta))\n",
    "        hist.SetLineColor(colors.get(sample, ROOT.kMagenta))\n",
    "        stack.Add(hist)\n",
    "        \n",
    "    aggregate = None\n",
    "    \n",
    "    for sample, hist in Data.items():\n",
    "        if aggregate == None:\n",
    "            aggregate = hist.Clone(hist.GetName().replace(\"sample\", \"allData\"))\n",
    "            \n",
    "        else:\n",
    "            aggregate += hist\n",
    "    \n",
    "    maxima = []\n",
    "    minima = []\n",
    "    maxima.append(stack.GetMaximum())\n",
    "    maxima.append(aggregate.GetMaximum())\n",
    "    minima.append(stack.GetMinimum())\n",
    "    minima.append(aggregate.GetMinimum())\n",
    "    \n",
    "    stack.SetMinimum(min(minima))\n",
    "    stack.SetMaximum(max(maxima))\n",
    "    \n",
    "    stack.Draw(\"HIST S\")\n",
    "    aggregate.Draw(\"PE1 SAME\")\n",
    "    \n",
    "    canvas.BuildLegend()\n",
    "    \n",
    "    return stack, aggregate, canvas\n",
    "\n",
    "for kn, variable in enumerate(variables):\n",
    "        \n",
    "    MonteCarlo, RealData = GetHistos(f, era, channel, variable)\n",
    "    \n",
    "    stack, aggregate, canvas = DrawStack(MonteCarlo, RealData)\n",
    "       \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvas.SaveAs('December2.pdf(')\n",
    "\n",
    "    elif kn == len(variables) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvas.SaveAs('December2.pdf)')\n",
    "\n",
    "    else:\n",
    "        canvas.SaveAs('December2.pdf')\n",
    "        \n",
    "    canvas.SaveAs(variable + 'December2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on _Helper in module _sitebuiltins object:\n",
      "\n",
      "class _Helper(builtins.object)\n",
      " |  Define the builtin 'help'.\n",
      " |  \n",
      " |  This is a wrapper around pydoc.help that provides a helpful message\n",
      " |  when 'help' is typed at the Python interactive prompt.\n",
      " |  \n",
      " |  Calling help() at the Python prompt starts an interactive help session.\n",
      " |  Calling help(thing) prints help for the python object 'thing'.\n",
      " |  \n",
      " |  Methods defined here:\n",
      " |  \n",
      " |  __call__(self, *args, **kwds)\n",
      " |      Call self as a function.\n",
      " |  \n",
      " |  __repr__(self)\n",
      " |      Return repr(self).\n",
      " |  \n",
      " |  ----------------------------------------------------------------------\n",
      " |  Data descriptors defined here:\n",
      " |  \n",
      " |  __dict__\n",
      " |      dictionary for instance variables (if defined)\n",
      " |  \n",
      " |  __weakref__\n",
      " |      list of weak references to the object (if defined)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(help)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
