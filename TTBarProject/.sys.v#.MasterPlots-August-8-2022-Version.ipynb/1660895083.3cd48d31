{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.26/04\n"
     ]
    }
   ],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total 47339\r\n",
      "-rw-r--r--. 1 migordon 1399   15708 Aug 18  2020 TTto2L2Nu.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   41132 Aug 18  2020 TTToSemiLeptonic.txt\r\n",
      "-rw-r--r--. 1 migordon 1399   14492 Aug 25  2020 Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   37773 Aug 27  2020 August26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 Sep  2  2020 FTFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399    5774 Sep 21  2020 RealData\r\n",
      "-rw-r--r--. 1 migordon 1399   45563 Sep 23  2020 September9.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   45708 Sep 24  2020 September23MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   46111 Sep 24  2020 September23RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   48733 Oct  9  2020 October8MonteCarlo.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399     926 Oct 20  2020 graph.dot.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145577 Oct 20  2020 October15.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   49188 Nov 11  2020 October8RealData.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November12.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 23  2020 November23.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  159946 Nov 24  2020 November24.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  114959 Dec  3  2020 December2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  145516 Dec 10  2020 December10.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198313 Jan 19  2021 January18LooseID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198153 Jan 21  2021 January21MediumID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198536 Jan 21  2021 January21TightID.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198491 Jan 26  2021 January26WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197655 Jan 28  2021 January28WithVeto.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198647 Feb 23  2021 February16AtLeastOneVetoedMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  269832 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  378821 Feb 23  2021 FirstTTreeAnalysisMonteCarlo-Backup-Jaunary-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  198548 Feb 24  2021 February23ExactlyOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198645 Feb 24  2021 February23AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  148905 Feb 24  2021 February23NoGoodMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198461 Feb 24  2021 February24VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  197977 Feb 25  2021 February25AtLeastOneGoodMuon.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  198084 Feb 25  2021 February25VetoedMuons.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  237095 Mar  7  2021 March2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  273136 Mar  8  2021 March8.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  277452 May  2  2021 April27.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  383603 May  3  2021 May3.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  385981 May  5  2021 May4AtLeast4JetsAtLeast1BTagged.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399    7149 May  5  2021 WJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   46268 May  5  2021 2017_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   29677 May  5  2021 2017_Mu_WJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  382235 May  5  2021 FirstTTreeAnalysisMonteCarlo2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   21530 May  5  2021 2017_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  264376 May  6  2021 FirstTTreeAnalysisRealData2017Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399    7138 May  6  2021 TTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7261 May  6  2021 TTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399    7219 May  6  2021 graph.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   44070 May  6  2021 2018_Mu_TTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399   44250 May  6  2021 2018_Mu_TTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399  388482 May  6  2021 May6.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  292166 May 12  2021 FirstTTreeAnalysisMonteCarlo2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  322266 May 12  2021 May11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   34610 May 26  2021 TopMassFunctions.cpp\r\n",
      "-rw-r--r--. 1 migordon 1399   24558 Aug 19  2021 FirstTTreeAnalysis2018United-Backup.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399     427 Aug 24  2021 New_Combination.root\r\n",
      "-rw-r--r--. 1 migordon 1399  152243 Aug 25  2021 August25_50K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  253643 Aug 25  2021 August25_500K_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  268165 Aug 26  2021 August25_1M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  288466 Aug 26  2021 August25_3M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  293684 Aug 26  2021 August25_5M_Events.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32517 Aug 30  2021 FirstTTreeAnalysis2018United-Backup-Copy1.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  308929 Aug 31  2021 August31.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  287815 Sep  1  2021 September1.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  165129 Sep  2  2021 FirstTTreeAnalysisRealData2018Run.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  342481 Sep  3  2021 September2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354661 Sep 21  2021 September21TightMedium.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354301 Sep 21  2021 September21TightTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  354485 Sep 21  2021 September22MediumTight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  568715 Sep 28  2021 MasterPlots-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  366143 Oct  1  2021 September30.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  608173 Oct  6  2021 MasterPlots-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  718643 Oct 20  2021 MasterPlots-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  460135 Oct 21  2021 October21.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  459750 Oct 28  2021 October26.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  469993 Nov 11  2021 November11.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  815942 Dec 20  2021 MasterPlots.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   35815 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.py\r\n",
      "-rw-r--r--. 1 migordon 1399   48706 Jan  7  2022 FirstTTreeAnalysis2018United-AdditionalJPsi.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399 5254040 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-OldCopy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   49408 Jan  9  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-1-9-22-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   52579 Jan 10  2022 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.py\r\n",
      "-rw-r--r--. 1 migordon 1399   22036 May  9 11:57 FirstTTreeAnalysis2018United.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75336 May 14 12:09 May14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  134983 May 26 14:41 May26_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  156426 Jun 13 14:42 June13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   76628 Jun 13 16:00 FirstTTreeAnalysis2018United-AdditionalJPsi-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   41767 Jun 13 17:53 FirstTTreeAnalysis2018United-AdditionalJPsi-10-20-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  317522 Jun 14 16:22 June14_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   39626 Jun 20 15:21 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   27369 Jun 20 16:49 FirstTTreeAnalysis2018United-AdditionalJPsi-10-5-21-Copy.py\r\n",
      "-rw-r--r--. 1 migordon 1399  115107 Jun 21 15:12 FirstTTreeAnalysis2018United-AdditionalJPsi-May_23_2022_Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  552871 Jun 21 16:25 MasterPlots-Late2021Fixes.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  461138 Jun 23 17:27 June23_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  267495 Jun 27 14:57 FirstTTreeAnalysisRealData-Backup-January-21-2021.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  472488 Jun 30 17:37 June30_2022_JPsiZoomed.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   32374 Jul  1 16:35 FirstTTreeAnalysis2018United-AdditionalJPsi-9-27-21-Copy.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   66434 Jul  1 23:03 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.py\r\n",
      "-rw-r--r--. 1 migordon 1399   80894 Jul  3 13:20 FirstTTreeAnalysis2018United-AdditionalJPsi-June_20_2022_Version-Common-Filters-First.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  605767 Jul  3 20:45 July3_2022_MinimumFourJets.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  173470 Jul  4 12:49 MasterPlots-June-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  702825 Jul  4 13:22 July4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  705989 Jul  5 09:55 July5_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 10 23:20 FirstTTreeAnalysis2018United-AdditionalJPsi-July_10_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  776465 Jul 10 23:49 July10_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   97291 Jul 11 01:36 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80141 Jul 11 01:38 FirstTTreeAnalysis2018United-AdditionalJPsi-July_3_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399   98358 Jul 11 02:56 TopQuark_JPsi_Analysis-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   80916 Jul 11 02:57 TopQuark_JPsi_Analysis-July_11_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  769640 Jul 11 03:12 July11_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   95925 Jul 11 09:41 FirstTTreeAnalysis2018United-AdditionalJPsi-July_11_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  802986 Jul 11 10:35 July11_2022_a.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   77722 Jul 11 11:04 TopQuark_JPsi_Analysis-July_11_2022-Copy1.py\r\n",
      "-rw-r--r--. 1 migordon 1399  838420 Jul 11 11:30 July11_2022_b.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  900846 Jul 12 19:46 July12_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1057489 Jul 13 15:13 July13_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1049253 Jul 13 22:15 July13_2022_Isolated_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   83308 Jul 17 18:38 Gordon_Michael_July_17_2022_Alternate_Muon_IDs.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  613179 Jul 20 08:43 MasterPlots-July-3-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399   75405 Jul 20 12:46 Gordon_Michael_July_20_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   90076 Jul 21 07:24 Gordon_Michael_July_20_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  535140 Jul 21 11:17 Gordon_Michael_July_21_2022_Medium_Tight.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  927599 Jul 21 18:29 Gordon_Michael_July_21_2022_Medium_Tight_Revised.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  937378 Jul 21 19:27 Gordon_Michael_July_21_2022_Medium_Tight_Revised_Twice.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1008949 Jul 24 10:30 Gordon_Michael_July_24_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  626330 Jul 25 16:24 Gordon_Michael_July_25_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1284215 Aug  4 17:01 Gordon_Michael_August_4_2022_Negaverse_Plots.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  161217 Aug  5 13:23 Gordon_Michael_August_4_2022.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  146891 Aug  8 14:26 Gordon_Michael_August_8_2022_dR_below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  189364 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  159737 Aug  8 14:27 TopQuark_JPsi_Analysis-July_12_2022.py\r\n",
      "-rw-r--r--. 1 migordon 1399  148783 Aug  8 14:37 Gordon_Michael_August_8_2022_dR_above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399 1140010 Aug  8 16:40 MasterPlots-July-20-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  391521 Aug  9 23:20 Gordon_Michael_August_9_2022_JPsi_3Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  351638 Aug  9 23:27 Gordon_Michael_August_9_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  309560 Aug 10 09:49 Gordon_Michael_August_10_2022_JPsi_6Gev.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  310508 Aug 11 14:24 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  312296 Aug 11 14:35 Gordon_Michael_August_11_2022_JPsi_6Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  350475 Aug 11 14:42 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  347400 Aug 11 14:49 Gordon_Michael_August_11_2022_JPsi_3Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  296712 Aug 17 15:27 Gordon_Michael_August_17_2022_JPsi_6Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  332091 Aug 17 15:43 Gordon_Michael_August_17_2022_JPsi_3Gev_dR_Below_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  308542 Aug 17 16:14 Gordon_Michael_August_17_2022_JPsi_6Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  347218 Aug 17 16:38 Gordon_Michael_August_17_2022_JPsi_3Gev_dR_Above_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  279059 Aug 18 17:33 8_18_22_6Gev_dR_lt_2.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399  156949 Aug 18 22:39 TopQuark_JPsi_Analysis-August_8_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  515906 Aug 18 22:48 Combination.root_backup\r\n",
      "-rw-r--r--. 1 migordon 1399  988716 Aug 18 22:50 MasterPlots-August-8-2022-Version.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  157667 Aug 19 00:06 TopQuark_JPsi_Analysis-August_18_2022.ipynb\r\n",
      "-rw-r--r--. 1 migordon 1399  129415 Aug 19 00:06 TopQuark_JPsi_Analysis-August_8_2022.py\r\n",
      "drwxr-xr-x. 2 migordon 1399    4096 Aug 19 00:07 __pycache__\r\n",
      "-rw-r--r--. 1 migordon 1399   19681 Aug 19 00:07 Data.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33509 Aug 19 00:07 Data_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19954 Aug 19 00:08 MonteCarloTTToSemiLeptonic.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33969 Aug 19 00:08 MonteCarloTTToSemiLeptonic_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19954 Aug 19 00:08 MonteCarloTTTo2L2Nu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33969 Aug 19 00:08 MonteCarloTTTo2L2Nu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19954 Aug 19 00:08 MonteCarloWJetsToLNu.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33969 Aug 19 00:08 MonteCarloWJetsToLNu_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   19954 Aug 19 00:08 MonteCarloST_tW_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33969 Aug 19 00:08 MonteCarloST_tW_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   20383 Aug 19 00:08 MonteCarloST_tchannel_top.dot\r\n",
      "-rw-r--r--. 1 migordon 1399   33969 Aug 19 00:08 MonteCarloST_tchannel_top_graph.pdf\r\n",
      "-rw-r--r--. 1 migordon 1399   70532 Aug 19 00:10 2018_Mu_Data.root\r\n",
      "-rw-r--r--. 1 migordon 1399  122161 Aug 19 00:13 2018_Mu_MonteCarloTTToSemiLeptonic.root\r\n",
      "-rw-r--r--. 1 migordon 1399  117218 Aug 19 00:14 2018_Mu_MonteCarloTTTo2L2Nu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   81885 Aug 19 00:14 2018_Mu_MonteCarloWJetsToLNu.root\r\n",
      "-rw-r--r--. 1 migordon 1399   66896 Aug 19 00:14 2018_Mu_MonteCarloST_tW_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399   75129 Aug 19 00:14 2018_Mu_MonteCarloST_tchannel_top.root\r\n",
      "-rw-r--r--. 1 migordon 1399  515948 Aug 19 00:14 Combination.root\r\n"
     ]
    }
   ],
   "source": [
    "!ls -ltr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hadd Target file: Combination.root\n",
      "hadd compression setting for all output: 1\n",
      "hadd Source file 1: 2018_Mu_Data.root\n",
      "hadd Source file 2: 2018_Mu_MonteCarloTTToSemiLeptonic.root\n",
      "hadd Source file 3: 2018_Mu_MonteCarloTTTo2L2Nu.root\n",
      "hadd Source file 4: 2018_Mu_MonteCarloWJetsToLNu.root\n",
      "hadd Source file 5: 2018_Mu_MonteCarloST_tW_top.root\n",
      "hadd Source file 6: 2018_Mu_MonteCarloST_tchannel_top.root\n",
      "hadd Target path: Combination.root:/\n"
     ]
    }
   ],
   "source": [
    "!mv Combination.root Combination.root_backup\n",
    "!hadd -f Combination.root 2018_Mu_Data.root 2018_Mu_MonteCarloTTToSemiLeptonic.root 2018_Mu_MonteCarloTTTo2L2Nu.root 2018_Mu_MonteCarloWJetsToLNu.root 2018_Mu_MonteCarloST_tW_top.root 2018_Mu_MonteCarloST_tchannel_top.root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___top_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n"
     ]
    }
   ],
   "source": [
    "f = ROOT.TFile.Open('Combination.root', 'read')\n",
    "k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "eras = list(set([kk.split(\"___\")[0] for kk in k]))\n",
    "channels = list(set([kk.split(\"___\")[1] for kk in k]))\n",
    "samples = list(set([kk.split(\"___\")[2] for kk in k]))\n",
    "variables = list(set([kk.split(\"___\")[3] for kk in k]))\n",
    "systematics = list(set([kk.split(\"___\")[4] for kk in k]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018']\n",
      "['Mu']\n",
      "['MonteCarloWJetsToLNu', 'MonteCarloTTToSemiLeptonic', 'MonteCarloST_tchannel_top', 'MonteCarloST_tW_top', 'Data', 'MonteCarloTTTo2L2Nu']\n",
      "['delta_eta_between_isolated_muon_and_jpsi', 'jet1_phi', 'leading_isolated_muon_eta_initial', 'delta_r_between_isolated_muon_and_jpsi_in_peak', 'leading_isolated_electron_pt_after_met_cut', 'leading_isolated_muon_phi', 'delta_phi_for_jpsi_muons_in_peak', 'leading_isolated_muon_phi_initial', 'delta_r_between_jpsi_muons_in_peak', 'jpsi_muon_pf_iso_id', 'invariant_masses_zoomed', 'delta_r_between_isolated_and_jpsi_muons', 'delta_phi_between_isolated_muon_and_jpsi_in_peak', 'jet1_eta', 'leading_isolated_muon_mass_after_jet_cut', 'jpsi_eta', 'delta_eta_between_jpsi_muons', 'delta_r_for_jpsi_muons_in_peak', 'leading_isolated_muon_charge_after_jet_cut', 'delta_phi_between_isolated_and_jpsi_muons', 'delta_phi_between_jpsi_muons', 'leading_isolated_muon_eta_after_met_cut', 'leading_isolated_muon_pt', 'jpsi_muon_isolation_in_peak', 'invariant_mass_jpsi_muons', 'leading_isolated_muon_eta_after_jet_cut', 'leading_isolated_electron_phi_initial', 'leading_isolated_muon_pt_initial', 'leading_isolated_electron_eta_initial', 'jpsi_mass_muons_in_range', 'jpsi_muons_eta', 'delta_eta_between_isolated_muon_and_jpsi_in_peak', 'number_of_jpsi_muons_initial', 'leading_isolated_muon_mass_after_met_cut', 'pt_at_low_delta_r', 'jpsi_pt_with_muon_in_peak', 'jpsi_muon_pt', 'leading_isolated_muon_charge_after_met_cut', 'leading_isolated_muon_mass', 'delta_r_between_isolated_muon_and_jpsi', 'leading_isolated_electron_eta_after_met_cut', 'number_of_jpsi_muons', 'jpsi_muons_phi', 'jpsi_muon_pf_rel_iso_03_all', 'jpsi_mass_in_peak', 'leading_isolated_electron_pt_initial', 'invariant_mass_jpsi_muons_and_isolated_muons', 'transverse_mass', 'number_of_jets_initial', 'leading_isolated_electron_charge_after_met_cut', 'number_of_jets', 'jet2_pt', 'leading_isolated_muon_phi_after_met_cut', 'leading_isolated_electron_mass_initial', 'leading_isolated_muon_phi_after_jet_cut', 'leading_isolated_muon_charge', 'jet1_pt', 'jpsi_muon_pts_in_peak', 'delta_phi_between_isolated_muon_and_jpsi', 'leading_isolated_electron_charge_initial', 'jet2_phi', 'jpsi_muons_in_range_pfRelIso03_all', 'jpsi_muons_charge', 'isolated_muons_in_range_pfRelIso03_all', 'jpsi_muons_charge_in_peak', 'leading_isolated_muon_charge_initial', 'isolated_muon_pf_rel_iso_03_all', 'top_mass_in_peak', 'leading_isolated_muon_pt_after_jet_cut', 'met_after_met_cut', 'jpsi_phi', 'met', 'ht', 'leading_isolated_muon_pt_after_met_cut', 'jet2_eta', 'leading_isolated_muon_mass_initial', 'delta_r_between_jpsi_muons', 'met_before_met_cut', 'leading_isolated_electron_mass_after_met_cut', 'delta_eta_for_jpsi_muons_in_peak', 'leading_isolated_electron_phi_after_met_cut', 'leading_isolated_muon_eta', 'jpsi_pt', 'jpsi_muons_pt', 'delta_eta_between_isolated_and_jpsi_muons']\n",
      "['nominal']\n"
     ]
    }
   ],
   "source": [
    "print(eras)\n",
    "print(channels)\n",
    "print(samples)\n",
    "print(variables)\n",
    "print(systematics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def GetHistos(f, era, channel, variable, systematic = \"nominal\", separator = \"___\"):\n",
    "    \n",
    "    MC = dict()\n",
    "    Data = dict()\n",
    "    \n",
    "    k = [ff.GetName() for ff in f.GetListOfKeys()]\n",
    "    print(k)\n",
    "    k = [kk for kk in k if era == kk.split(separator)[0]]\n",
    "    k = [kk for kk in k if channel == kk.split(separator)[1]]\n",
    "    k = [kk for kk in k if variable == kk.split(separator)[3]]\n",
    "    k = [kk for kk in k if systematic == kk.split(separator)[4]]\n",
    "    \n",
    "    for kk in k:\n",
    "        sample = kk.split(separator)[2]\n",
    "        \n",
    "        if \"data\" in sample.lower():\n",
    "            Data[sample] = f.Get(kk)\n",
    "            print(\"Data\")\n",
    "            \n",
    "        else:\n",
    "            MC[sample] = f.Get(kk)\n",
    "            print(sample)\n",
    "            \n",
    "    return MC, Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2018___Mu___Data___leading_isolated_muon_pt_initial___nominal', '2018___Mu___Data___leading_isolated_muon_eta_initial___nominal', '2018___Mu___Data___leading_isolated_muon_phi_initial___nominal', '2018___Mu___Data___leading_isolated_muon_mass_initial___nominal', '2018___Mu___Data___leading_isolated_muon_charge_initial___nominal', '2018___Mu___Data___leading_isolated_electron_pt_initial___nominal', '2018___Mu___Data___leading_isolated_electron_eta_initial___nominal', '2018___Mu___Data___leading_isolated_electron_phi_initial___nominal', '2018___Mu___Data___leading_isolated_electron_mass_initial___nominal', '2018___Mu___Data___leading_isolated_electron_charge_initial___nominal', '2018___Mu___Data___met_before_met_cut___nominal', '2018___Mu___Data___met_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___Data___number_of_jets_initial___nominal', '2018___Mu___Data___number_of_jets___nominal', '2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___Data___number_of_jpsi_muons_initial___nominal', '2018___Mu___Data___number_of_jpsi_muons___nominal', '2018___Mu___Data___leading_isolated_muon_pt___nominal', '2018___Mu___Data___leading_isolated_muon_eta___nominal', '2018___Mu___Data___leading_isolated_muon_phi___nominal', '2018___Mu___Data___leading_isolated_muon_mass___nominal', '2018___Mu___Data___leading_isolated_muon_charge___nominal', '2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jet1_pt___nominal', '2018___Mu___Data___jet2_pt___nominal', '2018___Mu___Data___jet1_eta___nominal', '2018___Mu___Data___jet2_eta___nominal', '2018___Mu___Data___jet1_phi___nominal', '2018___Mu___Data___jet2_phi___nominal', '2018___Mu___Data___transverse_mass___nominal', '2018___Mu___Data___ht___nominal', '2018___Mu___Data___met___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons___nominal', '2018___Mu___Data___invariant_masses_zoomed___nominal', '2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___Data___jpsi_pt___nominal', '2018___Mu___Data___jpsi_eta___nominal', '2018___Mu___Data___jpsi_phi___nominal', '2018___Mu___Data___delta_eta_between_jpsi_muons___nominal', '2018___Mu___Data___delta_phi_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons___nominal', '2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___Data___jpsi_muon_pt___nominal', '2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___Data___jpsi_muon_pf_iso_id___nominal', '2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___Data___jpsi_mass_muons_in_range___nominal', '2018___Mu___Data___pt_at_low_delta_r___nominal', '2018___Mu___Data___jpsi_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___Data___jpsi_muons_charge_in_peak___nominal', '2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___Data___jpsi_muons_pt___nominal', '2018___Mu___Data___jpsi_muons_eta___nominal', '2018___Mu___Data___jpsi_muons_phi___nominal', '2018___Mu___Data___jpsi_muons_charge___nominal', '2018___Mu___Data___jpsi_muon_pts_in_peak___nominal', '2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___Data___top_mass_in_peak___nominal', '2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___met___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal', '2018___Mu___MonteCarloWJetsToLNu___ht___nominal', '2018___Mu___MonteCarloWJetsToLNu___met___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___top_mass_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tW_top___ht___nominal', '2018___Mu___MonteCarloST_tW_top___met___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal', '2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal', '2018___Mu___MonteCarloST_tchannel_top___ht___nominal', '2018___Mu___MonteCarloST_tchannel_top___met___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal', '2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal', '2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal', '2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal', '2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___top_mass_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal', '2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal']\n",
      "{} {}\n"
     ]
    }
   ],
   "source": [
    "x, y = GetHistos(f, \"2018\", \"Mu\", \"mu_pt\")\n",
    "print(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#Load histograms from file(s)\n",
    "MonteCarlo = dict()\n",
    "RealData = dict()\n",
    "\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "MonteCarlo[\"met_before_met_cut\"] = dict()\n",
    "MonteCarlo[\"met_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jets_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jets\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "MonteCarlo[\"number_of_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"] = dict()\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"] = dict()\n",
    "MonteCarlo[\"jet1_pt\"] = dict()\n",
    "MonteCarlo[\"jet2_pt\"] = dict()\n",
    "MonteCarlo[\"jet1_eta\"] = dict()\n",
    "MonteCarlo[\"jet2_eta\"] = dict()\n",
    "MonteCarlo[\"jet1_phi\"] = dict()\n",
    "MonteCarlo[\"jet2_phi\"] = dict()\n",
    "MonteCarlo[\"transverse_mass\"] = dict()\n",
    "MonteCarlo[\"ht\"] = dict()\n",
    "MonteCarlo[\"met\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_phi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"invariant_masses_zoomed\"] = dict()\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_eta\"] = dict()\n",
    "MonteCarlo[\"jpsi_phi\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pt\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "MonteCarlo[\"pt_at_low_delta_r\"] = dict()\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"] = dict()\n",
    "\n",
    "\n",
    "\n",
    "RealData[\"leading_isolated_muon_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_initial\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_initial\"] = dict()\n",
    "RealData[\"met_before_met_cut\"] = dict()\n",
    "RealData[\"met_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"] = dict()\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"] = dict()\n",
    "RealData[\"number_of_jets_initial\"] = dict()\n",
    "RealData[\"number_of_jets\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons_initial\"] = dict()\n",
    "RealData[\"number_of_jpsi_muons\"] = dict()\n",
    "RealData[\"leading_isolated_muon_pt\"] = dict()\n",
    "RealData[\"leading_isolated_muon_eta\"] = dict()\n",
    "RealData[\"leading_isolated_muon_phi\"] = dict()\n",
    "RealData[\"leading_isolated_muon_mass\"] = dict()\n",
    "RealData[\"leading_isolated_muon_charge\"] = dict()\n",
    "RealData[\"jet1_pt\"] = dict()\n",
    "RealData[\"jet2_pt\"] = dict()\n",
    "RealData[\"jet1_eta\"] = dict()\n",
    "RealData[\"jet2_eta\"] = dict()\n",
    "RealData[\"jet1_phi\"] = dict()\n",
    "RealData[\"jet2_phi\"] = dict()\n",
    "RealData[\"transverse_mass\"] = dict()\n",
    "RealData[\"ht\"] = dict()\n",
    "RealData[\"met\"] = dict()\n",
    "RealData[\"jpsi_muons_pt\"] = dict()\n",
    "RealData[\"jpsi_muons_eta\"] = dict()\n",
    "RealData[\"jpsi_muons_phi\"] = dict()\n",
    "RealData[\"jpsi_muons_charge\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons\"] = dict()\n",
    "RealData[\"invariant_masses_zoomed\"] = dict()\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"] = dict()\n",
    "RealData[\"jpsi_pt\"] = dict()\n",
    "RealData[\"jpsi_eta\"] = dict()\n",
    "RealData[\"jpsi_phi\"] = dict()\n",
    "RealData[\"delta_eta_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_phi_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons\"] = dict()\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"] = dict()\n",
    "RealData[\"jpsi_muon_pt\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"] = dict()\n",
    "RealData[\"jpsi_muon_pf_iso_id\"] = dict()\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"] = dict()\n",
    "RealData[\"jpsi_mass_muons_in_range\"] = dict()\n",
    "RealData[\"pt_at_low_delta_r\"] = dict()\n",
    "RealData[\"jpsi_mass_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muons_charge_in_peak\"] = dict()\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_pts_in_peak\"] = dict()\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"] = dict()\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = dict()\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"] = dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_initial___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_initial___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_initial___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_before_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_before_met_cut___nominal\")\n",
    "RealData[\"met_before_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_before_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"met_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met_after_met_cut___nominal\")\n",
    "RealData[\"met_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_pt_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_pt_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_eta_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_eta_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_phi_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_phi_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_mass_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_mass_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_mass_after_met_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_electron_charge_after_met_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_electron_charge_after_met_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets_initial___nominal\")\n",
    "RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jets___nominal\")\n",
    "MonteCarlo[\"number_of_jets\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jets___nominal\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jets___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass_after_jet_cut___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge_after_jet_cut\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge_after_jet_cut___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons_initial\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons_initial___nominal\")\n",
    "RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons_initial___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"number_of_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___number_of_jpsi_muons___nominal\")\n",
    "RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___number_of_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_pt___nominal\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_pt___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_eta___nominal\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_eta___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_phi___nominal\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_phi___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_mass___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_mass___nominal\")\n",
    "RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_mass___nominal\") \n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"leading_isolated_muon_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___leading_isolated_muon_charge___nominal\")\n",
    "RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___leading_isolated_muon_charge___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet1_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_pt___nominal\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet2_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_pt___nominal\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_pt___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet1_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_eta___nominal\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet2_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_eta___nominal\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_eta___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet1_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet1_phi___nominal\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet1_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jet2_phi___nominal\")\n",
    "MonteCarlo[\"jet2_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jet2_phi___nominal\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jet2_phi___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___transverse_mass___nominal\")\n",
    "MonteCarlo[\"transverse_mass\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___transverse_mass___nominal\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___transverse_mass___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___ht___nominal\")\n",
    "MonteCarlo[\"ht\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___ht___nominal\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___ht___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___met___nominal\")\n",
    "MonteCarlo[\"met\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___met___nominal\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___met___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_pt___nominal\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_eta___nominal\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_phi___nominal\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge___nominal\")\n",
    "RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_masses_zoomed\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_masses_zoomed___nominal\")\n",
    "RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_masses_zoomed___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___invariant_mass_jpsi_muons_and_isolated_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_and_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_and_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt___nominal\")\n",
    "RealData[\"jpsi_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_eta\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_eta___nominal\")\n",
    "RealData[\"jpsi_eta\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_eta___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"jpsi_phi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_phi___nominal\")\n",
    "RealData[\"jpsi_phi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_phi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pt\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pt___nominal\")\n",
    "RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pt___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pf_iso_id\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pf_iso_id___nominal\")\n",
    "RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pf_iso_id___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_in_range_pfRelIso03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_in_range_pfRelIso03_all___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_muons_in_range\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_muons_in_range___nominal\")\n",
    "RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_muons_in_range___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"pt_at_low_delta_r\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___pt_at_low_delta_r___nominal\")\n",
    "RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___pt_at_low_delta_r___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_mass_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_mass_in_peak___nominal\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_mass_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_for_jpsi_muons_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_for_jpsi_muons_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muons_charge_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muons_charge_in_peak___nominal\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muons_charge_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_pt_with_muon_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_pt_with_muon_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_pts_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_pts_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_pts_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"jpsi_muon_isolation_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___jpsi_muon_isolation_in_peak___nominal\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___jpsi_muon_isolation_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_eta_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_phi_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___delta_r_between_isolated_muon_and_jpsi_in_peak___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTToSemiLeptonic\"] = f.Get(\"2018___Mu___MonteCarloTTToSemiLeptonic___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"TTTo2L2Nu\"] = f.Get(\"2018___Mu___MonteCarloTTTo2L2Nu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"WJetsToLNu\"] = f.Get(\"2018___Mu___MonteCarloWJetsToLNu___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tW_top\"] = f.Get(\"2018___Mu___MonteCarloST_tW_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "MonteCarlo[\"isolated_muon_pf_rel_iso_03_all\"][\"ST_tchannel_top\"] = f.Get(\"2018___Mu___MonteCarloST_tchannel_top___isolated_muon_pf_rel_iso_03_all___nominal\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"] = f.Get(\"2018___Mu___Data___isolated_muon_pf_rel_iso_03_all___nominal\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "S = dict()\n",
    "S[\"leading_isolated_muon_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_initial\", \"Leading Isolated Muon Transverse Momentum (One Muon, No Electrons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_initial\", \"Leading Isolated Muon Pseudorapidity (One Muon, No Electrons); Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_initial\", \"Leading Isolated Muon Angle (One Muon, No Electrons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_initial\", \"Leading Isolated Muon Mass (One Muon, No Electrons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_initial\", \"Leading Isolated Muon Charge (One Muon, No Electrons); Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_initial\", \"Leading Isolated Electron Transverse Momentum (One Electron, No Muons); Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_initial\", \"Leading Isolated Electron Pseudorapidity (One Electron, No Muons); Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_initial\", \"Leading Isolated Electron Angle (One Electron, No Muons); Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_initial\", \"Leading Isolated Electron Mass (One Electron, No Muons); Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_initial\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_initial\", \"Leading Isolated Electron Charge (One Electron, No Muons); Charge; Events\")\n",
    "S[\"met_before_met_cut\"] = ROOT.THStack(\"s_met_before_met_cut\", \"MET Before MET Cut; Pt (GeV); Events\")\n",
    "S[\"met_after_met_cut\"] = ROOT.THStack(\"s_met_after_met_cut\", \"MET; Pt (GeV); Events\")\n",
    "S[\"leading_isolated_muon_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_met_cut\", \"Leading Isolated Muon Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_met_cut\", \"Leading Isolated Muon Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_met_cut\", \"Leading Isolated Muon Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_met_cut\", \"Leading Isolated Muon Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_met_cut\", \"Leading Isolated Muon Charge After MET Cut; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_pt_after_met_cut\", \"Leading Isolated Electron Transverse Momentum After MET Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_eta_after_met_cut\", \"Leading Isolated Electron Pseudorapidity After MET Cut; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_phi_after_met_cut\", \"Leading Isolated Electron Angle After MET Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_mass_after_met_cut\", \"Leading Isolated Electron Mass After MET Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge_after_met_cut\"] = ROOT.THStack(\"s_leading_isolated_electron_charge_after_met_cut\", \"Leading Isolated Electron Charge After MET Cut; Charge; Events\")\n",
    "S[\"number_of_jets_initial\"] = ROOT.THStack(\"s_number_of_jets_initial\", \"Number Of Jets Before Jet Cut; Number Of Jets; Events\")\n",
    "S[\"number_of_jets\"] = ROOT.THStack(\"s_number_of_jets\", \"Number Of Jets; Number Of Jets; Events\")\n",
    "S[\"leading_isolated_muon_pt_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_pt_after_jet_cut\", \"Leading Isolated Muon Transverse Momentum After Jet Cut; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_eta_after_jet_cut\", \"Leading Isolated Muon Pseudorapidity After Jet Cut; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_phi_after_jet_cut\", \"Leading Isolated Muon Angle After Jet Cut; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_mass_after_jet_cut\", \"Leading Isolated Muon Mass After Jet Cut; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge_after_jet_cut\"] = ROOT.THStack(\"s_leading_isolated_muon_charge_after_jet_cut\", \"Leading Isolated Muon Charge After Jet Cut; Charge; Events\")\n",
    "S[\"number_of_jpsi_muons_initial\"] = ROOT.THStack(\"s_number_of_jpsi_muons_initial\", \"Number of JPsi Muons Before JPsi Muon Cut; Number Of Muons; Events\")\n",
    "S[\"number_of_jpsi_muons\"] = ROOT.THStack(\"s_number_of_jpsi_muons\", \"Number of JPsi Muons; Number Of Muons; Events\")\n",
    "S[\"leading_isolated_muon_pt\"] = ROOT.THStack(\"s_leading_isolated_muon_pt\", \"Leading Isolated Muon Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_muon_eta\"] = ROOT.THStack(\"s_leading_isolated_muon_eta\", \"Leading Isolated Muon Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_muon_phi\"] = ROOT.THStack(\"s_leading_isolated_muon_phi\", \"Leading Isolated Muon Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_muon_mass\"] = ROOT.THStack(\"s_leading_isolated_muon_mass\", \"Leading Isolated Muon Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_muon_charge\"] = ROOT.THStack(\"s_leading_isolated_muon_charge\", \"Leading Isolated Muon Charge; Charge; Events\")\n",
    "S[\"leading_isolated_electron_pt\"] = ROOT.THStack(\"s_leading_isolated_electron_pt\", \"Leading Isolated Electron Transverse Momentum; Pt (GeV);Events\")\n",
    "S[\"leading_isolated_electron_eta\"] = ROOT.THStack(\"s_leading_isolated_electron_eta\", \"Leading Isolated Electron Pseudorapidity; Eta; Events\")\n",
    "S[\"leading_isolated_electron_phi\"] = ROOT.THStack(\"s_leading_isolated_electron_phi\", \"Leading Isolated Electron Angle; Phi (Radians); Events\")\n",
    "S[\"leading_isolated_electron_mass\"] = ROOT.THStack(\"s_leading_isolated_electron_mass\", \"Leading Isolated Electron Mass; Mass(Gev); Events\")\n",
    "S[\"leading_isolated_electron_charge\"] = ROOT.THStack(\"s_leading_isolated_electron_charge\", \"Leading Isolated Electron Charge; Charge; Events\")\n",
    "S[\"jet1_pt\"] = ROOT.THStack(\"s_jet1_pt\", \"Jet Transverse Momentum for Leading Jet; Pt (GeV); Events\")\n",
    "S[\"jet2_pt\"] = ROOT.THStack(\"s_jet2_pt\", \"Jet Transverse Momentum for Subleading Jet; Pt (GeV); Events\")\n",
    "S[\"jet1_eta\"] = ROOT.THStack(\"s_jet1_eta\", \"Jet Pseudorapidity for Leading Jet; Eta; Events\")\n",
    "S[\"jet2_eta\"] = ROOT.THStack(\"s_jet2_eta\", \"Jet Pseudorapidity for Subleading Jet; Eta; Events\")\n",
    "S[\"jet1_phi\"] = ROOT.THStack(\"s_jet1_phi\", \"Jet Angle for Leading Jet; Phi (Radians); Events\")\n",
    "S[\"jet2_phi\"] = ROOT.THStack(\"s_jet2_phi\", \"Jet Angle for Subleading Jet; Phi (Radians); Events\")\n",
    "S[\"transverse_mass\"] = ROOT.THStack(\"s_transverse_mass\", \"Transverse Mass; Transverse Mass (GeV); Events\")\n",
    "S[\"ht\"] = ROOT.THStack(\"s_ht\", \"Ht; Ht; Events\")\n",
    "S[\"met\"] = ROOT.THStack(\"s_met\", \"MET; Pt (GeV); Events\")\n",
    "S[\"jpsi_muons_pt\"] = ROOT.THStack(\"s_jpsi_muons_pt\", \"Transverse Momentum for JPsi Muons; Pt; Events\")\n",
    "S[\"jpsi_muons_eta\"] = ROOT.THStack(\"s_jpsi_muons_eta\", \"Pseudorapidity for JPsi Muons; Eta; Events\")\n",
    "S[\"jpsi_muons_phi\"] = ROOT.THStack(\"s_jpsi_muons_phi\", \"Angle for JPsi Muons; Phi; Events\")\n",
    "S[\"jpsi_muons_charge\"] = ROOT.THStack(\"s_jpsi_muons_charge\", \"Charge of JPsi Muons; Charge; Events\")\n",
    "S[\"invariant_mass_jpsi_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_masses_zoomed\"] = ROOT.THStack(\"s_invariant_masses_zoomed\", \"Invariant Masses for J/Psi Candidate Muons (Oppositely Charged); Invariant Masses; Events\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"] = ROOT.THStack(\"s_invariant_mass_jpsi_muons_and_isolated_muons\", \"Invariant Masses for J/Psi Candidate And Isolated Muons (dR > 2); Invariant Masses; Events\")\n",
    "S[\"delta_eta_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_isolated_and_jpsi_muons\", \"Delta Eta for Isolated Muon - JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_isolated_and_jpsi_muons\", \"Delta Phi for Isolated Muon - JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_and_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_isolated_and_jpsi_muons\", \"Delta R for Isolated and JPsi Muons; Delta R; Events\")\n",
    "S[\"jpsi_pt\"] = ROOT.THStack(\"s_jpsi_pt\", \"Transverse Momentum for JPsi; Pt; Events\")\n",
    "S[\"jpsi_eta\"] = ROOT.THStack(\"s_jpsi_eta\", \"Pseudorapidity for JPsi; Eta; Events\")\n",
    "S[\"jpsi_phi\"] = ROOT.THStack(\"s_jpsi_phi\", \"Angle for JPsi; Phi; Events\")\n",
    "S[\"delta_eta_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_eta_between_jpsi_muons\", \"Delta Eta for JPsi Muons; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_phi_between_jpsi_muons\", \"Delta Phi for JPsi Muons; Delta Phi; Events\")\n",
    "S[\"delta_r_between_jpsi_muons\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons\", \"Delta R for JPsi Muons; Delta R; Events\")\n",
    "S[\"delta_r_between_jpsi_muons_in_peak\"] = ROOT.THStack(\"s_delta_r_between_jpsi_muons_in_peak\", \"Delta R for JPsi Muons In Peak; Delta R; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_eta_between_isolated_muon_and_jpsi\", \"Delta Eta for Isolated Muon And JPsi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_phi_between_isolated_muon_and_jpsi\", \"Delta Phi for Isolated Muon And JPsi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi\"] = ROOT.THStack(\"s_delta_r_between_isolated_muon_and_jpsi\", \"Delta R for Isolated Muon And JPsi; Delta R; Events\")\n",
    "S[\"jpsi_muon_pt\"] = ROOT.THStack(\"s_jpsi_muon_pt\", \"JPsi Muon Pt - Muon Id Medium, Iso Id Tight; JPsi Muon Pt; Events\")\n",
    "\n",
    "\n",
    "S[\"jpsi_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_jpsi_muon_pf_rel_iso_03_all\", \"JPsi Muon Pf Rel Iso 03 All; JPsi Muon Pf Rel Iso 03 All; Events\")\n",
    "S[\"jpsi_muon_pf_iso_id\"] = ROOT.THStack(\"s_jpsi_muon_pf_iso_id\", \"JPsi Muon Pf Iso Id - Muon Id Medium, Iso Id Tight; JPsi Muon Pf Iso Id; Events\")\n",
    "S[\"isolated_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_isolated_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For Isolated Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_muons_in_range_pfRelIso03_all\"] = ROOT.THStack(\"s_jpsi_muons_in_range_pfRelIso03_all\", \"PfRelIso03_All For JPsi Muons In 90-120 GeV Range; PfRelIso03_All; Events\")\n",
    "S[\"jpsi_mass_muons_in_range\"] = ROOT.THStack(\"s_jpsi_mass_muons_in_range\", \"JPsi Mass For JPsis In 90-120 GeV Range; JPsi Mass; Events\")\n",
    "S[\"pt_at_low_delta_r\"] = ROOT.THStack(\"s_pt_at_low_delta_r\", \"Isolated Muon and JPsi Pt at Delta R < 0.3; Isolated Muon Pt; JPsi Muon Pt; Events\")\n",
    "S[\"jpsi_mass_in_peak\"] = ROOT.THStack(\"jpsi_mass_in_peak\", \"J/Psi Mass Made from Muons In Peak; J/Psi Mass; Events\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_eta_for_jpsi_muons_in_peak\", \"Delta Eta For J/Psi Muons In Peak; Delta Eta; Events\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_phi_for_jpsi_muons_in_peak\", \"Delta Phi For J/Psi Muons In Peak; Delta Phi; Events\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"] = ROOT.THStack(\"delta_r_for_jpsi_muons_in_peak\", \"Delta R For J/Psi Muons In Peak; Delta R; Events\")\n",
    "S[\"jpsi_muons_charge_in_peak\"] = ROOT.THStack(\"jpsi_muons_charge_in_peak\", \"J/Psi Muons In Peak Charge; Charge; Events\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"] = ROOT.THStack(\"jpsi_pt_with_muon_in_peak\", \"J/Psi Pt With Muons In Peak; Pt; Events\")\n",
    "S[\"jpsi_muon_pts_in_peak\"] = ROOT.THStack(\"jpsi_muon_pts_in_peak\", \"J/Psi Muon Pts In Peak; Positive Muon Pts; Negative Muon Pts; Events\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"] = ROOT.THStack(\"jpsi_muon_isolation_in_peak\", \"J/Psi Pf Rel Iso 03 All Made From Muons In Peak; Pf Rel Iso 03 All; Events\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"Delta Eta Between Isolated Muon And J/Psi; Delta Eta; Events\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"Delta Phi Between Isolated Muon And J/Psi; Delta Phi; Events\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"] = ROOT.THStack(\"delta_r_between_isolated_muon_and_jpsi_in_peak\", \"Delta R Between Isolated Muon And J/Psi; Delta R; Events\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"] = ROOT.THStack(\"s_isolated_muon_pf_rel_iso_03_all\", \"Isolated Muon PfRelIso03_All; Isolated Muon PfRelIso03_All; Events\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "leading_isolated_muon_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_before_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_before_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_before_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_before_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_before_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_pt_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_eta_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_phi_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_mass_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_after_met_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_after_met_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_after_met_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_electron_charge_after_met_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jets ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_jet_cut TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_jet_cut TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_jet_cut WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge_after_jet_cut ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons_initial TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons_initial TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons_initial WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons_initial ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons_initial ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "number_of_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "leading_isolated_muon_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_pt ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_pt ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_eta ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_eta ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_phi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet1_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_phi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jet2_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "transverse_mass TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "transverse_mass TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "transverse_mass WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "transverse_mass ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "transverse_mass ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "ht TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "ht TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "ht WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "ht ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "ht ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "met ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_pt ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_eta ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_phi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_masses_zoomed TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_masses_zoomed TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_masses_zoomed WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_masses_zoomed ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_masses_zoomed ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "invariant_mass_jpsi_muons_and_isolated_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_and_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_and_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_and_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_and_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_eta TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_eta TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_eta WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_eta ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_eta ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_phi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_phi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_phi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_phi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_phi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pt TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pt TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pt WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pt ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pt ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_iso_id TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_iso_id TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_iso_id WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_iso_id ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pf_iso_id ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_in_range_pfRelIso03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_in_range_pfRelIso03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_in_range_pfRelIso03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_muons_in_range TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_muons_in_range TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_muons_in_range WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_muons_in_range ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_muons_in_range ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "pt_at_low_delta_r TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "pt_at_low_delta_r TTTo2L2Nu <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "pt_at_low_delta_r WJetsToLNu <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "pt_at_low_delta_r ST_tW_top <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "pt_at_low_delta_r ST_tchannel_top <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "jpsi_mass_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_mass_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_for_jpsi_muons_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_for_jpsi_muons_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_for_jpsi_muons_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_for_jpsi_muons_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muons_charge_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt_with_muon_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt_with_muon_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt_with_muon_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt_with_muon_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_pt_with_muon_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_pts_in_peak TTToSemiLeptonic <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "jpsi_muon_pts_in_peak TTTo2L2Nu <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "jpsi_muon_pts_in_peak WJetsToLNu <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "jpsi_muon_pts_in_peak ST_tW_top <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "jpsi_muon_pts_in_peak ST_tchannel_top <class cppyy.gbl.TH2D at 0x886f3c0>\n",
      "jpsi_muon_isolation_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_isolation_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_isolation_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_isolation_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "jpsi_muon_isolation_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "top_mass_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "top_mass_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "top_mass_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "top_mass_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "top_mass_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_eta_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_phi_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "delta_r_between_isolated_muon_and_jpsi_in_peak ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muon_pf_rel_iso_03_all TTToSemiLeptonic <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muon_pf_rel_iso_03_all TTTo2L2Nu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muon_pf_rel_iso_03_all WJetsToLNu <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tW_top <class cppyy.gbl.TH1D at 0x86e02e0>\n",
      "isolated_muon_pf_rel_iso_03_all ST_tchannel_top <class cppyy.gbl.TH1D at 0x86e02e0>\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for item in MonteCarlo:\n",
    "\n",
    "    for sample, color in {\"TTToSemiLeptonic\" : ROOT.kRed, \"TTTo2L2Nu\" : ROOT.kGreen, \"WJetsToLNu\" : ROOT.kBlue, \"ST_tW_top\" : ROOT.kMagenta, \"ST_tchannel_top\" : ROOT.kOrange}.items():\n",
    "        print(item, sample, type(MonteCarlo[item][sample]))\n",
    "        MonteCarlo[item][sample].SetFillColor(color)\n",
    "        MonteCarlo[item][sample].SetLineColor(color)\n",
    "        S[item].Add(MonteCarlo[item][sample])\n",
    "\n",
    "canvasas = dict()\n",
    "\n",
    "# canvas0 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas0.Draw()\n",
    "# canvasas['0'] = canvas0\n",
    "\n",
    "# canvas1 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas1.Draw()\n",
    "# canvasas['1'] = canvas1\n",
    "\n",
    "# canvas2 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas2.Draw()\n",
    "# canvasas['2'] = canvas2\n",
    "\n",
    "# canvas3 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas3.Draw()\n",
    "# canvasas['3'] = canvas3\n",
    "\n",
    "# canvas4 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas4.Draw()\n",
    "# canvasas['4'] = canvas4\n",
    "\n",
    "# canvas5 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas5.Draw()\n",
    "# canvasas['5'] = canvas5\n",
    "\n",
    "# canvas6 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas6.Draw()\n",
    "# canvasas['6'] = canvas6\n",
    "\n",
    "# canvas7 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas7.Draw()\n",
    "# canvasas['7'] = canvas7\n",
    "\n",
    "# canvas8 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas8.Draw()\n",
    "# canvasas['8'] = canvas8\n",
    "\n",
    "# canvas9 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_initial\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas9.Draw()\n",
    "# canvasas['9'] = canvas9\n",
    "\n",
    "# canvas10 = ROOT.TCanvas(\"c_met_before_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_before_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_before_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas10.Draw()\n",
    "# canvasas['10'] = canvas10\n",
    "\n",
    "# canvas11 = ROOT.TCanvas(\"c_met_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"met_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"met_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas11.Draw()\n",
    "# canvasas['11'] = canvas11\n",
    "\n",
    "# canvas12 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas12.Draw()\n",
    "# canvasas['12'] = canvas12\n",
    "\n",
    "# canvas13 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas13.Draw()\n",
    "# canvasas['13'] = canvas13\n",
    "\n",
    "# canvas14 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas14.Draw()\n",
    "# canvasas['14'] = canvas14\n",
    "\n",
    "# canvas15 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas15.Draw()\n",
    "# canvasas['15'] = canvas15\n",
    "\n",
    "# canvas16 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas16.Draw()\n",
    "# canvasas['16'] = canvas16\n",
    "\n",
    "# canvas17 = ROOT.TCanvas(\"c_leading_isolated_electron_pt_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_pt_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_pt_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas17.Draw()\n",
    "# canvasas['17'] = canvas17\n",
    "\n",
    "# canvas18 = ROOT.TCanvas(\"c_leading_isolated_electron_eta_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_eta_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_eta_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas18.Draw()\n",
    "# canvasas['18'] = canvas18\n",
    "\n",
    "# canvas19 = ROOT.TCanvas(\"c_leading_isolated_electron_phi_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_phi_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_phi_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas19.Draw()\n",
    "# canvasas['19'] = canvas19\n",
    "\n",
    "# canvas20 = ROOT.TCanvas(\"c_leading_isolated_electron_mass_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_mass_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_mass_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas20.Draw()\n",
    "# canvasas['20'] = canvas20\n",
    "\n",
    "# canvas21 = ROOT.TCanvas(\"c_leading_isolated_electron_charge_after_met_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_electron_charge_after_met_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_electron_charge_after_met_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas21.Draw()\n",
    "# canvasas['21'] = canvas21\n",
    "\n",
    "# canvas22 = ROOT.TCanvas(\"c_number_of_jets_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jets_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jets_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas22.Draw()\n",
    "# canvasas['22'] = canvas22\n",
    "\n",
    "\n",
    "\n",
    "# canvas24 = ROOT.TCanvas(\"c_leading_isolated_muon_pt_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_pt_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_pt_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas24.Draw()\n",
    "# canvasas['24'] = canvas24\n",
    "\n",
    "# canvas25 = ROOT.TCanvas(\"c_leading_isolated_muon_eta_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_eta_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_eta_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas25.Draw()\n",
    "# canvasas['25'] = canvas25\n",
    "\n",
    "# canvas26 = ROOT.TCanvas(\"c_leading_isolated_muon_phi_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_phi_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_phi_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas26.Draw()\n",
    "# canvasas['26'] = canvas26\n",
    "\n",
    "# canvas27 = ROOT.TCanvas(\"c_leading_isolated_muon_mass_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas27.Draw()\n",
    "# canvasas['27'] = canvas27\n",
    "\n",
    "# canvas28 = ROOT.TCanvas(\"c_leading_isolated_muon_charge_after_jet_cut\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge_after_jet_cut\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge_after_jet_cut\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas28.Draw()\n",
    "# canvasas['28'] = canvas28\n",
    "\n",
    "# canvas29 = ROOT.TCanvas(\"c_number_of_jpsi_muons_initial\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jpsi_muons_initial\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons_initial\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas29.Draw()\n",
    "# canvasas['29'] = canvas29\n",
    "\n",
    "# canvas30 = ROOT.TCanvas(\"c_number_of_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"number_of_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"number_of_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas30.Draw()\n",
    "# canvasas['30'] = canvas30\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas31 = ROOT.TCanvas(\"c_leading_isolated_muon_pt\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas31.Draw()\n",
    "canvasas['31'] = canvas31\n",
    "\n",
    "canvas32 = ROOT.TCanvas(\"c_leading_isolated_muon_eta\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas32.Draw()\n",
    "canvasas['32'] = canvas32\n",
    "\n",
    "canvas33 = ROOT.TCanvas(\"c_leading_isolated_muon_phi\", \"\", 800, 800)\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"leading_isolated_muon_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"leading_isolated_muon_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33.Draw()\n",
    "canvasas['33'] = canvas33\n",
    "\n",
    "canvas33a = ROOT.TCanvas(\"c_isolated_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"isolated_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"isolated_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas33a.Draw()\n",
    "canvasas['33a'] = canvas33a\n",
    "\n",
    "canvas34a = ROOT.TCanvas(\"c_number_of_jets\", \"\", 800, 800)\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"number_of_jets\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"number_of_jets\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas34a.Draw()\n",
    "canvasas['34a'] = canvas34a\n",
    "\n",
    "canvas35 = ROOT.TCanvas(\"c_jet1_pt\", \"\", 800, 800)\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas35.Draw()\n",
    "canvasas['35'] = canvas35\n",
    "\n",
    "canvas36 = ROOT.TCanvas(\"c_jet2_pt\", \"\", 800, 800)\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas36.Draw()\n",
    "canvasas['36'] = canvas36\n",
    "\n",
    "canvas37 = ROOT.TCanvas(\"c_jet1_eta\", \"\", 800, 800)\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas37.Draw()\n",
    "canvasas['37'] = canvas37\n",
    "\n",
    "canvas38 = ROOT.TCanvas(\"c_jet2_eta\", \"\", 800, 800)\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas38.Draw()\n",
    "canvasas['38'] = canvas38\n",
    "\n",
    "canvas39 = ROOT.TCanvas(\"c_jet1_phi\", \"\", 800, 800)\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet1_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet1_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas39.Draw()\n",
    "canvasas['39'] = canvas39\n",
    "\n",
    "canvas40 = ROOT.TCanvas(\"c_jet2_phi\", \"\", 800, 800)\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jet2_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jet2_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas40.Draw()\n",
    "canvasas['40'] = canvas40\n",
    "\n",
    "canvas41 = ROOT.TCanvas(\"c_transverse_mass\", \"\", 800, 800)\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"transverse_mass\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"transverse_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas41.Draw()\n",
    "canvasas['41'] = canvas41\n",
    "\n",
    "canvas42 = ROOT.TCanvas(\"c_ht\", \"\", 800, 800)\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"ht\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"ht\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas42.Draw()\n",
    "canvasas['42'] = canvas42\n",
    "\n",
    "canvas42a = ROOT.TCanvas(\"c_met\", \"\", 800, 800)\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"met\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"met\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# ROOT.TRatioPlot(RealData[\"met\"][\"SingleMuon2018\"],MonteCarlo[\"met_after_met_cut\"][\"TTToSemiLeptonic\"]).Draw(\"PE1\")\n",
    "canvas42a.Draw()\n",
    "canvasas['42a'] = canvas42a\n",
    "\n",
    "canvas43 = ROOT.TCanvas(\"c_jpsi_muons_pt\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_pt\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas43.Draw()\n",
    "canvasas['43'] = canvas43\n",
    "\n",
    "canvas44 = ROOT.TCanvas(\"c_jpsi_muons_eta\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_eta\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas44.Draw()\n",
    "canvasas['44'] = canvas44\n",
    "\n",
    "canvas45 = ROOT.TCanvas(\"c_jpsi_muons_phi\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_phi\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas45.Draw()\n",
    "canvasas['45'] = canvas45\n",
    "\n",
    "# canvas46 = ROOT.TCanvas(\"c_jpsi_muons_charge\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_charge\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_charge\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas46.Draw()\n",
    "# canvasas['46'] = canvas46\n",
    "\n",
    "# canvas61b = ROOT.TCanvas(\"c_jpsi_muon_pf_rel_iso_03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_rel_iso_03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_rel_iso_03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61b.Draw()\n",
    "# canvasas['61b'] = canvas61b\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas33a = ROOT.TCanvas(\"c_leading_isolated_muon_mass\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_mass\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_mass\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas33a.Draw()\n",
    "# canvasas['33a'] = canvas33a\n",
    "\n",
    "# canvas34 = ROOT.TCanvas(\"c_leading_isolated_muon_charge\", \"\", 800, 800)\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"leading_isolated_muon_charge\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"leading_isolated_muon_charge\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas34.Draw()\n",
    "# canvasas['34'] = canvas34\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas47 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_mass_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_mass_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas47.Draw()\n",
    "# canvasas['47'] = canvas47\n",
    "\n",
    "# canvas48 = ROOT.TCanvas(\"c_invariant_masses_zoomed\", \"\", 800, 800)\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"invariant_masses_zoomed\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"invariant_masses_zoomed\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas48.Draw()\n",
    "# canvasas['48'] = canvas48\n",
    "\n",
    "canvas49 = ROOT.TCanvas(\"c_invariant_mass_jpsi_muons_and_isolated_muons\", \"\", 800, 800)\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"invariant_mass_jpsi_muons_and_isolated_muons\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"invariant_mass_jpsi_muons_and_isolated_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas49.Draw()\n",
    "canvasas['49'] = canvas49\n",
    "\n",
    "# canvas50 = ROOT.TCanvas(\"c_delta_eta_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas50.Draw()\n",
    "# canvasas['50'] = canvas50\n",
    "\n",
    "# canvas51 = ROOT.TCanvas(\"c_delta_phi_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas51.Draw()\n",
    "# canvasas['51'] = canvas51\n",
    "\n",
    "# canvas52 = ROOT.TCanvas(\"c_delta_r_between_isolated_and_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_and_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_and_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas52.Draw()\n",
    "# canvasas['52'] = canvas52\n",
    "\n",
    "# canvas53 = ROOT.TCanvas(\"c_jpsi_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas53.Draw()\n",
    "# canvasas['53'] = canvas53\n",
    "\n",
    "# canvas54 = ROOT.TCanvas(\"c_jpsi_eta\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_eta\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_eta\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas54.Draw()\n",
    "# canvasas['54'] = canvas54\n",
    "\n",
    "# canvas55 = ROOT.TCanvas(\"c_jpsi_phi\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_phi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_phi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas55.Draw()\n",
    "# canvasas['55'] = canvas55\n",
    "\n",
    "# canvas56 = ROOT.TCanvas(\"c_delta_eta_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas56.Draw()\n",
    "# canvasas['56'] = canvas56\n",
    "\n",
    "# canvas57 = ROOT.TCanvas(\"c_delta_phi_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas57.Draw()\n",
    "# canvasas['57'] = canvas57\n",
    "\n",
    "# canvas58 = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58.Draw()\n",
    "# canvasas['58'] = canvas58\n",
    "\n",
    "\n",
    "# canvas58a = ROOT.TCanvas(\"c_delta_r_between_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas58a.Draw()\n",
    "# canvasas['58a'] = canvas58a\n",
    "\n",
    "\n",
    "# canvas59 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_eta_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_eta_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas59.Draw()\n",
    "# canvasas['59'] = canvas59\n",
    "\n",
    "# canvas60 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_phi_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_phi_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas60.Draw()\n",
    "# canvasas['60'] = canvas60\n",
    "\n",
    "# canvas61 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi\", \"\", 800, 800)\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"delta_r_between_isolated_muon_and_jpsi\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"delta_r_between_isolated_muon_and_jpsi\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61.Draw()\n",
    "# canvasas['61'] = canvas61\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# canvas61a = ROOT.TCanvas(\"c_jpsi_muon_pt\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pt\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pt\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61a.Draw()\n",
    "# canvasas['61a'] = canvas61a\n",
    "\n",
    "\n",
    "\n",
    "# canvas61c = ROOT.TCanvas(\"c_jpsi_muon_pf_iso_id\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muon_pf_iso_id\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muon_pf_iso_id\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61c.Draw()\n",
    "# canvasas['61c'] = canvas61c\n",
    "\n",
    "# canvas61d = ROOT.TCanvas(\"c_isolated_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"isolated_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"isolated_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61d.Draw()\n",
    "# canvasas['61d'] = canvas61d\n",
    "\n",
    "# canvas61e = ROOT.TCanvas(\"c_jpsi_muons_in_range_pfRelIso03_all\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_muons_in_range_pfRelIso03_all\"].Draw(\"HIST S SAME\")\n",
    "# RealData[\"jpsi_muons_in_range_pfRelIso03_all\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61e.Draw()\n",
    "# canvasas['61e'] = canvas61e\n",
    "\n",
    "# canvas61f = ROOT.TCanvas(\"c_jpsi_mass_muons_in_range\", \"\", 800, 800)\n",
    "# #RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "# S[\"jpsi_mass_muons_in_range\"].Draw(\"HIST S\")\n",
    "# RealData[\"jpsi_mass_muons_in_range\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "# canvas61f.Draw()\n",
    "# canvasas['61f'] = canvas61f\n",
    "\n",
    "# canvas61g = ROOT.TCanvas(\"c_pt_at_low_delta_r\", \"\", 800, 800)\n",
    "# RealData[\"pt_at_low_delta_r\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas61g.Draw()\n",
    "# canvasas['61g'] = canvas61g\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "canvas96 = ROOT.TCanvas(\"c_jpsi_mass_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_mass_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_mass_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas96.Draw()\n",
    "canvasas['96'] = canvas96\n",
    "\n",
    "canvas97 = ROOT.TCanvas(\"c_delta_eta_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas97.Draw()\n",
    "canvasas['97'] = canvas97\n",
    "\n",
    "canvas98 = ROOT.TCanvas(\"c_delta_phi_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas98.Draw()\n",
    "canvasas['98'] = canvas98\n",
    "\n",
    "canvas99 = ROOT.TCanvas(\"c_delta_r_for_jpsi_muons_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_for_jpsi_muons_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_for_jpsi_muons_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas99.Draw()\n",
    "canvasas['99'] = canvas99\n",
    "\n",
    "canvas100 = ROOT.TCanvas(\"c_jpsi_muons_charge_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muons_charge_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muons_charge_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas100.Draw()\n",
    "canvasas['100'] = canvas100\n",
    "\n",
    "canvas101 = ROOT.TCanvas(\"c_jpsi_pt_with_muon_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_pt_with_muon_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_pt_with_muon_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas101.Draw()\n",
    "canvasas['101'] = canvas101\n",
    "\n",
    "# canvas101a = ROOT.TCanvas(\"c_jpsi_muon_pts_in_peak\", \"\", 800, 800)\n",
    "# RealData[\"jpsi_muon_pts_in_peak\"][\"SingleMuon2018\"].Draw(\"P\")\n",
    "# canvas101a.Draw()\n",
    "# canvasas['101a'] = canvas101a\n",
    "\n",
    "canvas102 = ROOT.TCanvas(\"c_jpsi_muon_isolation_in_peak\", \"\", 800, 800)\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"jpsi_muon_isolation_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"jpsi_muon_isolation_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas102.Draw()\n",
    "canvasas['102'] = canvas102\n",
    "\n",
    "canvas104 = ROOT.TCanvas(\"c_delta_eta_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_eta_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas104.Draw()\n",
    "canvasas['104'] = canvas104\n",
    "\n",
    "canvas105 = ROOT.TCanvas(\"c_delta_phi_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_phi_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas105.Draw()\n",
    "canvasas['105'] = canvas105\n",
    "\n",
    "canvas106 = ROOT.TCanvas(\"c_delta_r_between_isolated_muon_and_jpsi_in_peak\", \"\", 800, 800)\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1\")\n",
    "S[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"].Draw(\"HIST S SAME\")\n",
    "RealData[\"delta_r_between_isolated_muon_and_jpsi_in_peak\"][\"SingleMuon2018\"].Draw(\"PE1 SAME\")\n",
    "canvas106.Draw()\n",
    "canvasas['106'] = canvas106"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening PDF\n",
      "Closing PDF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: pdf file 8_18_22_6Gev_dR_lt_2.pdf has been created using the current canvas\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf\n",
      "Info in <TCanvas::Print>: Current canvas added to pdf file 8_18_22_6Gev_dR_lt_2.pdf and file closed\n"
     ]
    }
   ],
   "source": [
    "for kn, k in enumerate(canvasas.keys()):\n",
    "    \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvasas[k].SaveAs('8_18_22_6Gev_dR_lt_2.pdf(')\n",
    "    \n",
    "    elif kn == len(canvasas) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvasas[k].SaveAs('8_18_22_6Gev_dR_lt_2.pdf)')\n",
    "    \n",
    "    else:\n",
    "        canvasas[k].SaveAs('8_18_22_6Gev_dR_lt_2.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "era = \"2017\"\n",
    "channel = \"Mu\"\n",
    "\n",
    "def DrawStack(MonteCarlo, Data, separator = \"___\"):\n",
    "    era, channel, sample, variable, systematic = list(MonteCarlo.values())[0].GetName().split(separator)\n",
    "    name = \"_\".join([\"stack\", era, channel, variable, systematic])\n",
    "    colors = {\"TTToSemiLeptonic\" : ROOT.kRed}\n",
    "    stack = ROOT.THStack(name, \"\")\n",
    "    \n",
    "    canvas = ROOT.TCanvas(name.replace(\"stack\", \"canvas\"), \"\", 800, 800)\n",
    "  \n",
    "    \n",
    "    for sample, hist in MonteCarlo.items():\n",
    "        hist.SetFillColor(colors.get(sample, ROOT.kMagenta))\n",
    "        hist.SetLineColor(colors.get(sample, ROOT.kMagenta))\n",
    "        stack.Add(hist)\n",
    "        \n",
    "    aggregate = None\n",
    "    \n",
    "    for sample, hist in Data.items():\n",
    "        if aggregate == None:\n",
    "            aggregate = hist.Clone(hist.GetName().replace(\"sample\", \"allData\"))\n",
    "            \n",
    "        else:\n",
    "            aggregate += hist\n",
    "    \n",
    "    maxima = []\n",
    "    minima = []\n",
    "    maxima.append(stack.GetMaximum())\n",
    "    maxima.append(aggregate.GetMaximum())\n",
    "    minima.append(stack.GetMinimum())\n",
    "    minima.append(aggregate.GetMinimum())\n",
    "    \n",
    "    stack.SetMinimum(min(minima))\n",
    "    stack.SetMaximum(max(maxima))\n",
    "    \n",
    "    stack.Draw(\"HIST S\")\n",
    "    aggregate.Draw(\"PE1 SAME\")\n",
    "    \n",
    "    canvas.BuildLegend()\n",
    "    \n",
    "    return stack, aggregate, canvas\n",
    "\n",
    "for kn, variable in enumerate(variables):\n",
    "        \n",
    "    MonteCarlo, RealData = GetHistos(f, era, channel, variable)\n",
    "    \n",
    "    stack, aggregate, canvas = DrawStack(MonteCarlo, RealData)\n",
    "       \n",
    "    if kn == 0:\n",
    "        print(\"Opening PDF\")\n",
    "        canvas.SaveAs('December2.pdf(')\n",
    "\n",
    "    elif kn == len(variables) - 1:\n",
    "        print(\"Closing PDF\")\n",
    "        canvas.SaveAs('December2.pdf)')\n",
    "\n",
    "    else:\n",
    "        canvas.SaveAs('December2.pdf')\n",
    "        \n",
    "    canvas.SaveAs(variable + 'December2.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on _Helper in module _sitebuiltins object:\n",
      "\n",
      "class _Helper(builtins.object)\n",
      " |  Define the builtin 'help'.\n",
      " |  \n",
      " |  This is a wrapper around pydoc.help that provides a helpful message\n",
      " |  when 'help' is typed at the Python interactive prompt.\n",
      " |  \n",
      " |  Calling help() at the Python prompt starts an interactive help session.\n",
      " |  Calling help(thing) prints help for the python object 'thing'.\n",
      " |  \n",
      " |  Methods defined here:\n",
      " |  \n",
      " |  __call__(self, *args, **kwds)\n",
      " |      Call self as a function.\n",
      " |  \n",
      " |  __repr__(self)\n",
      " |      Return repr(self).\n",
      " |  \n",
      " |  ----------------------------------------------------------------------\n",
      " |  Data descriptors defined here:\n",
      " |  \n",
      " |  __dict__\n",
      " |      dictionary for instance variables (if defined)\n",
      " |  \n",
      " |  __weakref__\n",
      " |      list of weak references to the object (if defined)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(help)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
